<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>机器之心</title>
    <link>http://www.iwgc.cn/list/670</link>
    <description>人与科技的美好关系</description>
    <item>
      <title>对话AAAI-17论文作者Yusuf Erol、吴翼和李磊：从预设参数滤波算法到概率编程</title>
      <link>http://www.iwgc.cn/link/4709443</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; line-height: 28.4444px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; max-width: 100%; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; max-width: 100%; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 255, 255); background-color: rgb(117, 117, 118); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心原创&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; max-width: 100%; font-family: inherit; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; max-width: 100%; min-height: 1em; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术分析师：Jenny&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; max-width: 100%; min-height: 1em; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;编辑：黄小天、吴攀&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="max-width: 100%; min-height: 1em; text-align: justify; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;新春过后不久（2 月 4 日- 9 日），我们就迎来了 2017 年人工智能领域的首个重磅会议——AAAI-17，这也是第 31 届 AAAI 人工智能大会。机器之心在这场会议前后对该会议的亮点进行了跟踪报道和深度解读，详情参阅机器之心的相关报道《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722876&amp;amp;idx=1&amp;amp;sn=a1e717562a793d56613eb6793ad69028&amp;amp;chksm=871b1642b06c9f54b1a0f994a3211cd30a72d2180b3ac948dd5a0768fb9d0866cad19fa0c188&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722876&amp;amp;idx=1&amp;amp;sn=a1e717562a793d56613eb6793ad69028&amp;amp;chksm=871b1642b06c9f54b1a0f994a3211cd30a72d2180b3ac948dd5a0768fb9d0866cad19fa0c188&amp;amp;scene=21#wechat_redirect"&gt;人工智能顶级会议 AAAI-17 亮点前瞻：洞见人工智能最前沿&lt;/a&gt;》、《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722858&amp;amp;idx=2&amp;amp;sn=681e7bdb4725e52f549057f08e29152b&amp;amp;chksm=871b1654b06c9f42728c3df7e26178749778687a9b7507e3b042d33474931e6b0bf0cdd385c2&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722858&amp;amp;idx=2&amp;amp;sn=681e7bdb4725e52f549057f08e29152b&amp;amp;chksm=871b1654b06c9f42728c3df7e26178749778687a9b7507e3b042d33474931e6b0bf0cdd385c2&amp;amp;scene=21#wechat_redirect"&gt;提升人工智能准确度, 微软解读多项 AAAI-17 研究&lt;/a&gt;》、《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723010&amp;amp;idx=3&amp;amp;sn=5944c3748ed56ef9867fb7a6674d26cc&amp;amp;chksm=871b16bcb06c9faabc2471be9b9fe734da1e8214d608b0a6dc65f2a7998cb374e8c96bc3d5f1&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723010&amp;amp;idx=3&amp;amp;sn=5944c3748ed56ef9867fb7a6674d26cc&amp;amp;chksm=871b16bcb06c9faabc2471be9b9fe734da1e8214d608b0a6dc65f2a7998cb374e8c96bc3d5f1&amp;amp;scene=21#wechat_redirect"&gt;MIT AAAI-17 研究展示:为规划算法加入人类直觉&lt;/a&gt;》、《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723081&amp;amp;idx=1&amp;amp;sn=4caca1d0c06adfb4270de3746415862f&amp;amp;chksm=871b1777b06c9e6184de1ab4f9fe7d0982a6a72d288a29ede02c749b8898e708a7d3b07f9549&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723081&amp;amp;idx=1&amp;amp;sn=4caca1d0c06adfb4270de3746415862f&amp;amp;chksm=871b1777b06c9e6184de1ab4f9fe7d0982a6a72d288a29ede02c749b8898e708a7d3b07f9549&amp;amp;scene=21#wechat_redirect"&gt;AAAI-17 获奖论文深度解读（上）：从无标签监督学习到人工智能道德框架&lt;/a&gt;》和《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723149&amp;amp;idx=2&amp;amp;sn=39107e29348191ece82961dcbb0303aa&amp;amp;chksm=871b1733b06c9e25e975ba6c6862b33ae523233726c420720ab7426fb48e501d3cc64e467419&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723149&amp;amp;idx=2&amp;amp;sn=39107e29348191ece82961dcbb0303aa&amp;amp;chksm=871b1733b06c9e25e975ba6c6862b33ae523233726c420720ab7426fb48e501d3cc64e467419&amp;amp;scene=21#wechat_redirect"&gt;AAAI-17 获奖论文深度解读（下）：蒙特卡罗定位和推荐系统&lt;/a&gt;》。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;而在本届 AAAI 大会上，华人力量的崛起也是一个非常值得关注的看点。在接收论文的列表上，我们也能很明显地看到大量华人研究者的名字，当然，其中有很多论文实际上是中外研究机构合作的成果，比如由加州大学伯克利分校和今日头条实验室合作发表的论文《一个用于时间模型中联合参数和状态估计的近似黑箱的在线算法（A Nearly-Black-Box Online Algorithm for Joint Parameter and State Estimation in Temporal Models）》。这篇论文的作者有来自伯克利电气工程与计算机科学系的 Yusuf B. Erol、吴翼（Yi Wu）和 Stuart Russell，以及来自今日头条实验室的李磊（Lei Li）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132881OH61tr.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;论文摘要：对于时间模型而言，在线的联合参数和状态估计是一个核心问题。现有的绝大多数方法不是受限于特定类别的模型（比如 Storvik 过滤器），就是计算成本过高（例如，particle MCMC）。我们提出了一种全新的近似黑箱算法（nearly-black-box algorithm）——预设参数滤波算法（Assumed Parameter Filter/APF），这是一种用于状态变量的粒子滤波（particle filtering）和用于参数变量的预设密度滤波（assumed density filtering）的混合。它具有以下优势：（a）它是在线的并且在计算上是高效的；（b）适用于带有任意转变动态（transition dynamics）的离散和连续参数空间。和一些标准算法相比，在计算负载固定时，APF 在几种不同的模型上都生成了更加准确的结果。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;大会结束之后，机器之心对 Yusuf B. Erol、吴翼和李磊进行了专访，请他们解读了这份研究成果并谈了谈对其它一些问题的看法。在此之前，先让我们对本文的这三位主角作一个简单介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Bugra Erol 和吴翼都是著名计算机科学学者 Stuart Russell 教授的博士学生，其中吴翼参与过的论文《Value Iteration Networks》在去年 12 月的 NIPS 2016 上获最佳论文奖（参看报道《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650721198&amp;amp;idx=1&amp;amp;sn=accdd701751ab9678285f3cdf073304f&amp;amp;chksm=871b0fd0b06c86c6fa49bbae856898920e26c4456bc02be42a947d23fe2b593110e911bf54da&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650721198&amp;amp;idx=1&amp;amp;sn=accdd701751ab9678285f3cdf073304f&amp;amp;chksm=871b0fd0b06c86c6fa49bbae856898920e26c4456bc02be42a947d23fe2b593110e911bf54da&amp;amp;scene=21#wechat_redirect"&gt;机器之心对话 NIPS 2016 最佳论文作者：如何打造新型强化学习观？&lt;/a&gt;》）。而现任今日头条科学家、头条实验室总监的李磊也曾在伯克利进行过博士后研究（参看机器之心的专访《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650718173&amp;amp;idx=2&amp;amp;sn=7afb370ac67b7879f165bda12e4357d9&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650718173&amp;amp;idx=2&amp;amp;sn=7afb370ac67b7879f165bda12e4357d9&amp;amp;scene=21#wechat_redirect"&gt;头条实验室科学家李磊：准确率更高的问答系统和概率程序语言&lt;/a&gt;》）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;以下是机器之心对该论文的这三位作者的采访内容：&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;论文解读&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：首先请为我们简单介绍一下这篇论文的研究成果。&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：人工智能研究的恒久主题之一是对通用表示框架和快速推理算法的探索。时序概率模型中（即随时间变化的模型），参数和隐变量的在线联合估计通常比较困难。本文针对非常广泛的概率时序模型，提出一个通用且高效的参数和隐变量估计算法，称作预设参数滤波算法（Assumed Parameter Filter/APF）。这个算法将可用来解决几乎任意的时间序列模型中推理问题，且是在线估计，所以可以解决很长或者持续时间序列的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您提出的算法有什么看点？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：我们的算法有以下特色：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;1. 通用，适用于（几乎）任意时间序列模型（状态空间模型）；&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;2. 适用于持续时间序列数据；&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;3. 可以处理未知状态和参数的联合估计，之前的算法很多都只能估计未知状态，而能估计未知参数的算法都是离线的，比较慢；&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;4. 理论上可以逼近真实解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：可以举例说明一下吗？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：举个例子，医院急症看护病房每个病人都接了很多监测仪器，持续测量血压、心跳、呼吸等生理指标。很多指标的采样频率很高，数据量非常大，靠护士监管看不过来，需要通过算法从这些持续监测的生理指标时间序列数据中实时自动的分析出病人状态，以便预测并应对突发情况，比如突发休克。这个问题一个方法是通过建立多维时间序列模型，这些模型刻画了人身体内生理运转状况，其中有些变量是没有直接监测到的（通常称作状态（state）），比如血管内流量大小和速度，还有一些是因人而异的参数比如脑容量大小、身高和体重等。需要解决的问题是有了时间序列模型和观测数据（比如血压和心跳）后，如何实时快速的估计出未知的变量和参数。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;为了方便的实验验证各种模型，需要一个通用的表示框架，以及一个通用黑盒的推理方法。我们采用概率编程语言 BLOG 作为表述模型的框架，这个框架可以描述非常广泛的模型，我们论文解决的就是在通用框架里面有了观测数据、有了模型时，如何快速且自动地做推理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;机器之心：这个算法能够怎样帮助用户？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：概率程序可以给一线工程师和应用方提供简单快速验证各种设想的方案，使用方只要熟悉他需要解决的问题学会这个建模语言，即使不了解机器学习如何做推理，也可以通过概率程序的自动推理引擎来做解决方案，极大地降低了机器学习使用门槛。通过概率程序来表达时间序列模型也有同样的便利。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;机器之心：APF 和以往的 SSM 比有那些优势？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：传统 SSM 推理算法（Particle filter, PMCMC 等）要么只能估计动态隐变量，不能估计静态参数（SMC algorithms)；要么只适用特定模型（Extended Parameter Filter）; 要么虽然通用但速度很慢，是离线算法（PMCMC)。我们的算法在上述三方面都有优势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：SSM 的适合的应用有哪些？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：SSM 适合应用于需要对时间变化建模的数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您认为输入的预设参数会对结果造成什么影响？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：我们算法的误差一方面来自于用于逼近的统计量是有限维度的。只要模型本身的真实后验概率可以计算，我们算法就可以工作得很好。尤其是如果参数的真实后验分布是高斯分布，那么就可以在理论上证明算法收敛。应用中发现实际效果比理论更好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：可以使用一个生成器来自动生成不同的预设密度吗？可以变成完全的黑箱算法吗？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;吴翼：这是一个很有趣的问题，要让算法真正完全黑箱（black-box），需要对任意近似分布（approximate distribution）都能进行统计量（sufficient statistics）的更新计算。对于任意指数类（exponential family）的分布，可以利用变分推理（variational inference）技术进行后验概率计算。当然，自然而然的问题是：我们能不能用一个程序来帮助人自动做数学计算呢？从这个大的角度看，这是一个很难的问题，也是很有趣的问题。学术界有非常多的尝试，比如大家熟知的 Mathematica 软件就是一个成功的产品，现在大家也尝试用深度学习的方法让 AI 自动进行数学定理的证明。希望在不久的将来，AI 可以完成开放性问题的数学证明。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：今日头条在这方面有哪些计划和打算，会把这项研究应用到产品中吗？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：有好几个可能应用，今日头条的主产品是个性化内容推荐，把推荐做好，需要对文章图片视频进行分析，理解文章里面有哪些人物和事件，多个文章里面的同一事件是如何演化的，这里需要时序模型；今日头条的产品运营中有很多记录的时间序列数据，比如每个时刻各个地区的访问量、阅读停留时间，时间序列模型也可以对这些数据建模；我们的数据中心检测同样有很多数据，比如每分每秒每个服务器的负载、流量、温度等，通过时间序列对其建模可以做预测，进行灾害预警。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;关于概率编程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：听说您们负责了一个 DARPA 项目的子项目 PPAML，能简单介绍一下吗？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;吴翼：PPAML 的全名是 Probabilistic Programming for Advanced Machine Learning。是由 DARPA（Defense Advanced Research Projects Agency）推动的一项历时 4 年的基础科学研究。DARPA 中文名是国防高等研究计划署，隶属于美国国防部，致力于各种前瞻性研究，历史上一直都是各种黑科技的孵化器和诞生器。从基础的科学研究到美国绝密的武器装备的研究，DARPA 都有涉及。比如互联网的雏形就诞生于 DARPA，现在普及大众的人脸识别技术也是 DARPA 最先推动的，美国的很多自动驾驶、机器人、无人机技术也是 DARPA 推动的。PPAML 项目作为一项基础科学研究（当然不是绝密的军工项目了，不然我作为中国人也不可能参与其中），旨在推动概率编程语言的进步和发展，来让各个科学领域享受到计算机科学和机器学习科学的红利，提高各个科学领域的数据分析效率以推动整个科学界的更快发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：请您简要介绍一下概率编程（PP）和深度学习的区别，以及各自的优势和劣势。&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：概率编程是通过程序语言来定义概率模型，由通用的概率推理系统来自动求解。深度学习的模型也可以通过程序来定义和求解，这一点上两者是相似的。最大的区别在表达能力和推理算法，深度学习的模型是可导（或次可导）函数构成的，概率程序表达能力通常更强，神经网络模型可以表达成为概率程序的一个特殊子类别。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;由于深度学习的模型具有很强的特殊性，因此深度学习系统可以相对容易地采用梯度下降算法来求解。而概率程序的通用算法通常基于马尔可夫链蒙特卡罗法（MCMC）。广义而言，概率编程语言考虑的模型是任意可以用程序表达的结构：而我们知道程序中有分支（if）、循环（for loop）、递归（recursion），一个图灵完备（Turing complete）的编程语言需要能够表达任意可在图灵机上执行的程序。由于概率编程语言具有极强的表达性，这给自动推断系统带来了很大的难度——当然，因为通用，最大的局限是推理速度缓慢。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;我们的工作就是在保持概率编程表达性的前提下提高推理速度。也正是由于概率编程强大的表达能力，可以让概率编程惠及更多的受众，比如其他领域的科学家、认知科学家、数据科学家等等。使用者不需要对机器学习的推理算法有深入了解，只需要掌握建模语言，即可方便快速地构建和应用机器学习模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您认为用编译的方法来优化机器学习的意义大吗？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;吴翼：由于概率编程语言强大的模型表示能力，其背后的通用推理系统往往效率低下。系统的效率低下往往有着两个方面的原因：1. 推断算法收敛速度慢； 2. 算法执行和系统实现效率低下。要提高概率编程语言的推断效率，显然我们需要双管齐下。概率编程语言和普通的编程语言（比如 Python、C、Java）的编译有着本质的不同。对于普通编程语言（例如 C 语言），编译器并不会更改程序员写的代码语义，只是在代码上做同语义的改写。比如程序员写了 print("hello world!")，那么正确的编译器不论怎么改写，用户执行编译后的可执行代码，执行的结果都是在屏幕上显示「hello world」。然而对于概率编程语言却并不是这样：程序员只是用编程语言描述了模型是什么，至于怎么根据这个模型计算、算法怎么实现，都是编译器需要操心的事情。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;一般来说概率编程语言所采用的系统设计，往往是读入用户输入的模型，并存储成某种数据结构，然后选用开发人员预先写好的某个算法，在这个数据结构上进行计算。这样的执行方式是解释性的（interpretive，比如 Python 就是解释性的语言），有很多的冗余。而一个好的概率编程语言编译器，需要对于用户输入的不同模型结合选用的算法做深度的分析和优化，并自动生成专门对于当前模型定制的算法实现。比如我们的 Swift 编译器，就可以在采用相同算法的前提下，将概率编程语言的推断速度提高 100 倍以上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：这个研究在哪些方向上还能继续拓展？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Yusuf Erol：非常高维的状态空间模型中的推理算法，理论上更强的结果等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;吴翼：引入更多程序语言编译优化的算法来加速推理。比如部分计算。我们也在一直完善和加强 compiler，增加特性，提高性能，增加可用性等等。我们也在考加更多的算法让整个概率编程语言系统有更多的算法可用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;其它问题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您如何评价这届 AAAI 会议中的华人力量（华人的论文数量和质量以及代表性论文）？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：现在人工智能领域的研究者越来越多，也越来越多样化，他们研究着更多样的问题，产出着更多更好的成果，这是很好的趋势。但作为科研工作者，我们更关注研究本身，但不关注这个研究是什么种族的人做的。当然，我们也尽一切努力推动中国的人工智能研究，这也是为科学进步做贡献。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：科学理念上的信仰对您搞研究重要吗？对不同理念的研究应该持什么态度？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：之前做时间序列用贝叶斯模型多，最近几年做自然语言的问题用神经网络模型多。派别之争对我来说意义不大，但我喜欢贝叶斯模型的清晰结构和可解释性，也喜欢神经网络在大量标注数据下的效果，Frequentist 方法用得少却不排斥。科学研究讲求方法论，多样化才有可持续性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;机器之心：在您看来人工智能现阶段是更受限于算法还是运算力？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：人工智能模型、推理算法、计算速度一直是紧密关联，螺旋上升的。目前三者都各自有挑战。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：今日头条在人工智能上主要有哪些方向的研究？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：围绕自然语言理解和图像视觉做了一些研究，自然语言理解方面，比如新闻生成、自动摘要、文本分类、自动问答、评论分析；图像视觉方面，比如视频内容理解、分类、相似和重复内容识别、物体检测追踪等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您还希望通过人工智能帮助哪些其它方向上的发展？&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;李磊：比如医疗监控、辅助诊断、心理建模分析、环境变量建模分析等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; text-align: justify; line-height: 1.75em; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-style: normal; color: rgb(127, 127, 127); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-style: normal; color: rgb(127, 127, 127); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心原创，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-style: normal; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); white-space: normal; font-size: 18px; line-height: 1.75em; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); white-space: normal; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(217, 33, 66); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); white-space: normal; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); white-space: normal; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>专访 | 中国95后流行色是什么？人工智能给出的答案是它</title>
      <link>http://www.iwgc.cn/link/4709444</link>
      <description>&lt;div class="article-content"&gt;&lt;section style="font-size: 16px; white-space: normal; line-height: 28.4444px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color:#ffffff"&gt;&lt;span style="background-color: rgb(117, 117, 118);"&gt;机器之心原创&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="color: rgb(62, 62, 62); padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者：老红、高静宜&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 14px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="color: rgb(62, 62, 62); font-size: 16px; white-space: normal; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;中国 95 后的流行色是什么？人工智能说是 RGB 值为 22/20/24 的「黑色」。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;纽约时间 2 月 13 日，QQ 空间、腾讯优图、唯品会亮相纽约时尚周，联手举办业界首个「AI+时尚」秀。三方还联合发布了《AI+时尚：中国 95 后流行色报告》，报告指出中国 95 后年轻人最喜欢的颜色是 RGB 值为 22/20/24 的「黑色」，并被命名为「95度黑」。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132882zsRMec.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;中国 95 后的服装颜色排行&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;得出上面的结果并非易事。据了解，腾讯优图借助了人工智能人脸识别与图像处理技术，分析 2016 年 QQ 空间相册千亿张公开的照片，结合唯品会 95 后服装销售大数据，最终发现「95 度黑」等上图中展示的中国 95 后流行色彩及时尚品味。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;虽然实现的技术过程可用上面的语句概述，但中间有着不少技术难点。机器之心对腾讯优图团队进行了专访，腾讯集团副总裁、优图实验室负责人梁柱，腾讯优图实验室总监黄飞跃博士分别为我们进行了解答。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：可否讲解一下找到 95 后流行色的技术过程和难点？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：基于机器学习的人脸识别和图像处理技术，一直以来都是未来技术发展热点，其应用范围、落地场景非常广泛。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;借助 QQ 空间相册的海量图像大数据及用户需求反馈，腾讯优图的 AI 图像识别技术已经发展得十分成熟，并在不同场景下进行广泛应用。此次与唯品会、张驰合作，是 AI 图像识别技术在时尚领域的一次应用探索。在大数据的基础上，我们通过精准识别用户年龄、锁定用户，并对其服装颜色进行精确分析，帮助设计师更好地捕捉用户喜好，找到灵感，从而去创作新的时尚风潮。找到 95 后流行色需要跨越两大技术难点：&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;一、人脸深度学习，智能识别年龄。&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;首先，精确分析不同年龄的流行色，需要对参与统计的人脸照片进行年龄识别。从 AI 的技术角度出发，首先要给计算机非常多不同年龄的人脸照片数据，然后通过人脸检测、人脸五官点定位、人脸归一化处理，再送到一个深度学习网络中训练获得模型，从而对照片人物进行年龄识别。在本次统计中，腾讯优图将误差控制在正负 3 岁内，保证数据统计的准确性。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;二、人衣分割算法，智能识别颜色。&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;对于流行色研究，最重要的就是对用户的衣服进行颜色分析，然后进行色系统计。空间里面用户上传的完全公开照片大多数是生活照，因此背景和颜色非常复杂，这是一大技术难点。为了实现准确的颜色获取，腾讯优图借助多项人工智能算法，包括人体检测、衣服分割，将人体和衣服从背景中分割出来。衣服分割的精度直接影响颜色统计的结果，目前腾讯优图的算法可以做到95%的像素分割精度，也就是说，背景区域被认为是衣服区域的比例，只占整个衣服区域的5%。精确分割之后，会针对衣服区域做颜色校正和主颜色分析，提取最显著的RGB颜色值作为衣服的主颜色。对这些提取的颜色值进行直方图统计，结合人脸年龄分析的结果，得到不同年龄分组的流行色分析结果。&lt;/span&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：95 后的限定涉及到一个年龄的判断，是否采用了新的算法？限定年龄段的人脸识别，其中最难的地方在哪里？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：年龄识别是一个比较典型的问题，关键在于准确率如何。腾讯优图积累了比较多数据，也有很好的算法和模型，能做到平均 3-5 岁的误差，这在行业是比较领先的。在较高的准确性上，我们的努力方向是最大化技术应用场景。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：人脸识别的核心问题之一是人脸图像像素之间高层语义的对齐，即人脸关键特征点的定位，错误的特征定位会导致提取的人脸描述特征严重变形，进而导致识别性能下降，腾讯优图是如何解决这个问题的？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：这个判断的核心还是在于识别的正确率，在特征定位上我们能做到 1 个像素误差左右，属于业界领先水平。另外在这次的流行色分析中，严重变形的人脸作为特例（一般也很少见）会被筛除，保证分析的准确性。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：面部识别是从像素层级抽取特征，那么面对最近流行的美颜（对图像进行高斯模糊）其模糊了人物线条会导致丢失部分信息而影响识别率，腾讯优图又是如何解决这个问题的呢？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：优图基于海量数据学习经验，搭建了一个优秀的模型，即使人脸模糊或有美颜 PS 效果，识别仍能做到很高的准确率，保持年龄误差在 3-5 岁，在业界是比较领先的。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;比如在身份证自拍照对比的人脸识别应用中，有的身份证人脸比较模糊，或者需要用一个人 10 年前的照片去辨识他现在的样子，这些模糊条件都对人脸识别提出了更高要求，我们优秀的模型和机器学习的鲁棒性兼容性，能发挥出更好的作用来兼容这些问题。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;但是不排除会有过度美颜或严重 PS 的特例情况，在这次流行色的分析里，我们会筛除这些特例，保证分析结果的准确性。当然如果在技术应用案例中出现这些案例，深度学习本身也有很高的鲁棒性和兼容性能够部分处理。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：能否介绍一下数据量，包括分析用的照片库以及训练用的大规模人脸年龄数据库？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：这是利用千亿公开照片库做的分析，覆盖了所有年龄段和全国地域，是一个全面而完整的精确分析。训练利用了数百万人脸数据库，从 10 岁到 70 岁间，每个年龄段都有数据，同时保证数据的均衡分布。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：流行色是一个已有的概念，每年权威色彩机构 Pantone 都会发布下一年的流行色，今年的是草木绿，是为来年的流行趋势做一个指示引导的作用。这个项目是根据 95 后目前已有的穿着打扮进行分析，就是对已经存在的趋势进行分析，这个结论除了为设计师迎合市场需求还有什么作用？有没有更深远点的意义？之后这个项目算法还能怎么拓展用到什么领域？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：此次合作，是电商、黑科技与时尚的一次跨界创新应用，让销售大数据、人工智能跟时尚流行产生碰撞，让数据与艺术产生连接，也为时尚领域的创作提供更多的灵感和可能性。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;AI+大数据的未来，具有很大的想象空间。在这次时尚跨界合作中，图片内容的智能识别很关键。借助 AI 技术，我们不仅可以很快速地获得结论，还大大提高了分析人群的覆盖范围和精准度。以往的定性调查，只能在有限样本内进行分析和判断，而运用 AI 分析，则让覆盖全国所有地域、所有年龄段的分析有了可能，是以往无法想象的全面性定量分析。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;机器之心：您认为今年在人脸识别领域的热门研究方向是什么？腾讯优图对此会有哪些研发计划？&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;腾讯优图&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;：人脸识别技术在理论研究上（较为理想的情况中）已比较成熟甚至取得了超越人眼的技术水平。现阶段的难点，反而是在多变的实际应用环境里，如何通过技术定制和优化，发挥出技术最大的作用。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;比如在与公安合作的安防场景人脸识别中，要在百万人脸中识别罪犯，人脸数据并不是设定好的通用情况，会有很多变化，这时就需要从采集特定数据训练调优，发挥工程的丰富经验进行优化，满足应用需求。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;此外，也要从真实的产品需求出发，给出更好的技术建议。如员工刷脸的公司门禁，单靠人脸识别其实并不能达到最佳安防效果，也可以结合其他特征的识别，比如是否佩戴门卡等等，也许可以能更有效地满足企业的真实需要。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;优图现在为腾讯超过五十个业务提供相关技术支持，并在财付通、微众银行、QQ 空间、QQ 音乐、天天 P 图等明星产品中成功落地。2016 年，优图推出了开放平台，并和腾讯云密切合作提供领先的 AI 技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132883FyXSki.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;腾讯优图开放平台&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;经过近几年的发展，优图在人工智能多个领域均积累了领先的技术实力和完整的解决方案，主要包括人脸技术、深度学习与图像理解、音频语音分析、智能图像处理等。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;人脸识别是优图的优势项目，以海量数据和优质模型排名国内前列，并将借助腾讯云进行更大规模的落地运营。在优势项目之上，我们还希望发展的目标包括：&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;1) 覆盖 1:1 的人脸验证到 1:N 的人脸检索&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在 1：1 验证中，要证明「我是我」。如没带身份证要核对公民身份，优图能做到通过 88 个采样点精准面部识别细微特征，再用独创的基于随机验证码的唇语活体检测技术，大大提高识别安全性。比如「微众银行」基于人脸识别的开户系统流程，以及和公安部门合作的互联网+警务建设中，在身份证二次申领、居住证、出国签证等远程办理时，市民仅需用手机简单核对身份，公安机关就能快速审核&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;而在 1：N 检索中，要解决的问题是「这么多人，哪个才是我」。比如考勤打卡、会议签到，要做到杜绝伪造签到。目前该项技术在腾讯众多自主品牌产品中落地应用，如腾讯深圳滨海新办公大楼的人脸识别门禁、「腾讯云」的万象优图中即将上线的人脸检索等等，都有丰富的应用场景。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;2) 图像识别：从 OCR、名片和快递单的识别，到色情图片等更复杂图像的识别&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;图片鉴黄是优图实验室「明星技术」之一。它打破了传统鉴黄方式限制，日处理达十亿量级，精度 99.99% 以上，为微信、QQ 空间、腾讯云万象鉴黄等多款产品提供了便利。基于 DeepEye 主动色情识别引擎技术，通过视频截图，图像识别，语音技审，弹幕监控，关键字抽取等能力智能识别色情内容，提高鉴黄准确率和实时性。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;3）&lt;strong&gt;音频相关算法研发&lt;/strong&gt;：包括用机器学习算法更好支持 QQ 音乐，如哼唱识别和音乐检索；基于深度学习的更自然的语音合成系统等等&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心原创，&lt;strong style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100% !important; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>图说 | 扫描人工智能大脑：绚丽图像展示机器学习处理过程</title>
      <link>http://www.iwgc.cn/link/4709445</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="white-space: normal; line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="font-size: 1em; margin-top: -1.2em; min-height: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255);"&gt;&lt;span style="background-color: rgb(117, 117, 118);"&gt;选自Wired&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="color: rgb(62, 62, 62); font-size: 16px; margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color:#7f7f7f"&gt;&lt;span style="font-size: 12px;"&gt;&lt;strong&gt;参与：吴攀、蒋思源、杜夏德&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;在很多时候，机器学习的处理过程对我们来说都是黑箱，为了了解这个黑箱，研究者已经做了很多的工作。近日，Wired 一篇文章介绍了位于布里斯托尔的创业公司 Graphcore 在这方面的美丽贡献，该公司利用人工智能处理单元和软件创建了机器学习过程的「脑图」，得到的结果经过渲染后非常具有视觉冲击力。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Graphcore 是一家位于英国布里斯托尔的创业公司，该公司正在开发一种新型处理器——IPU（intelligent processing unit /智能处理器），可以用来帮助加速机器智能产品和服务的开发。除此之外，该公司还开发了一套可以帮助用户无缝使用 TensorFlow 和 MXNet 等机器学习框架的接口，并为此提供了一个包含工具、驱动和应用库的开源软件框架 Poplar。&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722126&amp;amp;idx=3&amp;amp;sn=16a6254240464315eeebd027252a0ea9&amp;amp;chksm=871b0b30b06c8226e5470e4f0bcbdea2c444a17fd37791cd1f2fd95117cbdf8828b1f240a202&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722126&amp;amp;idx=3&amp;amp;sn=16a6254240464315eeebd027252a0ea9&amp;amp;chksm=871b0b30b06c8226e5470e4f0bcbdea2c444a17fd37791cd1f2fd95117cbdf8828b1f240a202&amp;amp;scene=21#wechat_redirect"&gt;该公司已在 2016 年 12 月入选了机器之心 AI00 人工智能公司榜单。&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/148713288470pkMK.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Graphcore 公司在微软开发的神经网络 ResNet 上创造了很多富有技术感又不失艺术色彩的图片。该神经网络赢得了 2015ImageNet 分类竞赛冠军。这张图像展现了搭建在 Graphcore 的 IPU 之上的微软 ResNet-34 架构在 2016 年 12 月的训练全景图。这张图的色彩是后来填上的，用以强调计算密度在图形的卷积层产生发光中心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132885NF40rq.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;该 ResNet 架构用来建立用于计算机视觉和图像识别的深度神经网络。这里展示的图像是向前（推理）通过 ResNet 的 50 层网络，该网络在经过 Graphcore 神经网络图像库训练之后用于分类图像。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132885NG50sq.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这是一张使用 ImageNet 数据集训练的图像识别架构 AlexNet 完整的前向和后向通过的图。Graphcore 的波普勒图将机器学习框架，如 tensorflow 或 MXNet，转变成 1870 万个顶点计算图和一亿一千五百八十万个边缘。一个点就是两个或以上的曲线、线条或边缘交汇的地方。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132885MF40rq.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;运行在 Graphcore 的 IPU 上的 ResNet-34 计算机视觉架构的前向通过。该神经网络的层是可见的，图像中心显示的是层与层之间的连接。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132886JB0Wom.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;2016 年 9 月，ResNet-34 的一张完整训练图像（full training graph）。Graphcore 说它看起来就像一个 MRI（磁共振成像）扫描，这是第一次为该网络反映出完整的图像。该网络表现的是计算密集度的顶点，并且用蓝色表示出其间的连接。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132886NG50sq.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这一张是在 2016 年 11 月制作的 AlexNet 图像分类训练架构图。AlexNet 最后三层中的顶点是彩色的，而在该图其他部分都是黑白的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/148713288670pkMK.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;AlexNet 图像分类训练架构从 2016 年 12 月开始就在 Graphcore 的 IPU 上运行。不同的颜色代表着在计算图谱上使用顶点的类型。图像使用绿色显示了三个完全连接层。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132887PI72us.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;用于图像识别的 ResNet-34 的前向通过的一张图像。该图展示了多张图像并行穿过网络的位置，这个过程被称为 batching。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132887FyXSki.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;伊利诺伊大学使用深度学习加速由 LIGO 引力波探测器所生成的天体物理学数据的分析。如果将他们的模型放到 Graphcore IPU 上执行，就会得到这张图像。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/148713288770pkMK.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;一张来自 2016 年 8 月的微软研究院的 ResNet-50 的图像。这张图像展示了这个用于图像识别的网络的推理部分。该网络有 50 层，但在 IPU 上所需的层数更少，因为很多层都可以被不同的数据使用。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;&lt;em&gt;原文链接：http://www.wired.co.uk/gallery/machine-learning-graphcore-pictures-inside-ai&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>业界 | 效率达到谷歌的100倍，Gamalon发布自我编码的人工智能系统</title>
      <link>http://www.iwgc.cn/link/4709446</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="white-space: normal; line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; font-size: 1em; min-height: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255); background-color: rgb(117, 117, 118);"&gt;选自Forbes&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; color: rgb(62, 62, 62); font-size: 16px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px;"&gt;&lt;strong&gt;参与：李泽南、黄小天&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;训练深度神经网络的数据一直是困扰创业公司的难题，面对拥有大量数据的科技巨头，小公司在人工智能时代的生存似乎变得越发困难。昨天，Gamalon 发布了自己的解决方法：他们宣称利用 Bayesian Program Synthesis 技术开发的人工智能系统可以仅用很少的输入就能达到谷歌 Tensorflow 等框架需要数万张图片训练达到的效果。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132889f8xsUS.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;Gamalon 创始人兼 CEO Ben Vigoda&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;当今整个科技行业都对深度学习——这一人工智能领域的分支趋之若鹜。这一技术又被称为深层神经网络，开发者需要向人工智能系统中输入大量数据对其进行训练，让它理解一些概念，例如：想要训练系统识别猫，我们需要向系统输入大量不同的猫图片，但不能在其中混有狗的图片，以免让计算机混淆。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;一家名为 Gamalon 的初创公司在本周二发布了一项新技术，他们的系统仅通过很少的数据就可以获得与完全训练后的神经网络相当的识别水平。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这家公司宣称，这一突破性进展的原理在于「Bayesian Program Synthesis」，由它处理概率问题。这项技术可以自行编写代码，用最优的方法解释收集到的数据。如果你开始用几张图片训练系统识别「猫」的概念——胡须、尾巴、眼睛，随后，系统会不断更新它对于「什么是猫？」的理解。这种思路与传统的深度学习相反——深度学习意味着你需要输入尽可能多的猫的图片，并且不能处理不确定性。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132889YRgbDB.gif"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;通过大幅度减少需要训练数据的数量，新方法可以显著减少深度学习的计算机硬件需求。Gamalon 无需使用带有昂贵显卡（如英伟达 Geforce Titan X）的工作站来训练复杂的神经网络，通过新的技术，我们现在能在一个 iPad 上做同样的事。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;「训练深度神经网络是一个困难的过程，」Gamalon 首席执行官 Ben Vigoda 说道。「你想处理的任务越复杂，所需的数据就会越多，像自动驾驶这样的任务需要海量的数据。」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;该公司声称他们目前的技术相比谷歌的深度学习框架 TensorFlow 效率高 100 倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Gamalon 由毕业于麻省理工学院的 Ben Vigoda 等人创建于 2013 年，但该公司直到昨天才公布了自己的第一个产品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;作为一家初创公司，Gamalon 推出的产品可将大量非结构数据整理成结构化的干净数据集。该解决方案的目标客户是那些需要处理大量文档并将其整合到数据库中的公司。Gamalon 的产品可让这些用户轻松地把自己的数据接入亚马逊、微软、谷歌等公司的云端服务器中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;随着高大上的无人驾驶汽车每天在道路上轰鸣作响，企业数据清理不再是人工智能探索领域里最吸引眼球的项目。但对于 Gamalon 来说，这是一个可以用于做模型证明和赚钱的机会。Felicis 风投创始人与总经理、Gamalon 的投资人 Aydin Senkut 说：「无序化数据的基本业务就是一个 10 亿美元级的市场，还有很多千亿级规模的公司仅做数据清理业务。」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这并不意味着 Gamalon 不能参与目前主营业务（把杂乱的企业文件重整为简洁的数据表）领域之外的竞争。Gamalon 已经使用自身技术在图像识别领域和谷歌的著名深度学习框架 TensorFlow 较量了一番。如果用户画一个落地灯，在旁边又画了一个椅子，谷歌的 AI 就会对此感到困惑，它无法分辨两个独立的物体，进而误认为你画了一个房子或者教堂。但是使用 Gamalon 的系统，就能识别出这是一个落地灯和一个椅子。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;iframe class="video_iframe" data-vidtype="1" allowfullscreen="" frameborder="0" height="417" width="556" data-src="https://v.qq.com/iframe/preview.html?vid=d0375wbvbyy&amp;amp;width=500&amp;amp;height=375&amp;amp;auto=0"&gt;&lt;/iframe&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在 Gamalon 之前，Vigoda 联合创建了 Lyric Semiconductor 公司并担任 CEO, 该公司开发了一个「概率处理器」，Analog Devices 在 2011 年收购了这家硬件公司。Vigoda 获得了麻省理工学院统计物理学和机器学习的博士学位。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;目前，Gamalon 宣称已经获得了来自 DARPA 的单笔最大的投资，并与政府签订了 770 万美元的合同。Gamalon 同样也筹集到了由 Felicis Ventures 领投，Boston Seed Capital、Rivas Capital、Adam D’Angelo、Andy Bechtolsheim、 Steve Blank、Ivan Chong 和 Georges Harik 跟投的 450 万美元的种子轮投资。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;现在，Gamalon 将其业务集中在为企业客户提供数据清理上。也许 Gamalon 在考虑彻底开源贝叶斯机器学习技术，不过这将是一笔难做的生意，因为技术产业界仍在狂热地使用着深度学习系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Vigoda 说：「大家一边倒地站队深度学习，所以我们不打算做开源贝叶斯的生意，以供人们接受或学习。我们可以展示一些贝叶斯机器学习系统优秀应用的案例，这样大家自然会开始欣赏它。」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;&lt;em&gt;原文链接：http://www.forbes.com/sites/aarontilley/2017/02/14/gamalon-artificial-intelligence-bayesian/#45f0877b78c1&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>业界 | 快公司评选出2017年机器学习领域最富创造力的公司</title>
      <link>http://www.iwgc.cn/link/4709447</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="white-space: normal; line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; font-size: 1em; min-height: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255); background-color: rgb(117, 117, 118);"&gt;选自Fastcompany&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; color: rgb(62, 62, 62); font-size: 16px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px;"&gt;&lt;strong&gt;参与：微胖&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;近期，快公司公布了 2017 年最具创造力公司榜单，其中，人工智能（机器学习）领域类中，谷歌、IBM 以及百度位居前三甲。美国公司数量位居榜首，中国、以色列、挪威、俄罗斯分别有一家公司上榜。以下是该领域前十位公司榜单。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132891tmLG86.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;1、谷歌（美国）&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：google.com&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：「AI First」&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;2、IBM（美国）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站: ibm.com&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;入选理由：将 Watson 嵌入到许多领域的应用中。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;3、百度（中国）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：baidu.com&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;入选理由：利用人工智能加快移动端搜索步伐。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;4、SoundHound（美国）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：soundhound.com&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：这家秘密研发长达九年多公司的创新之处在于打造一个最先进、准确的自然语言处理平台。除了是一款搜歌利器，官方称，目前 Hound 比较强的地方还包括导航，本地搜索，天气、股票、时区、地理等信息，酒店信息、航班信息，新闻，图片和视频搜索，货币换算等。2016 年推出的 Hound，公司要打造比巨头公司产品，比如 Siri 更好的语音助手。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;5、Zebra Medical Vision（以色列）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：zebra-med.com&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：Zebra 将机器学习、计算机视觉和大数据融合到医学成像平台中，让医学人员更好地预测疾病。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;6、Prisma（俄罗斯）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：http://prisma-ai.com/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：利用人工智能技术让普通照片变成杰作。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;7、Iris AI（挪威）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：iris.ai&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;公司规模：8 人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：利用人工智能技术让筛选科研成果不再如大海捞针一样费劲，大大加快了科研步伐。公司和大学研究表明，这款技术产品可以帮助节省 30% 到 50% 的科研经费，比 Google Scholar 还要好用和高效，小众但客户却越来越多。国内用户最熟悉的可能是这款产品的 TED 演讲精华萃取功能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;8、Pinterest（美国）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：pinterest.com&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：利用人工智能技术为用户就共同兴趣的 Pin(钉) 展开沟通提供了一个空间。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;9、TradeMarkVision（美国）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：trademark.vision&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;公司规模：22 人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;入选理由：公司 Logo 很重要，既要独特又不能侵犯其他竞争对手的商标权，同样，如果自己的权利可能受到新商标的侵犯，公司也希望尽快知道这一情况。TradeMarkVision 顾名思义，与商标有关，他们借用机器学习让上述过程变得简易和高效。欧盟以及澳洲商标局都是这家公司的客户。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;10、Descartes Labs（美国，也被 CB Insights 评选为 2017 年最值得关注的百家人工智能公司）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网站：descarteslabs.com&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;公司规模：25 人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;入选理由：致力于预测科学的科技公司。他们利用机器学习和卫星图像等海量数据集进行不同行业的预测和分析，曾被 CB Insights 评为这个领域「游戏规则的颠覆者」。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;此外，下面也附上了数据科学领域和机器人领域的前十强列表，感兴趣的读者可以在这里查看所有列表：&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;https://www.fastcompany.com/most-innovative-companies/2017/sectors/artificial-intelligence-machine-learning&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;数据科学&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132892rkJE64.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;机器人：&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132892YRgbDB.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;&lt;em&gt;原文链接：https://www.fastcompany.com/most-innovative-companies/2017/sectors/artificial-intelligence-machine-learning&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>资源 | 情人节后先飙车：如何使用深度学习框架查找女優资源？</title>
      <link>http://www.iwgc.cn/link/4709448</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="white-space: normal; line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; font-size: 1em; min-height: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255);"&gt;&lt;span style="background-color: rgb(117, 117, 118);"&gt;选自xolmon&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; color: rgb(62, 62, 62); font-size: 16px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127);"&gt;&lt;span style="font-size: 12px;"&gt;&lt;strong&gt;参与：Hitomi&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;情人节过了，单身狗也想飙一把车。在这篇技术博客（资源的真义）中，日本开发者使用深度学习框架实现了根据图片检索 AV 女优的功能。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/14871328942UjfGF.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;开发环境：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;PC: MacBook Air&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CPU: 1.4 GHz Intel Core i5&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;内存: 4GB&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;普通的 MacBook Air 就可以实现这一程序，但是学习速度缓慢，由内存不足导致的各种 Crash 让开发工作变得非常痛苦。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;0. 简单的流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(1) 收集各女优的图片&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(2) 使用 dlib 提取面部图像并调整为 96*96 的大小&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(3) 使用数据扩张（Data Augmentation）将女优面部图像的数据扩张到 1000 张&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(4) 将数据转换为 numpy 文件&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(5) 使用 Chainer 进行面部图像的学习&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;(6) 在完成学习后的模型下，对任意图片进行预测&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;1. 收集女优图片&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;这段有很多方法但是并不好写出来，所以请略过。只介绍下可以使用 Python 的 Beautiful Soup4 从网页上批量抓取数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;将取得的女优图片按名字建立存储目录。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;./folder&lt;br&gt; &amp;nbsp; &amp;nbsp;|--- /actress1&lt;br&gt; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|--- image1.jpg&lt;br&gt; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|--- image2.jpg&lt;br&gt; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|--- image3.jpg&lt;br&gt; &amp;nbsp; &amp;nbsp;|&lt;br&gt; &amp;nbsp; &amp;nbsp;|--- /actress2&lt;br&gt; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;br&gt; &amp;nbsp; &amp;nbsp;| &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;br&gt; &amp;nbsp; &amp;nbsp;|--- /actress3&lt;br&gt; &amp;nbsp; &amp;nbsp;.&lt;br&gt; &amp;nbsp; &amp;nbsp;.&lt;br&gt; &amp;nbsp; &amp;nbsp;.&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;2. 使用 dlib 提取面部图像&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="margin-bottom: 10px;"&gt;&lt;span style="font-size: 14px;"&gt;说到图像识别，OpenCV 应该更加有名。不过在提取面部图像部分，dlib 程序库的误识别比较少，因此这里使用 dlib 可以更加精确。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="margin-bottom: 10px;"&gt;&lt;span style="font-size: 14px;"&gt;使用 OpenCV 和 dlib 进行人脸识别的比较可以参考这个视频：dlib vs OpenCV face detection (https://www.youtube.com/watch?v=LsK0hzcEyHI)（译者注：youtube 的视频，有必要的话可以搬过来。）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;dlib 不仅可以提取面部图像，也有识别眼睛，鼻子，脸形等要素的机能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;&lt;strong&gt;import&lt;/strong&gt; os&lt;br&gt;&lt;strong&gt;import&lt;/strong&gt; sys&lt;br&gt;&lt;strong&gt;import&lt;/strong&gt; glob&lt;br&gt;&lt;strong&gt;import&lt;/strong&gt; cv2&lt;br&gt;&lt;strong&gt;from&lt;/strong&gt; PIL &lt;strong&gt;import&lt;/strong&gt; Image&lt;br&gt;&lt;strong&gt;import&lt;/strong&gt; dlib&lt;br&gt; &lt;br&gt;"""&lt;br&gt;INPUT_DIR是收集的女优图片所在的目录名&lt;br&gt;OUTPUT_DIR是提取后的图片存放的目录名(文件夹的构成与INPUT_DIR一样)&lt;br&gt;"""&lt;br&gt; &lt;br&gt;detector &lt;strong&gt;=&lt;/strong&gt; dlib&lt;strong&gt;.&lt;/strong&gt;get_frontal_face_detector()&lt;br&gt; &lt;br&gt;# 取得各女优的目录列表&lt;br&gt;dir_list &lt;strong&gt;=&lt;/strong&gt; os&lt;strong&gt;.&lt;/strong&gt;listdir(INPUT_DIR)&lt;br&gt; &lt;br&gt;&lt;strong&gt;for&lt;/strong&gt; i, dir_name &lt;strong&gt;in&lt;/strong&gt; enumerate(dir_list):&lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;strong&gt;if&lt;/strong&gt; &lt;strong&gt;not&lt;/strong&gt; os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;exists(os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;join(OUTPUT_DIR, dir_name)):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;os&lt;strong&gt;.&lt;/strong&gt;mkdir(os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;join(OUTPUT_DIR, dir_name))&lt;br&gt; &amp;nbsp; &amp;nbsp;image_files &lt;strong&gt;=&lt;/strong&gt; glob&lt;strong&gt;.&lt;/strong&gt;glob(os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;join(INPUT_DIR, dir_name, "*.jpg"))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;strong&gt;for&lt;/strong&gt; j, image_file &lt;strong&gt;in&lt;/strong&gt; enumerate(image_files):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;img &lt;strong&gt;=&lt;/strong&gt; cv2&lt;strong&gt;.&lt;/strong&gt;imread(image_file)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;dets &lt;strong&gt;=&lt;/strong&gt; detector(img, 1)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;open_img &lt;strong&gt;=&lt;/strong&gt; Image&lt;strong&gt;.&lt;/strong&gt;open(image_file)&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;for&lt;/strong&gt; k, d &lt;strong&gt;in&lt;/strong&gt; enumerate(dets):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;# 丢弃尺寸小于80的图像&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;if&lt;/strong&gt; d&lt;strong&gt;.&lt;/strong&gt;right()&lt;strong&gt;-&lt;/strong&gt;d&lt;strong&gt;.&lt;/strong&gt;left() &lt;strong&gt;&amp;lt;&lt;/strong&gt; 80 &lt;strong&gt;or&lt;/strong&gt; d&lt;strong&gt;.&lt;/strong&gt;bottom()&lt;strong&gt;-&lt;/strong&gt;d&lt;strong&gt;.&lt;/strong&gt;top() &lt;strong&gt;&amp;lt;&lt;/strong&gt; 80:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;continue&lt;/strong&gt;&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;image_file &lt;strong&gt;=&lt;/strong&gt; image_file&lt;strong&gt;.&lt;/strong&gt;replace(INPUT_DIR, OUTPUT_DIR)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;# 如果一张图中提取了多个人脸，则进行重命名&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;output_file &lt;strong&gt;=&lt;/strong&gt; image_file&lt;strong&gt;.&lt;/strong&gt;replace('.jpg', '_'&lt;strong&gt;+&lt;/strong&gt;str(k)&lt;strong&gt;+&lt;/strong&gt;'.jpg')&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;cropped_img &lt;strong&gt;=&lt;/strong&gt; open_img&lt;strong&gt;.&lt;/strong&gt;crop((d&lt;strong&gt;.&lt;/strong&gt;left(), d&lt;strong&gt;.&lt;/strong&gt;top(), d&lt;strong&gt;.&lt;/strong&gt;right(), d&lt;strong&gt;.&lt;/strong&gt;bottom()))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;cropped_img&lt;strong&gt;.&lt;/strong&gt;resize((96,96))&lt;strong&gt;.&lt;/strong&gt;save(output_file, 'JPEG', quality&lt;strong&gt;=&lt;/strong&gt;100, optimize&lt;strong&gt;=&lt;/strong&gt;True)&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;参考资料：dlib.net face_detect.py (http://dlib.net/face_detector.py.html)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;3. 数据扩张 (Data augmentation)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;在深度学习的过程中，如果数据量不够大，可以人工增加训练集的大小。通过平移, 翻转, 加噪声等方法从已有数据中创造出一批"新"的数据，这就是数据扩张 (Data augmentation)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132894zrqlNL.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132894a2rnPN.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132895GyYTlj.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;4. 将数据转换为 numpy 格式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;import os&lt;br&gt;import sys&lt;br&gt;import glob&lt;br&gt;import random&lt;br&gt;import numpy as np&lt;br&gt;from scipy import misc&lt;br&gt; &lt;br&gt;""" 从选择的目录里提取文件 """&lt;br&gt;def load_data_from_dir(input_dir_name, input_dir_list, start_index, test_freq):&lt;br&gt; &amp;nbsp; &amp;nbsp;train_list = []&lt;br&gt; &amp;nbsp; &amp;nbsp;test_list = []&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;for dir_index, dir_name in enumerate(input_dir_list):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;image_files = glob.glob(os.path.join(input_dir_name, dir_name, "*.jpg"))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;train_count = 0&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;test_count = 0&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print('directory:{} index:{}'.format(dir_name, dir_index + start_index))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for file_index, file_name in enumerate(image_files):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;image = misc.imread(file_name)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;label = np.int32(dir_index + start_index)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if not file_index % test_freq == 0: # set train datq&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;train_list.append((dir_name, image, label))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;train_count += 1&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;else:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;test_list.append((dir_name, image, label))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;test_count += 1&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;print("directory:{} total:{} train:{} test:{}".format(&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dir_name, train_count + test_count, train_count, test_count))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;return train_list, test_list&lt;br&gt; &lt;br&gt;""" 将数据储存为numpy格式 """&lt;br&gt;def save_dataset_numpy(data_list, image_path, label_path):&lt;br&gt; &amp;nbsp; &amp;nbsp;image_list = []&lt;br&gt; &amp;nbsp; &amp;nbsp;label_list = []&lt;br&gt; &amp;nbsp; &amp;nbsp;for _, image, label in data_list:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;image_list.append(image)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;label_list.append(label)&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;image_data = np.array(image_list, dtype=np.float32)&lt;br&gt; &amp;nbsp; &amp;nbsp;label_data = np.array(label_list, dtype=np.int32)&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;np.save(image_path, image_data)&lt;br&gt; &amp;nbsp; &amp;nbsp;np.save(label_path, label_data)&lt;br&gt; &lt;br&gt;for i in xrange(0, len(DIR_LIST), 10):&lt;br&gt; &amp;nbsp; &amp;nbsp;# 生成10个分类的文件&lt;br&gt; &amp;nbsp; &amp;nbsp;train_list, test_list = load_data_from_dir(INPUT_DIR, dir_list[i:i+args.interval], i, 10)&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;train_data_path = os.path.join(OUTPUT_DIR, 'train', 'data-{}.npy'.format(i+args.interval))&lt;br&gt; &amp;nbsp; &amp;nbsp;train_label_path = os.path.join(OUTPUT_DIR, 'train', 'label-{}.npy'.format(i+args.interval))&lt;br&gt; &amp;nbsp; &amp;nbsp;test_data_path = os.path.join(OUTPUT_DIR, 'test', 'data-{}.npy'.format(i+args.interval))&lt;br&gt; &amp;nbsp; &amp;nbsp;test_label_path = os.path.join(OUTPUT_DIR, 'test', 'label-{}.npy'.format(i+args.interval))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;save_dataset_numpy(train_list, train_data_path, train_label_path)&lt;br&gt; &amp;nbsp; &amp;nbsp;save_dataset_numpy(test_list, test_data_path, test_label_path)&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;5. 使用 Chainer 进行面部图像的学习&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;一开始打算使用 Tensorflow 做，不过由于自己想实现不少额外的机能，因此改用 Chainer 进行。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;最初的学习，建立了一个 Cifar-10 (http://www.cs.toronto.edu/~kriz/cifar.html)（一般物品的 10 个分类）的学习方法，来对实际收集到的数据进行学习。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;失败的地方：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="margin-bottom: 5px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;最初是打算使用多进程来构建程序，不过 Debug 非常的辛苦，觉得还是先构建一个更简单的程序比较好。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;如果一开始就读取所有图像，导入的图像会占用 1.7GB 的内存，导致死机。由于这个原因，创建了一个 BatchIterator 类，每 Batch 删除一次数据来释放内存，防止程序出现混乱。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;// 每张图片的大小&lt;br&gt;96×96×3 = 27648(byte)&lt;br&gt; &lt;br&gt;// 每类图片的大小&lt;br&gt;27648×1000 = 27648000(byte) = 26.4(MB)&lt;br&gt; &lt;br&gt;// 所有图片 (66类) ... 可以计算么？ &lt;br&gt;26.4×66 = 1742.4(MB) = 1.7(GB)&lt;br&gt;"""&lt;br&gt;Batch iterator class&lt;br&gt; &lt;br&gt;Usage:&lt;br&gt;batch_iter = BatchIter(DATA_DIR, 100)&lt;br&gt; &lt;br&gt;for batch_data, batch_label in batch_iter:&lt;br&gt; &amp;nbsp; &amp;nbsp;batch_start_time = time.time()&lt;br&gt; &amp;nbsp; &amp;nbsp;x = np.asarray(batch_data, dtype=np.float32).transpose((0, 3, 1, 2))&lt;br&gt; &amp;nbsp; &amp;nbsp;t = np.asarray(train_batch_label, dtype=np.int32)&lt;br&gt; &amp;nbsp; &amp;nbsp;x = Variable(xp.asarray(x))&lt;br&gt; &amp;nbsp; &amp;nbsp;t = Variable(xp.asarray(t))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;optimizer.update(model, x, t)&lt;br&gt;"""&lt;br&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;BatchIter&lt;/strong&gt;(object):&lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;strong&gt;def&lt;/strong&gt; &lt;strong&gt;__init__&lt;/strong&gt;(self, data_dir, batch_size):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;index &lt;strong&gt;=&lt;/strong&gt; 0&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;batch_size &lt;strong&gt;=&lt;/strong&gt; batch_size&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;data_files &lt;strong&gt;=&lt;/strong&gt; glob&lt;strong&gt;.&lt;/strong&gt;glob(os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;join(data_dir, 'data-*.npy'))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;label_files &lt;strong&gt;=&lt;/strong&gt; glob&lt;strong&gt;.&lt;/strong&gt;glob(os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;join(data_dir, 'label-*.npy'))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data_size &lt;strong&gt;=&lt;/strong&gt; 0&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;for&lt;/strong&gt; data &lt;strong&gt;in&lt;/strong&gt; self&lt;strong&gt;.&lt;/strong&gt;data_files:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;loaded_data &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;load(data)&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data_size &lt;strong&gt;+=&lt;/strong&gt; loaded_data&lt;strong&gt;.&lt;/strong&gt;shape[0]&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;del&lt;/strong&gt; loaded_data&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;data_size &lt;strong&gt;=&lt;/strong&gt; data_size&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;assert&lt;/strong&gt; len(self&lt;strong&gt;.&lt;/strong&gt;data_files) &lt;strong&gt;==&lt;/strong&gt; len(self&lt;strong&gt;.&lt;/strong&gt;label_files), "Invalid data size."&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;strong&gt;def&lt;/strong&gt; &lt;strong&gt;__iter__&lt;/strong&gt;(self):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;return&lt;/strong&gt; self&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;strong&gt;def&lt;/strong&gt; &lt;strong&gt;next&lt;/strong&gt;(self):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;if&lt;/strong&gt; self&lt;strong&gt;.&lt;/strong&gt;index &lt;strong&gt;&amp;gt;=&lt;/strong&gt; self&lt;strong&gt;.&lt;/strong&gt;data_size:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;raise&lt;/strong&gt; &lt;strong&gt;StopIteration&lt;/strong&gt;()&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;zeros((self&lt;strong&gt;.&lt;/strong&gt;batch_size, IMAGE_SIZE, IMAGE_SIZE, 3))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;label &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;zeros((self&lt;strong&gt;.&lt;/strong&gt;batch_size))&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;incremental_value &lt;strong&gt;=&lt;/strong&gt; int(self&lt;strong&gt;.&lt;/strong&gt;batch_size &lt;strong&gt;/&lt;/strong&gt; len(self&lt;strong&gt;.&lt;/strong&gt;data_files))&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;count &lt;strong&gt;=&lt;/strong&gt; 0&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;for&lt;/strong&gt; i &lt;strong&gt;in&lt;/strong&gt; range(len(self&lt;strong&gt;.&lt;/strong&gt;data_files)):&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;loaded_data &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;load(self&lt;strong&gt;.&lt;/strong&gt;data_files[i])&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;loaded_label &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;load(self&lt;strong&gt;.&lt;/strong&gt;label_files[i])&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;assert&lt;/strong&gt; loaded_data&lt;strong&gt;.&lt;/strong&gt;shape[0] &lt;strong&gt;==&lt;/strong&gt; loaded_label&lt;strong&gt;.&lt;/strong&gt;shape[0], "Loaded data size is invalid."&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;perm &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;random&lt;strong&gt;.&lt;/strong&gt;permutation(loaded_data&lt;strong&gt;.&lt;/strong&gt;shape[0])&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;if&lt;/strong&gt; i &lt;strong&gt;+&lt;/strong&gt; 1 &lt;strong&gt;==&lt;/strong&gt; len(self&lt;strong&gt;.&lt;/strong&gt;data_files): # last item&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;incremental_value &lt;strong&gt;=&lt;/strong&gt; self&lt;strong&gt;.&lt;/strong&gt;batch_size &lt;strong&gt;-&lt;/strong&gt; count&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;idx &lt;strong&gt;=&lt;/strong&gt; perm[0:incremental_value]&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;else&lt;/strong&gt;:&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;idx &lt;strong&gt;=&lt;/strong&gt; perm[0:incremental_value]&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data[count:count&lt;strong&gt;+&lt;/strong&gt;incremental_value] &lt;strong&gt;=&lt;/strong&gt; loaded_data[idx]&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;label[count:count&lt;strong&gt;+&lt;/strong&gt;incremental_value] &lt;strong&gt;=&lt;/strong&gt; loaded_label[idx]&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;count &lt;strong&gt;+=&lt;/strong&gt; incremental_value&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;del&lt;/strong&gt; loaded_data&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;del&lt;/strong&gt; loaded_label&lt;br&gt; &lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;self&lt;strong&gt;.&lt;/strong&gt;index &lt;strong&gt;+=&lt;/strong&gt; self&lt;strong&gt;.&lt;/strong&gt;batch_size&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;return&lt;/strong&gt; data, label&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;参考资料：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CNN 画像認識分野でのディープラーニングの研究動向 (http://ibisml.org/archive/ibis2013/pdfs/ibis2013-okatani.pdf) &lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;深層畳み込みニューラルネットワークを用いた画像スケーリング (http://postd.cc/image-scaling-using-deep-convolutional-neural-networks-part1/)&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CNNのチュートリアル (https://tech.d-itlab.co.jp/ml/666/)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Tensorflow&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;TensorFlowでアニメゆるゆりの制作会社を識別する (http://kivantium.hateblo.jp/entry/2015/11/18/233834)&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;TensorFlowによるディープラーニングで、アイドルの顔を識別する (http://d.hatena.ne.jp/sugyan/20160112/1452558576)&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;Tensor Flow: How To (http://kzky.hatenablog.com/entry/2015/12/24/Tensor_Flow%3A_How_To)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Chainer&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;GitHub - chainer/examples/imagenet/ (https://github.com/pfnet/chainer/tree/master/examples/imagenet)&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;GitHub - mitmul/chainer-cifar10 (https://github.com/mitmul/chainer-cifar10)&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;はじめてのアニメ顔認識 with Chainer (http://qiita.com/homulerdora/items/9a9af1481bf63470731a)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;6. 使用学习后的模型对任意图像进行预测。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;def&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;set_model&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;(model_name, model_path):&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;model_fn &lt;strong&gt;=&lt;/strong&gt; os&lt;strong&gt;.&lt;/strong&gt;path&lt;strong&gt;.&lt;/strong&gt;basename(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'models/'&lt;/span&gt;&lt;/code&gt;&lt;code&gt; &lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;+&lt;/strong&gt; model_name &lt;strong&gt;+&lt;/strong&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'.py'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;model &lt;strong&gt;=&lt;/strong&gt; imp&lt;strong&gt;.&lt;/strong&gt;load_source(model_fn&lt;strong&gt;.&lt;/strong&gt;split(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'.'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;],&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'models/'&lt;/span&gt;&lt;/code&gt;&lt;code&gt; &lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;+&lt;/strong&gt; model_name &lt;strong&gt;+&lt;/strong&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'.py'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)&lt;strong&gt;.&lt;/strong&gt;model&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;print&lt;/strong&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'Load model from '&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;, model_path)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;serializers&lt;strong&gt;.&lt;/strong&gt;load_hdf5(model_path, model)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;return&lt;/strong&gt; model&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;def&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;set_optimizer&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;(opt_name, opt_path, model):&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;if&lt;/strong&gt; opt_name &lt;strong&gt;==&lt;/strong&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'MomentumSGD'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;:&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;optimizer &lt;strong&gt;=&lt;/strong&gt; optimizers&lt;strong&gt;.&lt;/strong&gt;MomentumSGD(momentum&lt;strong&gt;=&lt;/strong&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;0.9&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;elif&lt;/strong&gt; opt_name &lt;strong&gt;==&lt;/strong&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'Adam'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;:&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;optimizer &lt;strong&gt;=&lt;/strong&gt; optimizers&lt;strong&gt;.&lt;/strong&gt;Adam()&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;elif&lt;/strong&gt; opt_name &lt;strong&gt;==&lt;/strong&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'AdaGrad'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;:&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;optimizer &lt;strong&gt;=&lt;/strong&gt; optimizers&lt;strong&gt;.&lt;/strong&gt;AdaGrad()&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;else&lt;/strong&gt;:&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;raise&lt;/strong&gt;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'Invalid architecture name'&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;optimizer&lt;strong&gt;.&lt;/strong&gt;setup(model)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;print&lt;/strong&gt;(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;'Load optimizer state from '&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;, opt_path)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;serializers&lt;strong&gt;.&lt;/strong&gt;load_hdf5(opt_path, optimizer)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;return&lt;/strong&gt; optimizer&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;def&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;detect_face&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;(image_file):&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;detector &lt;strong&gt;=&lt;/strong&gt; dlib&lt;strong&gt;.&lt;/strong&gt;get_frontal_face_detector()&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;#img = cv2.imread(image_file)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;image &lt;strong&gt;=&lt;/strong&gt; misc&lt;strong&gt;.&lt;/strong&gt;imread(image_file)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;dets &lt;strong&gt;=&lt;/strong&gt; detector(image, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;d &lt;strong&gt;=&lt;/strong&gt; dets[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;cropped_image &lt;strong&gt;=&lt;/strong&gt; image[d&lt;strong&gt;.&lt;/strong&gt;top():d&lt;strong&gt;.&lt;/strong&gt;bottom(), d&lt;strong&gt;.&lt;/strong&gt;left():d&lt;strong&gt;.&lt;/strong&gt;right()]&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;resized_image &lt;strong&gt;=&lt;/strong&gt; misc&lt;strong&gt;.&lt;/strong&gt;imresize(cropped_image, (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;96&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;96&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;))&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;strong&gt;return&lt;/strong&gt; resized_image&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;# 载入预测模型&lt;/em&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;code&gt;model &lt;strong&gt;=&lt;/strong&gt; set_model(model_name, model_path)&lt;/code&gt;&lt;br&gt;&lt;code&gt;optimizer &lt;strong&gt;=&lt;/strong&gt; set_optimizer(opt_name, opt_path, model)&lt;/code&gt;&lt;br&gt;&lt;code&gt;detected_face_image &lt;strong&gt;=&lt;/strong&gt; detect_face(input_image)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;em&gt;# 使用载入的模型进行预测&lt;/em&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;x &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;asarray(detected_face_image, dtype&lt;strong&gt;=&lt;/strong&gt;np&lt;strong&gt;.&lt;/strong&gt;float32)&lt;strong&gt;.&lt;/strong&gt;transpose((&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;3&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;1&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))&lt;/code&gt;&lt;br&gt;&lt;code&gt;x &lt;strong&gt;=&lt;/strong&gt; Variable(np&lt;strong&gt;.&lt;/strong&gt;asarray(x), volatile&lt;strong&gt;=&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;'on'&lt;/code&gt;&lt;code&gt;) &lt;/code&gt;&lt;br&gt;&lt;code&gt;pred &lt;strong&gt;=&lt;/strong&gt; model&lt;strong&gt;.&lt;/strong&gt;predict(x)&lt;strong&gt;.&lt;/strong&gt;data&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;em&gt;# 读取label (label在创建numpy形式的文件时做成)&lt;/em&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;categories &lt;strong&gt;=&lt;/strong&gt; np&lt;strong&gt;.&lt;/strong&gt;loadtxt(label_path, &lt;/code&gt;&lt;code&gt;str&lt;/code&gt;&lt;code&gt;, delimiter&lt;strong&gt;=&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;"\n"&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;em&gt;# 按相似分高低重新排序&lt;/em&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;score &lt;strong&gt;=&lt;/strong&gt; pred&lt;strong&gt;.&lt;/strong&gt;reshape((pred&lt;strong&gt;.&lt;/strong&gt;size,))&lt;/code&gt;&lt;br&gt;&lt;code&gt;result &lt;strong&gt;=&lt;/strong&gt; &lt;/code&gt;&lt;code&gt;zip&lt;/code&gt;&lt;code&gt;(score, categories)&lt;/code&gt;&lt;br&gt;&lt;code&gt;result &lt;strong&gt;=&lt;/strong&gt; &lt;/code&gt;&lt;code&gt;sorted&lt;/code&gt;&lt;code&gt;(result, reverse&lt;strong&gt;=&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;True&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;results &lt;strong&gt;=&lt;/strong&gt; []&lt;/code&gt;&lt;br&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;code&gt; i, (score, label) &lt;strong&gt;in&lt;/strong&gt; &lt;/code&gt;&lt;code&gt;enumerate&lt;/code&gt;&lt;code&gt;(result[:&lt;/code&gt;&lt;code&gt;10&lt;/code&gt;&lt;code&gt;]):&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;strong&gt;if&lt;/strong&gt; i &lt;strong&gt;==&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;5&lt;/code&gt;&lt;code&gt;: &lt;strong&gt;break&lt;/strong&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;strong&gt;print&lt;/strong&gt;(&lt;/code&gt;&lt;code&gt;'num:{} score:{:.5f} label:{}'&lt;/code&gt;&lt;strong&gt;&lt;strong&gt;&lt;code&gt;.&lt;/code&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;code&gt;format(i &lt;strong&gt;+&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;&lt;code&gt;, score &lt;strong&gt;*&lt;/strong&gt; &lt;/code&gt;&lt;code&gt;100&lt;/code&gt;&lt;code&gt;, label))&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;results&lt;strong&gt;.&lt;/strong&gt;append({&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;'label'&lt;/code&gt;&lt;code&gt;: label,&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;'score'&lt;/code&gt;&lt;code&gt;: &lt;/code&gt;&lt;code&gt;str&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;round&lt;/code&gt;&lt;code&gt;(score &lt;strong&gt;*&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;100&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;})&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;7. 使用 Keras 替代 Chainer 优化学习的方式。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;前面的内容，建立了一个学习模型，它可以提取一张图片上的各种要素 (如眼睛，鼻子，脸型等) 并进行分类，从而判断这张图最像哪一位女优；本节则通过计算全结合层的特征向量的相似度，来进行相似图像的检索。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;比起 Chainer，Keras 更加容易使用。因此借助 Keras，最终完全实现了根据图片检索 AV 女优的这一功能。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="margin-bottom: 5px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;数据扩张&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Keras 可以使用 ImageDataGenerator 简单地进行数据的扩张。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;不过，把随机的一张图像进行倾斜，变换后所得到的学习数据其实跟原图没有区别。这样的方法一般被认为会造成过度学习。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;为降低输入数据冗余性，需要对数据进行 ZCA 白化。白化是降低输入数据冗余性的预处理过程，通过白化可以使得学习算法的输入具有如下性质：(i) 特征之间相关性较低；(ii) 所有特征具有相同的方差。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;ZCA 白化的方法请参考以下文章：&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;データの白色化 - DEEPTONEWorks (http://deeptoneworks.com/2016/10/18/20161018020000/)&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CIFAR-10 と ZCA whitening - まんぼう日記 (http://takatakamanbou.hatenablog.com/entry/2015/02/15/150430)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;脸部图像的正面化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;第 2 节实现了使用 dlib 进行人脸检测，本次则更进一步，把脸部图像的特征点抽出，使用仿射变换，将眼和口的位置摆正。下面是实现本功能所使用的 openface 和 facenet，两者都已经实装。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;facenet/src/align_dlib.py (https://github.com/davidsandberg/facenet/blob/master/src/align_dlib.py)_ _&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;openface/util/align-dlib.py (https://github.com/cmusatyalab/openface/blob/master/util/align-dlib.py)&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;&lt;code&gt;from&lt;/code&gt;&lt;code&gt; keras.preprocessing.image &lt;/code&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; ImageDataGenerator&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;# 读入何种data和label&lt;/span&gt;&lt;/em&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;data, label = load_data()&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;datagen = ImageDataGenerator(&lt;/span&gt;&lt;/code&gt;&lt;br&gt;
 &lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;zca_whitening=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;True&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;,&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;rotation_range=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;10&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;,&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;width_shift_range=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;0.1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;,&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;height_shift_range=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;0.1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;,&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;horizontal_flip=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;True&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;datagen.fit(data)&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;#&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;将&lt;/span&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;datagen.flow&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;代入模型的&lt;/span&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;fit_generator&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;函数，即可扩张动态数据&lt;/span&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;br&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;model.fit_generator(datagen.flow(data, label, batch_size=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;32&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;),&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;samples_per_epoch=data.shape[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;],&lt;/span&gt;&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;nb_epoch=&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;100&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;模型的构造&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;现阶段的学习数据还很少，模型和超参数的调整还没有完全，暂且使用的是下面这样的模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;code&gt;def&lt;/code&gt;&lt;code&gt; &lt;/code&gt;&lt;code&gt;conv_bn_relu&lt;/code&gt;&lt;code&gt;(x, out_ch, name):&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = Convolution2D(out_ch, &lt;/code&gt;&lt;code&gt;3&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;3&lt;/code&gt;&lt;code&gt;, border_mode=&lt;/code&gt;&lt;code&gt;'same'&lt;/code&gt;&lt;code&gt;, name=name)(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = BatchNormalization(name=&lt;/code&gt;&lt;code&gt;'{}_bn'&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;format&lt;/code&gt;&lt;code&gt;(name))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = Activation(&lt;/code&gt;&lt;code&gt;'relu'&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'{}_relu'&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;format&lt;/code&gt;&lt;code&gt;(name))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;return&lt;/code&gt;&lt;code&gt; x&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;def&lt;/code&gt;&lt;code&gt; &lt;/code&gt;&lt;code&gt;face_model&lt;/code&gt;&lt;code&gt;(input_shape=(&lt;/code&gt;&lt;code&gt;3&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;224&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;224&lt;/code&gt;&lt;code&gt;), nb_classes, weights_path=&lt;/code&gt;&lt;code&gt;None&lt;/code&gt;&lt;code&gt;):&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;inputs = Input(shape=input_shape, name=&lt;/code&gt;&lt;code&gt;'input'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(inputs, &lt;/code&gt;&lt;code&gt;64&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block1_conv1'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;64&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block1_conv2'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = MaxPooling2D((&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;), strides=(&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;128&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block2_conv1'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;128&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block2_conv2'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = MaxPooling2D((&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;), strides=(&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;256&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block3_conv1'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;256&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block3_conv2'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;256&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block3_conv3'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = MaxPooling2D((&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;), strides=(&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;512&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block4_conv1'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;512&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block4_conv2'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = conv_bn_relu(x, &lt;/code&gt;&lt;code&gt;512&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'block4_conv3'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = MaxPooling2D((&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;), strides=(&lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;2&lt;/code&gt;&lt;code&gt;))(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = Flatten()(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = Dense(&lt;/code&gt;&lt;code&gt;4096&lt;/code&gt;&lt;code&gt;, activation=&lt;/code&gt;&lt;code&gt;'relu'&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'fc1'&lt;/code&gt;&lt;code&gt;)(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = Dense(nb_classes, activation=&lt;/code&gt;&lt;code&gt;'softmax'&lt;/code&gt;&lt;code&gt;, name=&lt;/code&gt;&lt;code&gt;'predictions'&lt;/code&gt;&lt;code&gt;)(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;model = Model(&lt;/code&gt;&lt;code&gt;input&lt;/code&gt;&lt;code&gt;=inputs, output=x)&lt;/code&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;相似度的计算&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;本次的模型，是将最终层之前一层的全结合层特征向量提取出来，与各女优面部图像提取的特征向量计算余弦值，来判断与各女优的相似程度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;span style="font-size: 14px;"&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; numpy &lt;/code&gt;&lt;code&gt;as&lt;/code&gt;&lt;code&gt; np&lt;/code&gt;&lt;br&gt;&lt;code&gt;from&lt;/code&gt;&lt;code&gt; scipy.spatial.distance &lt;/code&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; cosine&lt;/code&gt;&lt;br&gt;&lt;code&gt;from&lt;/code&gt;&lt;code&gt; keras.models &lt;/code&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; Model, model_from_json&lt;/code&gt;&lt;br&gt;&lt;code&gt;from&lt;/code&gt;&lt;code&gt; keras.preprocessing &lt;/code&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; image&lt;/code&gt;&lt;br&gt;&lt;code&gt;from&lt;/code&gt;&lt;code&gt; keras.preprocessing.image &lt;/code&gt;&lt;code&gt;import&lt;/code&gt;&lt;code&gt; img_to_array&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;def&lt;/code&gt;&lt;code&gt; &lt;/code&gt;&lt;code&gt;calculate_similarity&lt;/code&gt;&lt;code&gt;():&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;# &lt;/code&gt;载入模型&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;model_json = &lt;/code&gt;&lt;code&gt;open&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;code&gt;'face_model.json'&lt;/code&gt;&lt;code&gt;).read()&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;base_model = model_from_json(model_json)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;base_model.load_weights(&lt;/code&gt;&lt;code&gt;'face_model.h5'&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;&lt;/code&gt;&lt;code&gt;# &lt;/code&gt;建立提取全结合层和&lt;code&gt;4096&lt;/code&gt;维特征向量的模型&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;model = Model(&lt;/code&gt;&lt;code&gt;input&lt;/code&gt;&lt;code&gt;=base_model.&lt;/code&gt;&lt;code&gt;input&lt;/code&gt;&lt;code&gt;, output=base_model.get_layer(&lt;/code&gt;&lt;code&gt;'fc1'&lt;/code&gt;&lt;code&gt;).output)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;image_file = &lt;/code&gt;&lt;code&gt;'image.jpg'&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;img = image.load_img(image_file, target_size=(&lt;/code&gt;&lt;code&gt;96&lt;/code&gt;&lt;code&gt;, &lt;/code&gt;&lt;code&gt;96&lt;/code&gt;&lt;code&gt;))&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = img_to_array(img)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;x = np.expand_dims(x, axis=&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;&lt;code&gt;)&lt;/code&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;features = model.predict(x)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;features = features.flatten().tolist()&lt;/code&gt;&lt;/span&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;code&gt; &lt;/code&gt;&lt;br&gt;
 &lt;code&gt;# actress_features&lt;/code&gt;是之前计算好的各女优面部的特征向量&lt;br&gt;
 &lt;code&gt;# &lt;/code&gt;计算输入图片所提取的特征向量和各女优特征向量余弦值的相似度&lt;br&gt;&lt;code&gt;&lt;code&gt; &amp;nbsp; &amp;nbsp;&lt;/code&gt;score = &lt;/code&gt;&lt;code&gt;1&lt;/code&gt;&lt;code&gt; - cosine(features, actress_features)&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;8. 建立服务器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;这部分跟深度学习完全没有关系。一开始尝试使用了 Heroku 来建立网站，不过最终使用的是 Conoha。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;dlib 和 chainer 在 Heroku 的服务器上安装非常困难。Conoha 的运行效率虽然有点问题，不过倒是很好的完成了 dlib 和 chainer 的安装。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;樱花 VPS 也是一个不错的选择，不过樱花服务器没有初次使用的优惠，而 Conoha 则有针对新用户的免费方案。&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;原文来源：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="margin-bottom: 10px; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;1.chainerによるディープラーニングでAV 女優の類似画像検索サービスをつくったノウハウを公開する&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;2.KerasでAV 女優の類似画像検索機能を実装する&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style="line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;最后&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;想直接要作者的实现？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487132895slKG76.gif"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 14px;"&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文为机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 12:08:23 +0800</pubDate>
    </item>
    <item>
      <title>机器学习助力凝聚态物理研究：实现量子计算的新希望</title>
      <link>http://www.iwgc.cn/link/4694508</link>
      <description>&lt;div class="article-content"&gt;&lt;section style="font-size: 16px; white-space: normal; color: rgb(62, 62, 62); line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255); background-color: rgb(117, 117, 118); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;选自Wired、Nature Physics等&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与：微胖、李亚洲&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;发表在 Nature Physics 上的两篇研究证实，机器学习算法或许可以在识别凝聚物质相变上扮演重要角色，也为量子计算机研究带来新的曙光。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;把一盘水放到冰箱里，它暂时呈现的是液体。然后水的分子堆积成小六边形，就形成了冰。把超冷的液氮倾倒在钇钡铜氧化物晶片上，电流流过该化合物要比大学生喝啤酒过喉咙所受的阻碍都要小。这意味着你得到了超导体。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这种物质特性的急剧转变被称为相变，深受物理学家的喜爱。就像是 Jekyll 博士瞬间变成了 Hyde 先生（史蒂文森著作《化身博士》中的人物，后者是前者的交替人格——机器之心注）。如果能够搞清楚正直的 Jekyll 博士变形的秘方，那物理学家就能理解他是如何变邪恶的了，或者能造出更多的 Hyde 先生。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;人类物理学家可能永远不会拥有能够看清相变的神经湿件（neural wetware，也就是人脑），但现在计算机却可以。最近发表在 Nature Physics 上的两篇论文中，来自加拿大圆周理论物理研究所（Perimeter Institute）和苏黎世联邦理工学院的两只团队都表示，训练神经网络观察仅数百个原子的快照，就能搞清楚它们所处的相（phase of matter)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049547c4tpRP.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;加拿大论文作者之一 Roger Melko&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;工作原理非常类似于 Facebook 的自动标签。加拿大那一篇论文的合作者、物理学家 Juan Carrasquilla 说，「我们改变了 Facebook 使用这一技术进行图像识别的目的。」他现在正在量子计算公司 D-Wave 工作。联合论文的另一合作者、滑铁卢大学副教授、圆周理论物理研究所研究员 Roger Melko 说，他们改用开源的机器学习软件库 TensorFlow，将它应用到了物理系统研究中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;当然，面部识别、水变成冰、Jekyll 博士变成 Hydes 并不是这些科学家的目的。他们想要使用人工智能来理解有商业潜在应用的边缘现象（fringey phenomena），比如为什么一些材料会变成超导体无限接近绝对零度，而一些材料相变后只是温和的低于零下 150 摄氏度。苏黎世论文的合作者 Sebastian Huber 说，「高温度的超导体可能对科技有帮助，而我们对它们的理解非常少。」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;他们还想增进对奇异的相（物质），亦即拓扑态的理解，在这一状态下，量子粒子行为会比平常更为奇异。（发现拓扑量子相变的物理学家获得 2016 年诺奖）。像光子或原子这样的量子粒子变换物理状态要相对容易些，但是，拓扑态就比较坚实。这意味着他们或许能被用来搭建量子计算机，比如&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650719922&amp;amp;idx=2&amp;amp;sn=62de6104fdc8b834c1f3c95ff1418b31&amp;amp;chksm=871b02ccb06c8bdaedb8d5430d3972a379c4e4dfff391683f4784c9b416403a6f0071fd000f9&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650719922&amp;amp;idx=2&amp;amp;sn=62de6104fdc8b834c1f3c95ff1418b31&amp;amp;chksm=871b02ccb06c8bdaedb8d5430d3972a379c4e4dfff391683f4784c9b416403a6f0071fd000f9&amp;amp;scene=21#wechat_redirect"&gt;微软的量子计算机的存储器&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这项研究不仅仅是为了识别相（phases），而是为了理解变（transitions）。加拿大的研究小组训练计算机寻找在哪一温度下相变发生的准确率达到 0.3%。瑞士研究小组展示了一种更狡猾的招数，因为他们能让神经网络理解这些而无需提前训练它们。通常在机器学习中，你是给机器学习设定一个目标：找出狗的样子。「用 10 万张图片训练网络，」Huber 说，「图片里有狗，你可以随时告诉它。如果没有，你也能告诉网络。」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;但是，物理学家压根儿没办法告诉网络什么是相变：他们只能给网络展示粒子集合。足够多的不同相足以让计算机学会识别每一种相。Huber 觉得，这种水平的新技能 get 最终能让神经网络发现全新的相。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这些新的研究成果并不仅仅停留在象牙塔。人们一直在寻找更强大、更便宜但更好的材料，为此，研究人员利用机器学习也有段时间了。2004 年，一项包括 NASA 和 GE 在内的科研合作借助神经网络模拟材料，研发出了一种持久耐用的合金，可用于航空器引擎制造。而且，机器学习要比在一台超级计算机上模拟某种材料的性质要快得多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;较之真实的大千世界，物理学家研究的相变模拟仍然比较简单。在这些实验性的材料最终变成新玩意儿前，物理学家仍需找出如何让神经网络一次解析 10^23 个粒子——而不仅仅是几百个。但是，Carrasquilla 已经希望给他的神经网络展示真实实验数据，看看它是否能找到相变。未来的计算机或许足够智能，不仅可以标记照片上奶奶的面部，还可以发现新的神奇材料。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;第一篇论文题目：&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;机器学习物质的相（Machine learning phases of matter）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;作者：Juan Carrasquilla、Roger G. Melko&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;摘要：凝聚态物理学研究的是无限复杂的电子、原子核、磁矩、原子或量子比特集合的集体行为。这一复杂性体现在状态空间大小上，其大小会随着粒子数量的变化而呈指数级增长，这会让人想起机器学习中通常遇到的「维数灾难（curse of dimensionality』）」。尽管如此，机器学习社区已经开发出强大技术，用来识别、分类以及从复杂数据组中提取特征。在这篇研究中，我们表明，现代机器学习架构（比如全连接和卷积神经网络）可以识别各种凝聚态哈密尔顿量中的相以及相变。现代软件库使神经网络编程比较容易，研究人员可以训练神经网络识别多类有序参数，以及带有无常序的非平庸态（non-trivial states with conventional order），可以使用蒙特卡洛从原始态配置中取样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/14870495483WlgIG.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;图 1、机器学习铁磁易辛模型（ferromagnetic Ising model）&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049549YRgbDB.jpg"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;图 2、 方形冰的典型结构以及易辛规范模型（Typical configurations of square-ice and Ising gauge models）&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049549xpOKba.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136); font-size: 12px;"&gt;&lt;em&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;图 3、侦测易辛规范理论（Ising gauge theory）中的对数交叉温度（logarithmic crossover temperatures）&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;第二篇论文题目：Learning phase transitions by confusion&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;作者：Evert P. L. van Nieuwenburg、Ye-Hua Liu、Sebastian D. Huber&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;摘要：分类相（物质）对我们理解物理学中的很多难题都很重要。特别是对量子机制系统而言，由于指数级大的希尔伯特空间，这一任务往往令人却步。由于如今的计算能力和大数据集，分类问题能够使用机器学习技术解决。在此论文中，基于在故意错误标记的数据上进行训练后的神经网络的表现，我们提出了一种神经网络方法寻找相变。我们展示了这一方法在 Kitaev 链中拓扑相变、经典的伊辛模型（Ising model) 中热相变、在无序量子自旋链中多体局部量变上的成功。我们的方法并不依赖有序参数、相的拓扑内容知识，或者其他的相变的专业知识。因此，它为开发出用于识别未探索过的相变的通用工具铺平了道路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049549b4ZUmk.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;em&gt;&lt;span style="text-align: justify; font-size: 12px; color: rgb(136, 136, 136);"&gt;图 1：学习 Kitaev 链中的拓扑相变&lt;/span&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049550PH62us.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;图 2:神经网络&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049550slKFHF.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;图 3：学习伊辛相变&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049550wVkfHF.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;&lt;em&gt;图 4：学习多体局部相变&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: center; line-height: 1.75em;"&gt;&lt;span style="font-size: 12px; color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文由机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 12:59:28 +0800</pubDate>
    </item>
    <item>
      <title>开源 | 雅虎BigML团队开源大数据分布式深度学习框架TensorFlowOnSpark</title>
      <link>http://www.iwgc.cn/link/4694509</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; white-space: normal; background-color: rgb(255, 255, 255); line-height: 28.4444px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; max-width: 100%; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; max-width: 100%; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(255, 255, 255); background-color: rgb(117, 117, 118); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;选自雅虎&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; max-width: 100%; font-family: inherit; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; max-width: 100%; min-height: 1em; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者：Lee Yang,、Jun Shi、 Bobbie Chern、 Andy Feng&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; max-width: 100%; min-height: 1em; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; max-width: 100%; min-height: 1em; text-align: center; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(127, 127, 127); font-size: 12px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与：杜夏德、朱思颖&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;雅虎 Big ML 团队今日宣布开源 TensorFlowOnSpark，用于在大数据集群上进行分布式深度学习。下面是该团队官方发布的开源说明。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;近几年，深度学习发展的非常迅速。在雅虎，我们发现，为了从海量数据中获得洞察力，需要部署分布式深度学习。现有的深度学习框架常常要求为深度学习单独设定集群，迫使我们要为一个机器学习流程（见下图 1）创建多个程序。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049552OH61tr.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;设定独立的集群则需要我们转移大数据集，带来了不必要的系统复杂性和端到端的学习延迟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;去年我们通过开发和公开 CaffeOnSpark 解决了 scaleout 的问题，我们开源的框架支持在相同的 Spark 和 Hadoop 集群上进行分布式深度学习和大数据处理。我们在雅虎内部使用 CaffeOnSpark 改善了我们的 NSFW 图像检测，自动从实况录像中识别电竞比赛片段等等。在社区大量有价值的反馈和贡献下，CaffeOnSpark 已经得到了更新，现在可以支持 LSTM，有了一个新的数据层，可以训练与测试交错，有了一个 Python API，和 Docker container 的部署。这些都提升了我们的用户体验。但是那些使用 TensorFlow 框架的人怎么办？于是我们效仿了之前的做法，开发了 TensorFlowOnSpark。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TensorFlow 公开后，谷歌于 2016 年 4 月就开放了一个带有分布式学习功能的增强版 TensorFlow。2016 年 10 月，TensorFlow 开始支持 HDFS。然而在谷歌云之外，用户仍然需要一个 TensorFlow 应用的专用集群。TensorFlow 程序无法在现有的大数据集群上部署，这样一来，那些想大规模使用这个技术的人就需要花更多的成本和时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;为了打破这个限制，几个社区项目将 TensorFlow 连接到 Spark 集群上。SparkNet 让 Spark 执行器获得了可以运行 TensorFlow 网络的能力。DataBricks 提出 tensorframe，用来使用 TensorFlow 程序操纵 Apache Spark 的数据帧。虽然这些方法都朝着正确的方向迈出了一步，但是我们检查他们的代码后发现，我们无法让多个 TensorFlow 过程直接相互沟通，我们也无法实现异步分布式学习，并且我们需要在迁移现有的 tensorflow 程序上花大功夫。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;TensorFlowOnSpark&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049552skJF75.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;我们的新框架，TensorFlowOnSpark（TFoS），支持 TensorFlow 在 Spark 和 Hadoop 上的分布式运行。如上图（图 2）所示，TFoS 与 SparkSQL、MLlib 以及其他的 Spark 库一起在一个项目或线程（pipeline）中运行。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFoS 支持所有类型的 TensorFlow 程序，能实现同步和异步的训练与推理。并且支持模型和数据的平行处理，以及 TensorFlow 工具（如 TensorBoard）在 Spark 群集上使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;任何 TensorFlow 程序都能够很容易通过修改实现在 TFoS 上运行的。通常情况下，只需要修改少于 10 行的 Python 代码。很多在雅虎平台上使用 TensorFlow 的开发者，已经轻松将 TensorFlow 项目转移到 TFoS 上执行了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFoS 支持张量（tensor）在 TensorFlow 处理过程中（计算节点和参数服务节点）信息的直接沟通。过程到过程（Process-to-process）的直接沟通机制使 TFoS 项目很容易在增加的机器上进行扩展。如图 3 所示，TFoS 不需要 Spark 驱动器（driver）参与到张量沟通中来，因此也就与具备类似于独立 TensorFlow 群集的扩展能力。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049553VOd8Ay.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFoS 提供两种不同模式来「吞入」用于训练和推理的数据 ：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 10px;"&gt;&lt;span style="font-size: 14px;"&gt;1. TensorFlow QueueRunners：TFoS 利用 TensorFlow 的文件读取（file readers）和 QueueRunners 来直接从 HDFS 文件中读入数据。在数据获取过程中不需要 Spark 参与。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;2. Spark 供给：Spark RDD 数据将会被传输至每一个 Spark 执行器里，Spark 执行器会进一步将数据传入 TensorFlow 图（通过 feed_dict 参数）。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049553ExWRjh.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;图 4 展示了 Inception 图像分类网络中同时进行的分布式训练如何在 TFoS 中通过 QueueRunners 的一个简单设置进行扩展：将每个计算节点设置为 1 个 GPU，一个读入（reader）以及批处理数为 32。四个 TFoS 的任务同时进行以用于训练 10 万步。两天多后，当这些任务完成时，top-5 精确度（accuracy）分别为 0.730, 0.814, 0.854，0.879。0.730 的精确度需要单计算节点运行 46 小时得到，双计算节点需要 22.5 个小时，4 计算机点需要 13 小时，8 计算节点需要 7.5 个小时。在 Inception 模型训练上，TFoS 几乎能达到线性扩展。这是很鼓舞人心的，虽然 TFoS 在不同模型和超参数上的扩展能力不同。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;用于分布式 TensorFlow 的 RDMA&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在雅虎的 Hadoop 集群上，GPU 节点通过以太网和无线宽带相互连接。无线宽带提供了高速的连接，并支持在 RDMA 中直接访问其他服务器的存储。然而目前 TensorFlow 仅支持在以太网上使用 「&lt;em&gt;gRPC&lt;/em&gt;」&amp;nbsp;的分布式学习。为了加速分布式学习，我们增强了 TensorFlowC++层，实现了无线宽带上的 RDMA。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;为了结合我们发布的 TFoS，我们在 default「&lt;em&gt;gRPC&lt;/em&gt;」协议之外，引进了一个新的 TensorFlow 服务器协议。任何分布式 tensorflow 程序都能通过指定 &lt;em&gt;protocol=「grpc_rdma」in tf.train.ServerDef()or tf.train.Server() &lt;/em&gt;来使用我们的增强版的 TensorFlow。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;有了这个新协议后，就需要一个 RDMA 汇集管理器（rendezvous manager）来确保张量直接写入远程服务器的内存。我们最大限度地减少张量缓冲的创建：张量缓冲器在开始时分配一次，然后在一个 TensorFlow 工作任务的所用训练步骤中重复使用。从我们早期的大型模型实验，比如 VGG-19 开始，我们的就已经证明了，与现有的 gRPC 相比，我们的 RDMA 实现在训练时间上带来了显著的提速。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;由于 RDMA 支持对性能要求很高（见 TensorFlow issue#2916），我们决定让我们现有的实现版本作为一个预览版向 TensorFlow 社区开放。在未来的几周内，我们将会进一步优化我们的 RDMA 实现，并分享一些基准结果细节。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;简单的&amp;nbsp;CLI 和 API&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFoS 程序是通过标准的 ApacheSpark 命令&lt;em&gt; spark-submit&lt;/em&gt; 运行的。如下所示，用户可以在 CLI 中指定 Spark 执行器的数目，每个执行器所用的 GPU 数目以及参数服务节点数。用户还可以表明愿意使用 TensorBoard（–tensorboard）还是 RDMA（–rdma）。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ;  ; "&gt;&amp;nbsp;spark-submit –master ${MASTER} \&amp;nbsp;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp; ${TFoS_HOME}/examples/slim/train_image_classifier.py \&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–model_name inception_v3 \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–train_dir hdfs://default/slim_train \&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–dataset_dir hdfs://default/data/imagenet \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–dataset_name imagenet \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–dataset_split_name train \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–cluster_size ${NUM_EXEC} \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–num_gpus ${NUM_GPU} \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–num_ps_tasks ${NUM_PS} \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt; –sync_replicas \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–replicas_to_aggregate ${NUM_WORKERS} \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;–tensorboard \&lt;/span&gt;&lt;/span&gt;&lt;br style=" color: rgb(68, 68, 68); ; ; ; ; ; "&gt;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=" color: rgb(68, 68, 68); ; ; ; ; "&gt; –rdma &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFoS 提供高层次的 Python API（在 Python notebook 的范例中有显示）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFCluster.reserve()... 从 Spark 执行器构建一个 TensorFlow 群集&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFCluster.start()... 在执行器上加载 TensorFlow 程序&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFCluster.train() or TFCluster.inference() …将 RDD 数据传入 TensorFlow 处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TFCluster.shutdown() …在执行器中结束 TensorFlow 的运行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;开源&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 5px;"&gt;&lt;span style="font-size: 14px; color: rgb(123, 12, 0);"&gt;TensorFlowOnSpark 开源地址： github.com/yahoo/TensorFlowOnSpark&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 5px;"&gt;&lt;span style="font-size: 14px; color: rgb(123, 12, 0);"&gt;RDMA 增强版开源地址： github.com/yahoo/tensorflow/tree/yahoo&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 5px;"&gt;&lt;span style="font-size: 14px;"&gt;提供多示例程序（包括 MNIST，Cifar10，Inception，and VGG）以说明 TensorFlow 程序到TensorFlowOnspar转换过程，并且利用 RDMA。地址：&lt;span style="font-size: 14px; color: rgb(123, 12, 0);"&gt;https://github.com/yahoo/TensorFlowOnSpark/tree/master/examples&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 5px;"&gt;&lt;span style="font-size: 14px;"&gt;提供一张亚马逊机器图像用于在 AWS EC2 上应用 TensorFlowOnSpark。接着，与 CaffeOnSpark 一样，我们会推进 TensorFlowOnSpark。地址：&lt;span style="font-size: 14px; color: rgb(123, 12, 0);"&gt;https://github.com/yahoo/TensorFlowOnSpark/wiki/GetStarted_EC2&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文由机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 12:59:28 +0800</pubDate>
    </item>
    <item>
      <title>资源 | Wasserstein GAN 的 TensorFlow 实现</title>
      <link>http://www.iwgc.cn/link/4694510</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="font-size: 16px; white-space: normal; color: rgb(62, 62, 62); line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255); background-color: rgb(117, 117, 118); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;选自GitHub&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与：吴攀、李泽南&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 12px;"&gt;Facebook 人工智能研究中心（FAIR）近日提出的 Wasserstein GAN 引起了人工智能研究界的广泛关注，参见机器之心的文章&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722818&amp;amp;idx=3&amp;amp;sn=03cb67c8a8ee7f83a7448b518f4336ab&amp;amp;chksm=871b167cb06c9f6a018a99b79d8b2764b207be2b4d03f132151d99124edf2aff4c116a9dc98d&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650722818&amp;amp;idx=3&amp;amp;sn=03cb67c8a8ee7f83a7448b518f4336ab&amp;amp;chksm=871b167cb06c9f6a018a99b79d8b2764b207be2b4d03f132151d99124edf2aff4c116a9dc98d&amp;amp;scene=21#wechat_redirect"&gt;《学界 | FAIR 提出常见 GAN 训练方法的替代方法：WGAN》&lt;/a&gt;和《&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723168&amp;amp;idx=3&amp;amp;sn=41fcf2fb0408c7b6a9b82d55d91c2b9c&amp;amp;chksm=871b171eb06c9e082c4083ff32748104a617e5cb1e6bd4d296b4db431358b8a41f40908ea8a5&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650723168&amp;amp;idx=3&amp;amp;sn=41fcf2fb0408c7b6a9b82d55d91c2b9c&amp;amp;chksm=871b171eb06c9e082c4083ff32748104a617e5cb1e6bd4d296b4db431358b8a41f40908ea8a5&amp;amp;scene=21#wechat_redirect"&gt;专栏 | 看穿机器学习（W-GAN 模型）的黑箱》&lt;/a&gt;，其中在前一篇文章也给出了 WGAN 的 PyTorch 实现，今天这里要介绍的是 WGAN 的 TensorFlow 实现：WassersteinGAN.tensorflow。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px; color: rgb(123, 12, 0);"&gt;项目地址：https://github.com/shekkizh/WassersteinGAN.tensorflow&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 10px;"&gt;&lt;span style="font-size: 14px;"&gt;相关链接：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;论文地址：https://arxiv.org/abs/1701.07875&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;PyTorch 实现：https://github.com/martinarjovsky/WassersteinGAN&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Reddit 上有趣的讨论：https://www.reddit.com/r/MachineLearning/comments/5qxoaz/r_170107875_wasserstein_gan/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;注意：该实现引用的论文将鉴别器（discriminator）写作 critic，以下叙述中两个词会交替出现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;最近，一篇引人关注的论文讨论了 GAN 的稳定性和训练中损失函数的可解释性。GAN 本质上是一种试图通过生成对抗数据，通过最小化 f-divergence（概率分布的差异）来学习真实数据分布的模型。最初提出的 GAN 的最小最大目标的收敛可以解释为最小化 Jensen Shannon（JS）散度（divergence）。在本论文的研究中，作者发现当被比较的两个分布的支撑集不重叠时，这种方式存在缺陷，并提出了使用 earth movers/wasserstein distance 作为 JS 的替代品。同样在 f-divergence metrices 上的例子进一步支持了这一观点。注意，当 f-divergence 是离散的（如在 JS 和 KL 中），我们可能在具有梯度的学习模型中遇到问题，因为散度损失并不是在每一处都是可微分的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;该论文中提出的定理 1 是大多数人认为 wasserstein distance 能够帮助训练 GAN 的关键。该定理阐述了相对于其参数和局部 lipchitz 是连续的分布映射函数（critic）具有连续的和几乎无处不在的可微分 wasserstein distance。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;连续性和几乎无处不在的微分度量将意味着我们可以在对生成器进行更新之前大强度地训练鉴别器，前者进而将接收改进的可靠梯度以从鉴别器进行训练。由于训练鉴别器强烈地导致消失的梯度，使用早期的 GAN 的方式不可能进行这样的训练。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;鉴于神经网络在参数方面通常是连续的，所以可以确定的是 critic 是 Lipschitz 的。通过在 critic 中剪裁权重参数，我们可以在模型接近线性增长时阻止它饱和。这意味着函数的梯度由该线性度的斜率成为了 Lipschitz 界限的边界。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;先决条件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;该代码在使用英伟达 Titan GPU 的 Linux 系统中经过了测试&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;模型在 TensorFlow v0.11 与 Python2.7 的环境下经过了训练。新版本的 TensorFlow 需要更新 summary statements 以防止错误警告&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;请手动下载和解压 CelebA 数据集，下载链接：https://www.dropbox.com/sh/8oqt9vytwxb3s4r/AADIKlz8PR9zr6Y20qbkunrba/Img/img_align_celeba.zip&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;main.py 的默认 arguments 运行带有交叉熵目标函数的 GAN&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;run_main.sh 有运行 Wasserstein GAN 模型的命令&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;结果&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;用于训练模型的网络架构与原始 DCGAN 中使用的网络架构非常相似。这不同于在论文研究中 PyTorch 版本代码中所实现的生成器和鉴别器都有「额外层（extra layers）」跨度的结果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;网络中的所有偏差项都已被去除。我们目前还无法确定在生成器中丢弃偏差的理由，但在 critic 中，我们可能必须将函数约束到更小的 lipschitz 边界内。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;以下结果是在 1e5 次迭代后，我们的系统花了大约 18 小时得到的。这可能不是最收敛的结果，所以不要对此过于严肃。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;在训练 GAN 之后生成的图像的随机样本的 wasserstein distance 为 1e5 次迭代，lr = 5e-5，RMSPropOptimizer。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049555g8xtVT.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;作为比较：使用具有交叉熵目标的GAN生成的图像的随机采样为2e4 次迭代，lr = 2e-4，AdamOptimizer。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/14870495553WlhIH.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;span style="font-size: 14px; text-align: justify;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;观察报告&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在经过长时间的试验后，我们发现实现论文中的理论是如此的简单。从实现的角度来看，主要的变化是：&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;鉴别器/critic 不再产生 S 形或概率输出。鉴别器的损失是简单的实际和生成图像之间的输出差。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;每一次升级生成器后都要多次训练 critic。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Critic 的权重被限制在接近零的低值上。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;需要不使用动量的低学习率和优化器。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em; margin-bottom: 10px;"&gt;&lt;span style="font-size: 14px;"&gt;在给定了非常低的学习率和在每次生成器升级后，鉴别器多次升级的情形下，训练的速度会非常慢，这是我们事先料到的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Wasserstein GAN 鉴别器损失。注意在原论文中鉴别器损失被标记了负号，因此在图上的方向出现了翻转。据我观察，鉴别器的总体趋势是收敛的，但它在特定区间可能会有一些涨落。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049556mfEz1Z.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在这个问题空间中最小化 wasserstein distance 的训练可以解释为使得 critic 将低值分配给真实数据，将高值分配给假数据。另一方面，生成器试图生成 critic 给予的类似真实图像那样的低值图像。换句话说，当 critic 不再能够区分和分配不同的值到生成的和真实的图像时，模型收敛——所以我认为论文中把鉴别器（discriminator）称作是 critic 有一些道理。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;上文提到的生成器试图为 critic 分配像真实图像那样的低值。虽然训练生成器得到的值一直接近于零。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049556IAZVnl.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;权重在 critic 中被修剪以保证 lipschitz 边界和连续性，这一观点被论文作者在 Reddit 中指出，值得注意。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;em&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;在实际中，这个权重修剪参数并不是非常重要的，但也还需要更多的研究。以下是有更大的修建参数 c 时的效果：&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;em&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;鉴别器需要更长的训练时间，因为其必须要在一些权重达到更大的值时才会饱和。这意味着存在 critic 训练不充分的风险，这可能会导致糟糕的估计和梯度。有时候 critic 中需要符号更改，而对一些权重而言，将 c 变成 -c 需要更长的时间。如果鉴别器在这个过程中更新，那么可能会得到非常糟糕的梯度。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;em&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;容量会增加，这有助于最佳训练的鉴别器提供更好的梯度。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;em&gt;&lt;span style="font-size: 14px; color: rgb(136, 136, 136);"&gt;总而言之，更低的修剪参数更稳定，但如果 critic 得到了良好的训练，那么更高的修建参数可以实现更好的模型。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487049556yrQLdb.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;综上所述，该论文的观点：对应于损失的质量的一致性要求在给定公式的情况下是可以理解的。但由于质量是相对的，我无法了解对于所有生成图像的损失所产生的图像的改进，即对于损失改善对应于多少图像质量改进还不清楚。即使如此，很可能「收敛」后生成的所有图像都是真实的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;这个新的损失方式将会如何与 GAN 相关的其他半监督/无监督方式，与计算机视觉任务中的对抗损失学习方式相适应？这些问题值得我们继续探讨。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文由机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 12:59:28 +0800</pubDate>
    </item>
    <item>
      <title>资源 | 数据至上的人工智能时代，最好的公开数据集有哪些？</title>
      <link>http://www.iwgc.cn/link/4694511</link>
      <description>&lt;div class="article-content"&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style="font-size: 16px; white-space: normal; color: rgb(62, 62, 62); line-height: 28.4444px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section data-id="85660" data-custom="rgb(117, 117, 118)" data-color="rgb(117, 117, 118)" style="border-width: 0px; border-style: initial; border-color: currentcolor; font-family: 微软雅黑; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;section style="margin-top: 2em; padding-top: 0.5em; padding-bottom: 0.5em; border-style: solid none; font-family: inherit; text-decoration: inherit; border-top-color: rgb(204, 204, 204); border-bottom-color: rgb(204, 204, 204); border-top-width: 1px; border-bottom-width: 1px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: -1.2em; min-height: 1em; font-size: 1em; border-width: initial; border-style: initial; border-color: currentcolor; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(255, 255, 255); background-color: rgb(117, 117, 118); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;选自Medium&lt;/span&gt;&lt;/p&gt;&lt;section data-style="white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);" style="padding: 16px 16px 10px; background-color: rgb(255, 255, 255); font-family: inherit; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;机器之心编译&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-top: 5px; margin-bottom: 5px; min-height: 1em; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;参与：蒋思源、黄小天&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;现如今构建人工智能或机器学习系统比以往的时候更加容易。普遍存在的尖端开源工具如 TensorFlow、Torch 和 Spark，再加上通过 AWS 的大规模计算力、Google Cloud 或其他供应商的云计算，这些都意味着你可以在下午休闲时间使用笔记本电脑去训练出最前沿的机器学习模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;虽然不算是人工智能训练的最前沿，但人工智能的无名英雄确实就是数据，许多许多标注或未标注的数据。研究部门和公司也都认识到数据民主化是加快人工智能的必要步骤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;然而，涉及到机器学习或人工智能的大多数产品强烈依赖于那些通常没有开放的私有数据集，而本文将指出解决这种困境的办法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;事实上，我们很难用一篇文章来说明哪些开放数据集是有用的，因为那些有用的开放数据集必须是可概念证明的，而什么数据集对产品或确认特征是有用的，在你收集你自己所有数据之前是不知道的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;重要的是，如果数据集有良好的表现并不能保证其训练的机器学习系统在实际产品场景中表现良好。许多人在构建人工智能系统时常常忘了构建一个新人工智能解决方案或产品最困难的部分不是人工智能本身或算法，通常最困难的地方是数据收集和标注。标准数据集可以作为验证或构建更优良解决办法的良好起点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;在这个星期，我和一些机器学习专家们讨论的都是有关标准数据集的问题。为了让你能更轻松地构建人工智能系统，我们搜集了一些开源数据集，这些开源数据集是我们认为在人工智能的世界里你所需要了解的。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;计算机视觉&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;MNIST: 最通用的健全检查。25x25 的数据集，中心化，B&amp;amp;W 手写数字。这是个容易的任务——但是在 MNIST 有效，不等同于其本身是有效的。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://pjreddie.com/projects/mnist-in-csv/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CIFAR 10 &amp;amp; CIFAR 100: 32x32 彩色图像。虽不再常用，但还是用了一次，可以是一项有趣的健全检查。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://www.cs.toronto.edu/~kriz/cifar.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;ImageNet: 新算法实际上的图像数据集。很多图片 API 公司从其 REST 接口获取标签，这些标签被怀疑与 ImageNet 的下一级 WordNet 的 1000 个范畴很接近。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://image-net.org/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;LSUN: 场景理解具有很多辅助任务（房间布置评估、显著性预测等）和一个相关竞争。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://lsun.cs.princeton.edu/2016/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;PASCAL VOC: 通用图像分割／分类：对于构建真实世界的图像注释毫无用处，对于基线则意义重大。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://host.robots.ox.ac.uk/pascal/VOC/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;SVHN: 来自谷歌街景视图（Google Street View）的房屋数量。把这想象成荒野之中的周期性 MNIST。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://ufldl.stanford.edu/housenumbers/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;MS COCO: 带有一个相关性竞争的通用图像理解／字幕。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://mscoco.org/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Visual Genome: 非常详细的视觉知识库，并带有 100K 图像的深字幕。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://visualgenome.org/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Labeled Faces in the Wild:通过名称标识符，已经为被裁剪的面部区域（用 Viola-Jones）打了标签。现有人类的子集在数据集中有两个图像。对于这里做面部匹配系统训练的人来说，这很正常。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://vis-www.cs.umass.edu/lfw/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;自然语言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;文本分类数据集（2015 年来自 Zhang 等人）：一个用于文本分类的合 8 个数据集为 1 个的大型数据集。这些是用于新文本分类的最常被报道的基线。样本大小从 120K 到 3.6M, 问题从 2 级到 14 级。数据集来自 DBPedia、Amazon、Yelp、Yahoo!、Sogou 和 AG。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址https://drive.google.com/drive/u/0/folders/0Bz8a_Dbh9Qhbfll6bVpmNUtUcFdjYmF2SEpmZUZUcVNiMUw1TWN6RDV3a0JHT3kxLVhVR2M&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;WikiText：来自由 Salesforce MetaMind 精心策划的维基百科文章中的大型语言建模语料库。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Question Pairs：从包含重复／语义相似性标签的 Quora 释放出来的第一个数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://data.quora.com/First-Quora-Dataset-Release-Question-Pairs&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;SQuAD: 斯坦福大学问答数据集（The Stanford Question Answering Dataset）——一个被广泛应用于问题回答和阅读理解的数据集，其中每个问题的答案形式是文本的一个片段或碎片。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://rajpurkar.github.io/SQuAD-explorer/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CMU Q/A Dataset: 手动生成的仿真陈述问题／回答与维基百科文章的难度评级相对应。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www.cs.cmu.edu/~ark/QA-data/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Maluuba Datasets: 用于状态性自然语言理解研究的人工生成的精密数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://datasets.maluuba.com/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Billion Words: 大型，有统一目标的语言建模数据集。常被用来训练诸如 word2vec 或 Glove 的分布式词表征。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www.statmt.org/lm-benchmark/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Common Crawl: PB 级规模的网络爬行——常被用来学习词嵌入。可从 Amazon S3 上免费获取。由于它是 WWW 的抓取，同样也可以作为网络数据集来使用。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://commoncrawl.org/the-data/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;bAbi: 来自 FAIR（Facebook AI Research）的合成式阅读理解与问答数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://research.fb.com/projects/babi/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;The Children’s Book Test：从来自古登堡计划的童书中提取（问题+上下文，回答）组的基线。这对问题回答、阅读理解和仿真陈述查询有用。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://research.fb.com/projects/babi/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;&amp;nbsp;Stanford Sentiment Treebank: 标准的情感数据集，在每一个句子解析树的节点上带有细腻的情感注解。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://nlp.stanford.edu/sentiment/code.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;20 Newsgroups: 文本分类经典数据集中的一个。通常可用作纯分类或任何 IR／索引算法的基准。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://qwone.com/~jason/20Newsgroups/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Reuters: 旧的，纯粹基于分类的数据集与来自新闻专线的文本。常用于教程。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://archive.ics.uci.edu/ml/datasets/Reuters-21578+Text+Categorization+Collection&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;IMDB:一个用于二元情感分类的更旧更小的数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://ai.stanford.edu/~amaas/data/sentiment/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;UCI’s Spambase: 来自著名的 UCI 机器学习库较久的经典垃圾电子邮件数据集。由于数据集的策划细节，这可以是一个学习个性化过滤垃圾邮件的有趣基线。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://archive.ics.uci.edu/ml/datasets/Spambase&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;语音&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;大多数语音识别数据集是有所有权的，这些数据为收集它们的公司带来了大量的价值，但在这一领域里，许多可用的数据集都是比较旧的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;2000 HUB5 English: 仅仅只包含英语的语音数据，最近百度发表的论文《深度语音：扩展端对端语音识别（Deep Speech: Scaling up end-to-end speech recognition）》就是使用了该语音数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://catalog.ldc.upenn.edu/LDC2002T43&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;LibriSpeech：包括文本和语音的有声读物数据集。它是近 500 小时由多人朗读清晰的各类有声读物数据集，且由包含文本和语音的书籍章节组织起结构。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www.openslr.org/12/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;VoxForge：带口音的语音清洁数据集，特别是对于如期望对不同口音或腔调的语音有鲁棒性需求的系统很有用。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www.voxforge.org/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TIMIT：只包含英语的语音识别数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://catalog.ldc.upenn.edu/LDC93S1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;CHIME：包含噪声的语音识别数据集。该数据集包含真实、模拟和清洁的语音记录。实际上是记录四个说话者在四个噪声源的情况下近 9000 份记录，模拟数据是在结合话语行为和清洁无噪语音记录的多环境下生成的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://spandh.dcs.shef.ac.uk/chime_challenge/data.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;TED-LIUM：TED 演讲的语音转录数据集。1495 份 TED 演讲的语音记录，并且这些语音记录有对应的全文本。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www-lium.univ-lemans.fr/en/content/ted-lium-corpus&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;推荐和排序系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Netflix Challenge：第一个主要 Kaggle 风格的数据库。因为存在隐私问题，只能非正式地获得授权。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://www.netflixprize.com/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;MovieLens：各种电影的评论数据库，通常用于基线协同过滤（collaborative filtering baselines）。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://grouplens.org/datasets/movielens/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Million Song Dataset：在 Kaggle 上大量、富元数据（metadata-rich）、开源的数据集，有利于人们试验混合推荐系统（hybrid recommendation systems）。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://www.kaggle.com/c/msdchallenge&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Last.fm：音乐推荐数据集，该数据集能有权访问底层社交网络和其他元数据，而这样的数据集正对混合系统有巨大的作用。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://grouplens.org/datasets/hetrec-2011/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;网络和图表&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Amazon Co-Purchasing 和 Amazon Reviews：从亚马逊以及相关产品评论数据网络爬取的如「用户买了这个同时也会买哪个」这样的语句。适合在互联网中进行推荐系统的测试。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: left; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://snap.stanford.edu/data/#amazon 和 http://snap.stanford.edu/data/amazon-meta.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Friendster Social Network Dataset：在 Friendster 的重心转入到游戏网站之前，这家网站发布了包含 103,750,348 个用户好友列表的匿名数据集。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://archive.org/details/friendster-dataset-201107&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;地理测绘数据库&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;OpenStreetMap：免费许可的全球矢量数据集。其包含了旧版的美国人口统计局的 TIGER 数据。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：http://wiki.openstreetmap.org/wiki/Planet.osm&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;Landsat8：整个地球表面的卫星拍摄数据，每隔几周会更新一次。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://landsat.usgs.gov/landsat-8&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;NEXRAD：多普雷达扫描的美国大气环境。&lt;/span&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;地址：https://www.ncdc.noaa.gov/data-access/radar-data/nexrad&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;人们常常认为解决一个数据集上的问题就相当于对产品进行了一次完整的审视。因为我们可以使用这些数据集进行验证或证明一个概念，但是也不要忘了测试模型或原型是如何获取新的和更实际的数据来提高运算效果，获得优良产品的。数据驱动的成功公司通常从他们收集新数据、私有数据的能力中获得力量，从而以一种具有竞争力的方式提高他们的表现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;最后的话&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="text-align: justify; line-height: 1.75em;"&gt;&lt;span style="font-size: 14px;"&gt;好数据集还有很多，这份列表当然不可能完全覆盖，如果你知道还有很好的数据集值得推荐，请通过评论与我们分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(136, 136, 136);"&gt;&lt;em&gt;&lt;span style="font-size: 14px;"&gt;原文地址：https://medium.com/startup-grind/fueling-the-ai-gold-rush-7ae438505bc2#.7yh3syep0&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; text-align: justify; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="line-height: 25.6px; font-family: 微软雅黑; font-size: 14px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="color: rgb(62, 62, 62); line-height: 25.6px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; color: rgb(127, 127, 127); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;©本文由机器之心编译，&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-style: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(127, 127, 127); line-height: 25.6px; font-family: 微软雅黑; text-align: justify; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style="margin-bottom: 5px; white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="color: rgb(217, 33, 66); line-height: 1.6; font-size: 12px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="white-space: normal; min-height: 1em; font-size: 18px; font-family: 微软雅黑; text-align: center; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="font-size: 12px; color: rgb(217, 33, 66); line-height: 1.6; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 12:59:28 +0800</pubDate>
    </item>
  </channel>
</rss>
