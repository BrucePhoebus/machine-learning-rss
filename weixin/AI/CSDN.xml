<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>陌陌直播全景监控系统实践</title>
      <link>http://www.iwgc.cn/link/4457679</link>
      <description>&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系统建设背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着移动互联网技术的高速发展，人们喜欢的媒体交互方式也由文字、图片、小视频迅速切换到了直播。作为一种新兴的社交方式，直播在实时性、交互性方面具备先天优势，这也推进了直播在各行各业的快速应用。作为最大的陌生人社交平台，陌陌自然也少不了直播。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌拥有大量的用户群体，直播上线后，海量的主播和观众开始使用直播社交，系统并发一度达到高峰。在如此高并发的情况下，如何保证为用户提供最佳的直播体验，成为我们的当务之急。为此，我们建设了一套直播全景监控系统，实时监控陌陌全平台直播服务质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系统架构实践&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统基于陌陌实时日志基础平台而研发，通过高效的实时分析系统，实时将各业务维度的数据进行聚合呈现，并加以监测报警，提供秒级故障发现机制。 同时，拨测系统在主播开播的第一时间向CDN拉取流媒体，进行内容层面的分析监控，第一时间发现问题流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;日志收集&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujFvPOB9dDfKoSXVwJCwE1U0wxqlntmLWejaicANw2QQN0HLyg23FVOkib1hric79RFEshJuiaoHkNtsQ/640?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;流媒体分发质量的好坏，大多取决于CDN的节点分布程度，常用商用CDN公司由于资源限制等因素，在建设节点时，会形成一定的节点片区优势，而我们的业务又需要全局最优。 同时，任何系统都不能保证百分百的可靠性，CDN也有故障的时候。为了保证业务系统的高可用和最佳质量，陌陌采用了多路CDN分发，CDN之间互推的流媒体分发策略。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;依托此业务架构，我们在推流终端、CDN入口、CDN互推入口、CDN出口、播放终端等重要环节进行流媒体质量指标采集，供全景质量监控系统分析使用。从业务上，日志分为以下两类：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;事件类，包含开播、停播、播放、停止、心跳等基础播放行为事件。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;质量类，包含带宽、帧率、延迟、卡顿等关键视频质量评测指标。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;直播质量评估&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们知道，评测互联网直播分发质量最重要的三个指标是秒开、延迟和卡顿，其中又以卡顿最为影响用户体验。陌陌的大数据分析平台表明，当卡顿率上升的时候，大多数用户会选择放弃观看或者切换频道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统定义了一套直播质量评测指标，从不同的维度对当前分发质量做量化，主要包含以下几个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;平均接入延迟&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;平均接入延迟主要包含请求延迟、首包时间、首帧时间等，其中请求延迟定义为从发起HTTP请求到收到HTTP返回码所耗费的时间，用于衡量CDN网络的接入速度；首帧时间定义为从发起HTTP请求到收到第一帧流媒体数据所耗费的时间，用来衡量CDN的回源速度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;端到端延迟&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;端到端延迟是指媒体从主播端产生到观众端播放所耗费的整体链路时间。我们在主播端流媒体编码时，在媒体数据中加入时间戳信息，观众播放流媒体数据时解析该时间戳，即可得到端到端延迟时间。该时间主要用来衡量CDN分发引入的延迟大小，在直播系统中，在不影响卡顿等其他指标的情况下，延迟越小越优。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;卡顿率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;卡顿率=出现卡顿的在线用户数/在线总用户数*100%，通过此指标可以衡量当前卡顿影响的人群范围；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;人均卡顿次数&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;人均卡顿次数=在线卡顿总次数/在线用户数，通过此指标可以从卡顿频次上衡量整体的卡顿严重程度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;卡顿时比&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;卡顿时比=卡顿总时间/播放总时间*100%，通过此指标可以从时间维度衡量卡顿严重程度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;推流故障率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;推流故障率=推流失败次数/总推流次数*100%，通过此指标可以衡量当前主播的开播故障情况，通常CDN网络出现故障时会导致主播开播不了，此值会变高。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;播放故障率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;播放故障率=播放失败次数/总播放次数*100%，通过此指标可以衡量当前观众播放故障情况。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过以上算法，已经能够比较全面的衡量直播分发质量情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;多维度业务聚合&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌在直播分类中属于泛娱乐直播，与游戏、户外直播最大的不同之处在于主播数目庞大，我们需要将大量的主播分散到不同的CDN、不同的域名去做分发。运维需要实时关注到各业务维度的直播质量情况，基于在线用户数，监控系统提供了丰富的业务维度聚合监控。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;在线用户定义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线主播，当主播开始直播，主播端会发送“开始推流”事件日志，即可将主播视为上线；当&lt;/span&gt;&lt;span&gt;主播停止直播，主播端会发送“停止直播”事件日志，即可视为主播下线。在网络不可靠或者终端crash的情况下，事件日志可能会出现丢失，加上主播端的心跳，即可解决此种情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线观众，当观众进入房间观看，观众端会发送“开始播放”事件日志，即可视为观众上线；当观众退出房间，观众端会发送“停止播放”事件日志，即可视为观众下线。当房间销毁时，所有在该房间的观众视为下线。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;业务维度聚合统计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业务维度聚合统计提供了不同角度的质量监控视图，主要分为全网维度、CDN维度、域名维度、CDN节点维度、房间维度、ISP维度、房间类型维度、终端类型维度、观众维度等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以房间维度为例，主要关注该房间在全网的分发质量情况，例如观众走势、卡顿走势、故障率走势、开播时间等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;实时报警机制&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于多业务维度的统计数据，我们做了一系列的报警机制。报警分为状态类报警和通知。状态类报警定义为当监测指标高于（低于）报警门限值时，报警发生，当监测指标低于（高于）报警门限值时，报警恢复，例如“卡顿率过高”、“故障率过高”等；通知类报警定义为当监测指标达到报警门限时，报警发生，再次达到门限时，报警再次发生，没有报警状态，不存在恢复，例如“在线用户在五秒内减少百分之二十”、“卡顿比环比增加百分之十”等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;报警方式采用陌陌基础智能报警平台，支持IM、短信、电话等众多通知方式，在出现故障时，第一时间通知相关责任人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;主动拨测&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实时日志分析只能被动监控线上已经发生的问题，在第一时间驱动故障方解决，算是一种“亡羊补牢”方案。主动拨测系统作为全景质量监控系统的补充，通过智能调度中心进行任务分发，在主播开播前探测主播推流节点故障情况，在主播开播后第一时间探测流媒体可用性，在观众播放前探测重点区域节点可用性情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujFvPOB9dDfKoSXVwJCwE1Uy0Gk8rVTqvPwlFMY5AYbJgicAeFMWnES8bEVlGB7K7DxpofYlo931Jw/640?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;考虑到拨测终端大多数终端部署在IDC机房，用拨测系统来评价网络分发质量不能代表用户终端真实的播放情况，因此，拨测系统的主要设计目的是评价流媒体在内容层面上的可用性及CDN节点的可用性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;流媒体内容指标测量&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;流媒体内容层指标我们做了媒体完整性监测和媒体内容质量监测两类。媒体完整性监测主要是分析HTTP+FLV拉取的FLV文件完整性，包含FLV头部信息是否完整，视音频帧是否存在， 首帧是否为I帧（确保首屏不花屏）；媒体内容层监测主要分析流媒体的视音频不同步、黑屏等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;智能调度中心&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;智能调度中心按照业务需求，对拨测终端进行任务分发及结果收集。从任务上划分，我们定义了自动任务和手动任务，自动任务通过与BO（后台系统）联动，实时获取最新开播房间，自动轮询房间媒体质量情况；手动任务主要用于运维在发现故障的情况下，对指定区域或CDN节点，进行定向拨测。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;未来展望&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统的上线，为直播业务运维提供了一双眼睛，在功能逐步完善的情况下，做到第一时间发现问题、第一时间解决问题、第一时间预警问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在未来，我们将利用监控系统采集到的质量数据，结合CDN的区域差异、稳定性差异等，优化智能调度系统，让陌陌的流媒体在互联网上最优化传输，为用户提供最佳的直播社交质量体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;作者：&lt;/strong&gt;龚清华，陌陌高级研发工程师，主要负责陌陌直播质量监控。熟悉直播系统架构、熟悉CDN，具有较丰富的广电、互联网直播监控系统建设经验。&amp;nbsp;&lt;br/&gt;&lt;strong&gt;责编：&lt;/strong&gt;&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;屠敏&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，关注视频直播等领域，寻求报道或者投稿请发邮件&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;tumin@csdn.net&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>IoT带来的产业新机遇</title>
      <link>http://www.iwgc.cn/link/4457680</link>
      <description>&lt;p&gt;&lt;span&gt;物联网是基于嵌入式技术的物理对象网络，它能够沟通和感知并与内外部环境进行交互。物联网使用高效的无线通信协议、高性能的传感器以及低成本的处理器作支持。越来越多初创公司和成熟企业选择既有效又经济的IoT来升级解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据国际数据公司（IDC）的报告，2020年物联网的设备安装基数将增至近2120亿，其中包含300亿联网设备。IDC认为，消费者和企业大规模应用智能系统收集数据是大幅增长的主要原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然安全问题是最大障碍，但IoT低廉的运营成本和优质的客户服务使其成为了初创公司和成熟企业解决方案的首选。如下是IoT为不同产业带来的机遇：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Retail 零售业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2015年，60%的零售企业应用并积极发展IoT解决方案来提升服务，吸引消费者；这个数字到2016年底仍呈上升趋势。IoT之所以受零售业欢迎，是因为能有效提升消费者满意度，优化购物体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Insurance 保险业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调研的保险公司中，有63%的公司在积极投资IoT，原因跟零售业相似，也是为了提供更好的服务和体验以吸引顾客。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Utilities 公共事业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT能有效完善公共事业领域的生产体系，这也是为什么高达71%的公共事业单位在积极应用IoT。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Oil and Gas 石油和天然气产业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT在石油和天然气产业应用非常广泛，调研的公司中有56%都在积极投资建设IoT，促进产业互联互通。节省运营成本是IoT应用的主要原因，另外通过促进IoT技术的现代化和升级，可以让石油天然气生产更加高效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT的影响无处不在，诸多产业积极投资也就不足为奇了。如今初创公司和成熟企业都在调整自己的商业模式以更好适应IoT大潮。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】大数据行业图谱，InsideSales完成5000万美元融资</title>
      <link>http://www.iwgc.cn/link/4457681</link>
      <description>&lt;p&gt;&lt;span&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阿里云与国家天文台成立天文大数据联合研究中心&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;22日，中国科学院国家天文台与阿里云正式成立“天文大数据联合研究中心”。阿里云将作为天文台云计算大数据领域唯一战略合作伙伴，共同推进天文学科研和科普教育工作。双方拟积极推进公众远程天文观测网络和天象直播平台的建设。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;利用大数据帮助企业加速销售，InsideSales完成5000万美元融资&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;成立于2004年的InsideSales总部位于美国普罗沃，是一家专业的大数据分析公司，旨在为企业提供基于大数据分析的用户购买行为预测服务。近日，该公司宣布获得了新一轮的E轮融资，金额达5000万美元，由Polaris Capital、爱尔兰战略投资基金和QuestMark领投。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Facebook 发布开源框架 PyTorch， Torch 终于被移植到 Python 生态圈&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本周，Facebook 的 AI 研究团队发布了一个 Python 工具包，专门针对 GPU 加速的深度神经网络（DNN）编程。它有望辅助、或在一定程度上替代，现有的 Python 数学、统计库（比如 NumPy）。它实现了机器学习框架 Torch 在 Python 语言环境的执行。开发团队表示，除 Facebook之外，它还已经被推特、卡内基梅隆大学和 Salesforce 等机构采用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;才云团队入选微软加速器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;21日微软加速器公布了“微软加速器•上海”一期入选初创企业名单，才云 （Caicloud） 团队通过层层选拔，在1月17日微软加速器上海第一期招募的最终评审中以优异答辩成绩获此殊荣，顺利入选微软加速器。据悉，才云此次作为“微软加速器•上海”首批入驻企业，将在未来四个月加速期内免费入驻微软加速器上海办公区，得到思想领袖、行业专家及技术专家组成的导师团的扶植与指导，还将获得价值 300 万人民币的基于微软技术的 Azure 云服务等多种资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;甲骨文公司Oracle收购API管理创企Apiary，欲完善自身云服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;甲骨文一直都想要发展云计算业务，目前看来它已成功跻身其中。经过多年角逐，AWS、Microsoft Azure 和Google Cloud等数据巨头都想成为这个行业的引领者。本周，甲骨文还在纽约举办了一场云计算大会，并宣布将在弗吉尼亚雷斯顿、伦敦和土耳其开设三个新的数据中心，进而促成该公司有效实施云战略计划。虽然甲骨文有着丰富的收购经验，但目前尚不清楚Apiary加入Oracle云计算团队后，是否会对Apiary既有用户造成影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大数据行业图谱：为什么大数据应用公司这么贵？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2017年，大数据这把火烧了六年，依然没有减弱的征兆。过去一年，话题的热点已经不再是大数据概念和定义，而是集中在大数据的应用。大多数企业老板已经明白什么是大数据，开始关心数据如何与业务结合，提升企业盈利能力。从全球市场来看，大数据应用占据整个产业的半壁江山。根据Wikibon报告，2016年全球大数据市场规模为452.6亿美金，细分领域中行业解决方案和应用这两类细分市场规模为226.5亿美金。目前国内企业在大数据的投入还主要是硬件层和技术层，应用层投入相对较少，但应用层的潜力无疑是巨大的，未来在单个垂直行业都会是千亿级市场。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多孤岛数据访问加速初创公司Alluxio与Dell EMC签约合作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多孤岛大数据访问加速初创公司Alluxio去年与华为达成合作关系，最近又与Dell EMC就ECS产品签订了类似的协议。Alluxio解决的问题是，很多单独的存储机制是针对需要被多个分析型应用访问的大规模非结构化数据。每种应用（Hadoop、Spark、Storm、samza等）需要自己安排访问每个数据源（AWS S3、HDFS、Ceph、Isilon、Gluster等）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2017年SaaS行业走势，竟然是……&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2015年被称为企业服务的元年，2016年，随着资本寒冬，企业服务类公司的估值也有所下调。由于To B 的逻辑不像To C，不可能一夜爆发，所以对创业公司来说也是一个漫长的过程。在这个过程中，会经历怎样的周期迭代?可以说，拿中国企业服务对标美国不一定全对，但至少不会差太大。所以，我们将美国的To B发展史进行了理顺。无论如何，企业服务都是一个值得长期跟进的领域，也会是2017年的重点赛道之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;KubeVirt — 围绕 Kubernetes 构建的虚拟机管理架构&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;KubeVirt 是一个围绕 Kubernetes 构建的虚拟机管理架构。使用 KubeVirt 可声明：创建预定义的 VM，在 Kubernetes 集群上调度 VM，启动 VM，停止 VM，删除 VM。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>微服务实践 | 网易考拉海购Dubbok框架优化详解</title>
      <link>http://www.iwgc.cn/link/4445445</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQORchpgdnmlciaHEVbibSEK29SJq45K1IKy5ADKMTWm5udTe8188WviaD6jncKO4z9USz01CAjLzTibMXw/0?wx_fmt=gif"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AoP1HGBJoBAbIgBDCR7XUibDIvCIibhLafgTWxqUP8LfQbdQkdYiazYQCQ/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;微服务化&lt;/strong&gt;&lt;/span&gt;是当前电商产品演化的必然趋势，&lt;strong&gt;&lt;span&gt;网易考拉海购&lt;/span&gt;&lt;/strong&gt;通过微服务化打破了业务爆发增长的架构瓶颈。本文结合网易考拉海购引用的开源Dubbo框架，分享支持考拉微服务工作的基本原理。文章分析了使用Dubbo过程中遇到的问题，讲解了团队所做的一些问题修复和功能集成工作，在此基础上最终形成了考拉内部持续维护升级的Dubbok框架。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;本文背景还要从网易考拉海购（下文简称“考拉”）微服务化说起，现在任何大型的互联网应用，尤其是电商应用从Monolithic单体应用走向微服务化已经是必然趋势。微服务化是一个比较宽泛的概念，涉及到一个产品生命周期的多个方面，首先它作为一个指导原则指引业务划分、架构解耦等；技术层面实施微服务需要开发测试阶段、运行阶段、发布阶段、部署阶段等一系列基础框架的支撑。我们在享受服务化易扩展易部署等便利性的同时，也面临新的问题，如数据一致性、分布式调用链路追踪、异常定位、日志采集等。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;本文将集中在支撑微服务交互、运行的基础框架讲解上，即考拉当前使用的&lt;strong&gt;&lt;span&gt;Dubbok框架&lt;/span&gt;&lt;/strong&gt;，Dubbok由阿里开源Dubbo框架的优化和功能改进而来。当前开源上可选用的微服务框架主要有&lt;strong&gt;&lt;span&gt;Dubbo&lt;/span&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;span&gt;Spring Cloud&lt;/span&gt;&lt;/strong&gt;等，鉴于Dubbo完备的功能和文档且在国内被众多大型互联网公司选用，考拉自然也选择了Dubbo作为服务化的基础框架。其实相比于Dubbo，Spring Cloud可以说是一个更完备的微服务解决方案，它从功能性上是Dubbo的一个超集，&lt;strong&gt;&lt;span&gt;个人认为从选型上对于一些中小型企业Spring Cloud可能是一个更好的选择。&lt;/span&gt;&lt;/strong&gt;提起Spring Cloud，一些开发的第一印象是http+JSON的rest通信，性能上难堪重用，其实这也是一种误读。&lt;/p&gt;&lt;p&gt;微服务选型要&lt;strong&gt;&lt;span&gt;评估&lt;/span&gt;&lt;/strong&gt;以下几点：内部是否存在异构系统集成的问题；备选框架功能特性是否满足需求；http协议的通信对于应用的负载量会否真正成为瓶颈点（Spring Cloud也并不是和http+JSON强制绑定的，如有必要Thrift、protobuf等高效的RPC、序列化协议同样可以作为替代方案）；社区活跃度、团队技术储备等。作为已经没有团队持续维护的开源项目，选择Dubbo框架内部就必须要组建一个维护团队，先不论你要准备要集成多少功能做多少改造，作为一个支撑所有工程正常运转的基础组件，问题的及时响应与解答、重大缺陷的及时修复能力就已足够重要。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;下文将选取Dubbo高性能RPC通信原理、服务注册发现特性、依赖隔离、启动与停机等几个方面阐述Dubbok的工作原理和相关改进工作。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;高性能RPC&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo作为一个分布式通信框架，最基本的职责就是完成&lt;strong&gt;&lt;span&gt;跨进程的远程调用（RPC）&lt;/span&gt;&lt;/strong&gt;。以下是RPC基本流程图：&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AEn3Uz4kfJClRjY71P5B7cAKgauTJibicIPh4IVFiaJpPrl6ClTg9GIX3Q/0?wx_fmt=png"/&gt;&lt;span&gt;RPC工作原理（图片来自网络）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;RPC基本原理非常简单，那么Dubbo是如何实现高效的RPC通信的那，和其他分布式通信组件关注点一样，主要集中在以下几点的优化：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.协议栈：&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Dubbo支持自定义RPC协议，冗余字段少、通信性能高；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;序列化协议支持hessian2、Dubbo自定义序列化等高性能协议；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Dubbo支持序列化协议解码在业务线程（Netty3编码自动在业务线程执行）；&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A6Y3hmf45RSwvzicbT4FrHBU7jJibmDhmGh7q9DSd2rcpKzy3jjb7ibHFQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo RPC通信协议栈&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;2.线程模型：&lt;/strong&gt;&lt;span&gt;依赖Netty3的非阻塞线程模型，支持I/O、业务逻辑线程分离，通过Handler链处理请求。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A8TzLZfPddZroJ0f7jgBwU8gOcEYEDtlrLy7cKqwJy9v1XoFsXVcaAA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo业务线程与netty3 IO线程交互&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;这里特别强调&lt;strong&gt;&lt;span&gt;Netty3&lt;/span&gt;&lt;/strong&gt;，是因为Netty4在线程模型、buffer缓冲区等方面做了重大的设计和性能改进，包括Inbound、Outbound事件强制在I/O线程发起、buffer通过缓冲池减少分配释放、DirectBuffer实现缓冲区零复制等。Netty这块升级相对是一个高风险的点，明面上的API兼容性改造是小，如对Netty4工作原理认识不足，新的线程模型、buffer缓冲池等带来的非预期性能下降、内存泄露等问题相对更难定位与跟踪。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;讲到线程模型，实现上密切相关的&lt;strong&gt;&lt;span&gt;Dubbo网络连接模型&lt;/span&gt;&lt;/strong&gt;必须要提一下。Dubbo默认是所有服务共享单一的TCP长连接的（这也是为什么服务接口不适合传输大负载值，即容易阻塞其他服务的调用）。为响应慢或重要的服务接口考虑，Dubbo支持设置多TCP连接，此时连接数和线程池数默认是绑定的，即每连接对应一个线池，consumer、provider都执行这个策略，从线程隔离的角度讲是合理的，但不注意也容易造成线程占用资源过多，尤其是对于消费端基本无线程阻塞的情况下可能是一个设计缺陷。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.缓冲区：&lt;/strong&gt;Dubbo默认使用的全部是heap缓冲区，因此Socket通信不可避免会存在内核缓冲区和堆缓冲区复制消耗；除此之外在RPC协议解析（包括粘包/半包处理）、序列化协议解析等处理上也存在heap区内的复制，因此性能上是存在优化点的（当然要确有必要）。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;自动注册/发现、负载均衡等服务化特性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;高性能通信是Dubbo作为RPC框架的基本功能，但使其区别于Thrift、hessian、gRPC等框架的关键在于其新增的服务间自动协调、服务治理等特性。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.&amp;nbsp;服务自动注册自动发现、负载均衡&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;服务自动注册发现依赖于注册中心的支持，consumer与provider通过注册中心获取各自地址后直接通信。目前考拉使用Zookeeper作为注册中心，Dubbo原生支持Redis作为注册中心，使用pub/sub机制协调服务的上下线事件通知，但Redis方案要求服务器时间同步且存在性能消耗过大的缺点。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0Aee3hRIwkfdGcRg3UGWdQJnZKK0pBG5SS7KFVhX6XS0RvW7jwnzsb6w/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;消费者/提供者注册中心交互图&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用Zookeeper作为注册中心，建议选用curator作为客户端框架；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Zookeeper服务器异常宕机并重新启动的场景下，Dubbo服务的recover恢复机制存在不能重新注册的问题，导致老zk session失效后服务被错误清除。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;服务框架常见负载均衡实现方案包括：集中式、分布式，分布式又可分进程内、分进程两种。Dubbo采用的是服务发现和负载均衡共同集成在consumer端的分布式进程内解决方案。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A4EU5icFZicEt5jSSB6IFLY9Xaqe7Z2E1mCIZkoxX1YuDYr5kmGd1GT0w/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo负载均衡策略&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;负载均衡策略上Dubbo原生提供的有基于权重随机负载、最少活跃数优先、Roundrobin、一致性Hash等几个方案。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在实际应用中，为了能对个别错误率较高的异常provider做到及时发现、及时引流，Dubbok&lt;strong&gt;&lt;span&gt;增加了新的负载均衡策略&lt;/span&gt;&lt;/strong&gt;，在支持权重的基础上自动发现异常provider，异常期自动减流、正常后自动恢复流量。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.路由、集群容错、限流&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;和负载均衡策略一样，Dubbo的路由方案是集成在消费端的，加上集群容错功能客户端相对是一个重量的功能封装。可选方案是将路由工作移到注册中心完成（这要求注册中心具有&lt;strong&gt;&lt;span&gt;较强的可定制性&lt;/span&gt;&lt;/strong&gt;，不仅路由像权限控制、服务过滤、环境隔离等都可由注册中心集成）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;限流目前支持consumer、provider端并发限流，实际上是基于信号量限制的，以接口粒度分配信号量，当信号量用完新的调用将被拒绝，当业务返回后信号量被释放。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;消费端限流应该是为整个提供端集群分配信号量，而Dubbo错误的将信号量分配给单个机器。这个问题目前可以通过下文提到的隔离框架的流控功能来实现。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;限流并非精确限制，不应当依赖其实现严格的并发数控制。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;后端backend服务限流需要业务方合理评估每个接口的流控值，要求对业务量有足够经验值（可能要在多次线上调优后才能最终得出合理的流控值）。考拉内部流控实践证明，对于保证服务稳定性、优先保证重要消费方、实现服务隔离等有着重要的作用。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.服务动态治理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;动态治理本质上是依赖Dubbo运行期参数的&lt;strong&gt;&lt;span&gt;动态调整&lt;/span&gt;&lt;/strong&gt;，再通用一点其实就是应用的参数动态调整，开源常用的disconf、diamond、archaius等集中配置管理工具都是设计来解决这个问题。Dubbo内部在url参数传递模型基础上实现了一套参数动态配置逻辑，个人认为相比于Dubbo的实现，集成disconf等更专业的框架应该是更好的解决方案，或许Dubbo为了一些其他设计目标解除了对一些外部框架的强制依赖。动态治理可以实现从基本参数如timeout、mock到一些高级特性如路由、限流等几乎所有的运行期参数调整。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Dubbo原生在动态配置上存在很多bug，配置不生效或配置规则误读等问题都遇到过，如果你再使用原生Dubbo过程中也遇到任何配置问题，Dubbok应该都已经解决掉了。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;依赖隔离（服务降级）&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;当应用被设计依赖外部服务时，要始终保持警惕状态：外部依赖是不稳定的，为此对接外部依赖&lt;strong&gt;&lt;span&gt;做好解耦&lt;/span&gt;&lt;/strong&gt;是关键，避免外部接口发生异常拖垮自身系统。Dubbo提供了&lt;strong&gt;&lt;span&gt;超时timeout机制&lt;/span&gt;&lt;/strong&gt;作为最基本的解耦措施，同时在接口报错时支持提供降级的容错逻辑；除了容错降级，Dubbo进一步支持强制的短路降级。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ACugftUj8k4uF0GFy6qMHhzsbTIXfKmXHTSjVgroAZg6Yu37Pbv4lZA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;容错 &amp;nbsp;短路&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;然而在容错降级与短路降级之间，Dubbo缺乏一种在容错与短路间切换的机制，即&lt;strong&gt;&lt;span&gt;自动熔断&lt;/span&gt;&lt;/strong&gt;。自动熔断要达到的效果是：当接口偶然报错时执行容错返回备用数据，而当接口持续大量报错时能自动在消费端对接口调用短路直接返回备用数据，之后持续监测接口可用性，接口恢复后自动恢复调用。这样能最大限度减少接口异常对消费方的影响，同时也减轻本就处于异常状态的提供端负载。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AZ1wCHwjxxf5ib7eBa00CGdRQUdq2Ttbw8nSicB4IibDHbO7Vaal31sMMw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;自动熔断工作原理图&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbok通过标准SPI的的形式，实现了熔断功能。目前支持两套方案：&lt;strong&gt;&lt;span&gt;一套是自己实现的熔断逻辑&lt;span&gt;；&lt;/span&gt;一套是通过集成hystrix框架实现&lt;/span&gt;&lt;/strong&gt;。目前支持错误率、最低请求量、熔断时间窗等基本配置，支持将业务异常纳入统计范畴；以上参数均可通过SOA治理平台运行期动态调整；支持外部Dubbo依赖调用的准实时监控。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ApemU1dtBRvONS1WibzWtHRbTNMYZczQ5kL3UQUrgsDUsGhycQZULcgQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;SOA动态调整熔断参数&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0Amzp64DLxG1bTaBFdwK4F9NtCGgibia4PsbBu3tSyzyrW5B6hs7eg7DaA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;依赖实时监控&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Hystrix是Netflix在微服务实践中为实现外部依赖解耦而设计的框架，它假设所有的外部依赖（http、MySQL、Redis等等）可能在任何时间出现问题（你甚至可以想像不经意间就使用了一个没有提供超时设置的http客户端）。于任何可能的外部延时造成的阻塞或其他异常，hystix提供了基于线程池隔离的超时机制，新版本在RxJava基础上信号量隔离也同样支持超时。此外框架还支持定制容错逻辑、请求结果缓存、请求合并、消费端线程池隔离等，由于某些功能当前无明确需求或与Dubbo功能设计重合而没有进行集成。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hystrix更多特性及实现原理请参见Netflix官方文档。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;启动与停机&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;这里主要关注Dubbo工程启动初始化阶段和停机销毁阶段的一些特性和改进点：&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.延迟暴露。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;默认Dubbo服务会随着Spring框架的加载逐一完成服务到注册中心的注册（暴露），如果某些服务需要等待资源就位才能暴露，那就需要延时注册。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AOHjiaU9wkcbOvWCERD9zMd8oqDIZCOqBVHqibN8R6rqA9HwVolInhNLw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;增加Spring context初始化完成后继续延时等待的配置项；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在无特殊配置的情况下，所有的Dubbo服务默认是注册在同一个tcp端口的。而延迟暴露是通过开启新的延时线程实现的，当延时结束时由于多线程并发执行导致多服务随机注册在多个端口。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.启动预热&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一些应用在运行期会通过本地缓存中间结果提升性能，而当此类应用重启时本地缓存数据丢失，如果重启后的机器立即有大量请求导流过来，由于没有缓存加速会导致请求阻塞响应性能降低。通过对重启后的机器设置预热期可有效缓解重启缓存失效问题：&lt;strong&gt;&lt;span&gt;具体做法&lt;/span&gt;&lt;/strong&gt;是降低预热期内的机器权重，引导少部分流量到此机器，此机器可以在预热期内逐步建立缓存，待预热期过后恢复正常权重与其他机器平均分摊流量。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.优雅停机&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在集群部署的情况下，单个消费者或提供者机器上下线对整个产品的运转应该是近乎无感知的，Dubbo提供了优雅停机功机制保障在进程关闭前请求都得到妥善处理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;消费方&lt;/span&gt;&lt;/strong&gt;优雅停机：控制不再有新的请求发出；等待已经发出的请求正确返回；释放连接等资源。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;提供方&lt;/span&gt;&lt;/strong&gt;优雅停机：通知消费端停止发送请求到当前机器；通知注册中心服务下线；等待已经接收的请求处理完成并返回；释放连接等资源。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;考拉再每次服务上下线过程中，每个工程总是收到大量的消费方/提供方报出的服务调用异常，经排查是Dubbo优雅停机实现的问题，修复问题后工程上线阶段异常数明显减少。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;另外停机阶段总是莫名的收到zk连接为空的异常信息。是由于在通知注册中心服务下线的过程中，Spring销毁线程和jvm hook线程并发执行，导致zk客户端被提前销毁导致抛出异常。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.Provider重启，注册中心发送大量服务销毁与注册通知导致consumer工程Full GC。&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;历史原因，考拉内部仍存在一个提供近200个Dubbo服务的单体工程，而每次当这个工程上线时，消费它的consumer工程就会出现频繁Full GC（3-5次，非内存泄露）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="box-sizing: border-box;"&gt;&lt;li&gt;&lt;p&gt;是Dubbo为保证高可用而设计的注册中心缓存导致的问题：在每次收到注册中心变更时consumer会在本地磁盘保存一份服务数据副本，由于多注册中心共享同一份缓存文件，为了避免相互覆盖，每个注册中心实例会在收到变更时重新从磁盘加载文件到缓存，和变更数据对比后重新写回磁盘，在近100提供者机器不断重启的过程中，大量的变更通知导致的频繁加载缓存文件占用大量内存导致Full GC。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Dubbok近期优化目标&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;ul class=" list-paddingleft-2" style="box-sizing: border-box;"&gt;&lt;li&gt;&lt;p&gt;提供端线程池隔离，解决提供端线程池阻塞等问题；优化消费端线程池分配方案&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务治理动态配置功能增加应用、机器粒度的配置&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多注册中心消费端负载均衡策略&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Dubbo内部资源JMX监控&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;结合SOA平台优化监控统计数据：错误类型细分（超时、限流、网络异常等）；执行时间细分如90%、99% RT等；统计占用线程数较多的服务、传送数据量较大的服务，为分线程池或连接做参考&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对Spring boot推行的Javaconfig配置方式提供更友好、全面的注解支持&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;一些框架升级，如Javassist、Netty等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;替代Zookeeper的高性能、可扩展注册中心&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务安全、授权问题调研&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Spring Cloud的一些优秀特性将作为Dubbok改进的一个持续关注点&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;……&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;文中提到的一些改进点只是简略描述，Dubbok的很多改进点也没有一一提及，后续有时间再详细道来。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Dubbok框架、SOA服务治理平台、分布式调用链路跟踪以及其他考拉内部维护的如分布式事务、消息中间件等共同支撑了考拉微服务化的正常运转。上文也提到微服务需要有开发、测试、运行、运维、部署、发布等各阶段的全链路支撑才能发挥最大价值，后续我们将继续联合其他兄弟部门，对微服务化实践进一步优化。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——刘军&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网易考拉海购&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;刘军&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，2013年硕士毕业于中国科学院，2015年入职网易先后在杭州研究院和考拉海购参与一些中间件开发，现主要负责考拉微服务化的基础中间件开发工作，包括服务治理平台、分布式调用框架、调用链追踪等，近期专注于微服务化全链路基础框架的研究。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如果您对本文的分享有疑问，或者想了解更多的优化工作，欢迎与作者展开更深入的讨论。讨论请联系网易云小秘书，微信：&lt;strong&gt;Jianding_zhou&lt;/strong&gt;，邮箱：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;jianding311@163.com&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;点击阅读更多：&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MzI2MzM3MzkyMg==&amp;amp;mid=2247483912&amp;amp;idx=1&amp;amp;sn=e0dadb8a713b3caadaa75b6b17a01c33&amp;amp;chksm=eabd9705ddca1e136c49d00650726b3550ad2442fa653943b4f4cc06a4dab6d5ead631ea98e8&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzI2MzM3MzkyMg==&amp;amp;mid=2247483912&amp;amp;idx=1&amp;amp;sn=e0dadb8a713b3caadaa75b6b17a01c33&amp;amp;chksm=eabd9705ddca1e136c49d00650726b3550ad2442fa653943b4f4cc06a4dab6d5ead631ea98e8&amp;amp;scene=21#wechat_redirect" style="text-decoration: underline; box-sizing: border-box; color: rgb(0, 0, 0);"&gt;&lt;span&gt;4亿资源打造洋货节，网易考拉海购借云计算玩双11&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AYv6icHyFLa4YIE9WL3as0m9cibWPTa8db8xXhRZnyNmq2iamRzn5ibBmXg/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQORchpgdnmlciaHEVbibSEK29S3UL0GtxLY2qA3GkR0zaLAmfXGic80zFUfXr5HeAcgXn2uTQTSmQCHaQ/0?wx_fmt=gif"/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
    <item>
      <title>重磅 | MySQL 5.6 （GA）中文手册翻译全球招募！</title>
      <link>http://www.iwgc.cn/link/4445446</link>
      <description>&lt;p&gt;&lt;span&gt;自从中华数据库行业协会重启MySQL5.6 手册翻译项目后，有越来越多的志愿者开始加入。ZHDBA为了打造一个更加便捷的翻译环境，组建了核心翻译团队为大家服务，在召集了各路大牛成为我们最后的审核老师的同时，对翻译流程也做了优化。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;下面讲解此次维护更新后的翻译参与流程：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;全新翻译进度查询&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;更新后，MySQL 5.6手册的大章节被拆成里程碑（Milestones），每一章节中的小节以Issue方式显示，且在Issue的评论区有翻译者、翻译时间、翻译进度和联系方式等信息以方便大家了解具体的翻译进度。图一为Issue页面点击“Milestones”出现的章节划分页面。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIW7JbKspEchACCTQwLFicwTibl8a1WJrwQSawcfL3Tv6FcIzs73soWZeg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图一：里程碑划分大章节&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;点击单个里程碑可以看到该里程碑对应的章节下具体小节的翻译情况，具体issue中的内容在“我要怎么参与翻译？”段落中有详细说明。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nItst446xRMzcVLEqN4uz9x4IK48R4Uf7S6BfCTvnJmgQn7JlWAhzpOg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图二：小节翻译进度详情&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我要怎么参与翻译？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次项目在GitHub上开放式翻译，网址为：&lt;span&gt;https://github.com/mysql2cn/manual56&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1. Fork翻译项目&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nItnLxBPdI8IjS4iafxAjPB9MOy7qSlBwYO7vCQ0SLbwGn9KxiaHXB5sJg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图三：复制项目&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在页面右上角“Fork”整个项目后，图三所指出的位置进行下载当前整个项目的资源。其中docs文件夹为全部的翻译文件，Readme文件中为翻译的相关事宜以及翻译工具的简单教学。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2. 新建Issue声明自己翻译的章节&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIj5nGQPqhye324ldUkErTxndWP8icBnWy7h9WnXb7I1E6QHCtjU1PuIA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图四：新建issue示范&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为了让所有参与者知道整个翻译的进度，请大家根据以下规则将自己想要翻译的小节建立Issue：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a. 标题以翻译小节题目命名&lt;/p&gt;&lt;p&gt;b. 评论区备注翻译者的姓名、翻译完成时间和联系方式&lt;/p&gt;&lt;p&gt;c. 右侧（上）可以指定自己为翻译者&lt;/p&gt;&lt;p&gt;d. 右侧（中）更改Label表示当前翻译状态变化&lt;/p&gt;&lt;p&gt;e. 右侧（下）选择里程碑该小节属于具体哪个大章节&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nI06uzf4RsLVsAt2cZ4ZYlgrLhPCOSqOppd3qtmhP5XJ3jINQHqmtT8A/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图五：注意事项&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;需要注意的是，由于文件夹中为2013年MySQL 5.6手册的翻译内容，因此大家在翻译时请注意更改自己文件中的标题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3. 提交翻译&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nILUWvObhqcOkLGeHBHcA7MibDMic0I0j5ydMH0eqehSWGXwgdKvsM8fsg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图六：创建提交申请&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当翻译好之后，翻译者可通过上图所示位置创建提交，进入图六所示页面。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nINa17IEbxCJkjw7uOUrzZDXAvyc5UYNlOcDEAVxicxZsK5f0BDtA19ag/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图七：更改预览&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该图中上半部分为评论区，可对自己调整的部分添加备注，下方为更改后的预览。确认提交后点击“Create pull request”按钮进行提交。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;以上内容将于本周末上传至GitHub上“Readme文件中”，欢迎大家补充~&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;MySQL专家审核团队&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次翻译特地邀请了有丰富的MySQL经验的专家组成审核团队，为翻译增添助力！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIibM8QSsia8oEFZEswiaUWibRI7NViaudXODibQDv49gmPibHNUj5oSrQPMXkQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nITyu5zicgFMe9s3mibjsIT3A7bgIiaUO4lfvr6GbgpicRriaXbWjoYibXy2MA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nI0icUic9FiciaRypjGfhw4uaUKuy2FpxM8yI39CBwY0u945kLMY0mJ0BpGg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIgTJwTPErIyfgqI6V8Lc1jEFcZA6r3jczqtQmtDwe0gibiaeTnQWvyHDA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;更多神秘大牛坐镇，等你揭晓&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;志愿者执行团队&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIrtDV3wKzGqEwbAFVlVtUdDxJgQbjibUdcxqX6KvHFEQpVHjGLclkECQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;核心小队会帮助整个项目的执行和推进以及技术支持等，如果您也想成为我们核心小队的一员，请联系群主小慧。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们期待您的加入&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;翻译交流区&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;QQ交流群：176296241&lt;/p&gt;&lt;p&gt;微信交流群：由于目前人数已经超过一百，请加小助手微信，小助手将邀您入群。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIFxkYicJezg1h4mZKfFwcLERMLroIM3iaVYnqoyLBqZVqBjiaaHft4FzRQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;翻译团小助手二维码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次活动由中华数据库行业协会发起，感谢老叶茶馆、知数堂、ACMUG、SDCC、IT大咖联盟、DBAplus社群等平台的大力支持。&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】Apache Kudu 1.2.0 发布，好未来教育云与阿里云达成战略合作</title>
      <link>http://www.iwgc.cn/link/4445447</link>
      <description>&lt;p&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于 Docker 的操作系统：RancherOS v0.8.0-rc4&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;RancherOS v0.8.0-rc4 发布了，RancherOS 是微型 Linux 发行，整个操作系统以 Docker 容器的形式运行。这包含了系统服务如 udev 和 rsyslog。RancherOS 只包含运行 Docker 所需的最低数量的软件。这使得 RancherOS 的二进制下载量非常小。其他任何东西都可以动态通过 Docker 来获得。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Apache Kudu 1.2.0 发布，Hadoop 存储系统&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们为了实现这些目标，首先在现有的开源项目上实现原型，但是最终我们得出结论：需要从架构层作出重大改变。而这些改变足以让我们重新开发一个全新的数据存储系统。于是3年前开始开发，直到如今我们终于可以分享多年来的努力成果：Kudu，一个新的数据存储系统。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;联通和阿里云合作 建互联网云化卡号管理系统&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;继去年11月中国联通与阿里巴巴签订战略合作框架协议之后，今天下午阿里云宣布将于中国联通建卡号管理系统“cBSS2.0集中号卡系统”。据了解，这将是电信行业第一个核心业务系统云化改造的重点工程，也是云计算技术在电信行业的首次大规模应用。cBSS2.0集中号卡系统目前已经在广西、内蒙古、黑龙江三个试点省市快速上线，并将逐步推广至全国，形成惠及3亿用户的超级“卡号云”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Facebook投资1亿美元在丹麦建立数据中心&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月20日Facebook宣布，将在丹麦欧登塞市(Odense)建立一座新数据中心，这将是Facebook在美国以外的第三座数据中心。Facebook数据中心业务总监尼奥·麦肯特加特(Niall McEntegart)称：“欧登塞数据中心将是全球最先进、最节能的数据中心之一。”麦肯特加特称，这座数据中心将100%使用可再生能源。此外，欧登塞市寒冷的气候也有助于降低服务器温度，而无需依赖于空调设备。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;好未来教育云与阿里云宣布达成战略合作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月22日，好未来教育云与阿里云宣布达成战略合作，双方将在4个方面深度合作，推动中国教育均衡发展。深度合作包括：1、好未来教育云依托阿里云，将优质产品输送到公立教育体系，推动教育均衡发展；2、双方联合服务帮助10000多家中心K12企业，打造互联网教育新生态；3、阿里云创新中心与好未来未来之星，共同发展孵化教育垂直行业独角兽；4、阿里和好未来共同推动xiwang.com教育公益平台，提供直播技术和底层支撑服务等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数人云完成5000万A+轮融资&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月22日，云启家族成员数人云宣布公司完成5000万人民币A+轮融资。此次融资由沣源资本领投，云启资本、唯猎资本以及UCloud等A轮投资方继续跟投。本轮融资将主要用于企业级市场开拓、开源项目的推进，以及上下游生态的完善。数人云由原Google架构师王璞博士于2014年9月创立，其核心团队来自于谷歌、红帽和惠普，具有丰富的分布式研发能力和平台运营经验。2016年初完成3000万人民币A轮融资。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;腾讯云国内首发FPGA云服务器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月20日，腾讯云推出国内首款高性能异构计算基础设施——FPGA云服务器，以云服务方式将大型公司才能长期支付使用的FPGA推广到更多企业。通过FPGA云服务器，企业可以进行FPGA硬件编程，可将性能提升至通用CPU服务器的30倍以上，而只需支付相当于通用CPU约40%的费用。腾讯云成为国内首家在云端开放FPGA计算服务的云服务商。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;蚂蚁金服CEO在达沃斯接受采访：支付宝将引入区块链技术&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在今年的达沃斯经济论坛上，蚂蚁金服CEO井贤栋向CNBC透露，公司计划10年内发展20亿用户，并称将进一步探索区块链技术的应用。井贤栋还畅谈了人工智能和区块链技术的潜力——后者是一种分布式总账系统，据专家表示，这一技术可使众多金融流程成本变得更低，速度更快。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;到2021年，Hadoop大数据分析市场产值将达406.9亿美元&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;据市场研究咨询公司MarketsandMarkets新发布的一份市场研究报告声称，Hadoop大数据市场产值预计会从2016年的67.1亿美元猛增至2021年的406.9亿美元，2016年至2021年的年复合增长率(CAGR)将高达43.4%。这份报告名为《2016年至2021年Hadoop大数据分析市场全球预测》，从以下这几方面解读这个市场：组成部分(解决方案和服务)、应用软件(风险及欺诈分析、物联网、商品销售及供应链管理、客户分析、卸载大型机和安全情报)、垂直领域和地区。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;电子地图Here将向百度提供中国境外地图数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;据《日本经济新闻》近日报道，德国提供电子地图和位置信息服务的 Here 宣布，将与中国提供网络搜索及地图服务的百度扩大合作，在中国以外的全球地图信息提供方面开展合作。百度的约 3.5 亿用户到欧洲等旅行时，将能够以 Here 的数据为基础继续利用百度的服务。此举意在对抗地图搜索领域的竞争公司美国谷歌，扩大用户规模。&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
    <item>
      <title>给老朋友们推荐几个大数据和机器学习方面的公众号</title>
      <link>http://www.iwgc.cn/link/4439793</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclhE6icEdFVnV92aOArMqPqbCEsph7voGHeF63t870oulpUJK2LicwKJMg/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们甄选了大数据和机器学习领域里的&lt;span&gt;小而美、精而专的&lt;/span&gt;微信公众号。&lt;/span&gt;&lt;span&gt;它们来自不同的媒体或教育机构，内容上&lt;/span&gt;&lt;span&gt;各有侧重&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;运营者都&lt;/span&gt;&lt;span&gt;怀着传播技术的初心。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;希望你能在这里遇见心仪的公众号。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;大数据杂谈（InfoQ）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：BigdataTina2016&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们专注大数据和机器学习，关注前沿技术和业界实践。每天发布高质量文章，技术案例等原创干货源源不断。同时有四千人的社群微课堂，每周一次业界大牛技术分享，也希望你能从这里分享前沿技术，交流深度思考。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/YriaiaJPb26VNW7mQQ8bHltyStNib8kAC73zABMRb2n7UBEFdibfny51yYcT7vrEZ2iaggGGOVGNF8uibH2pWhRKpL4A/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;CSDN大数据&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：csdnbigdata&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclPkNyCCpwJiavh161yu20M8licdnUcyIcshO24vfD5Au0eTZWsqgceyibw/640?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;清华大数据&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID: datapi&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;清华大数据，&lt;/span&gt;尽在THU数据派。前沿数据产业动态，独家发布干货内容，持续传播数据思维，定期组织线下活动，数据人才聚集平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPnuMndibP16hlmQoutw0pYWuO5DoarGqNoE5xuXXzFK3N5A22MXmzu3ibADe3AHF3YYiaejkYK2KHLQ/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据猿&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：datayuancn&lt;/span&gt;&lt;/p&gt;&lt;p&gt;数据猿--大数据产业创新服务媒体！传播大数据产业前沿资讯和原创深度好文，更有业界大咖等你来会。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/cokWkYcF4Dc6P0RxKzNvzibJjTGU0Dqiclf4ukaFJOqfZcmb0GXcj2xvkicma5Hce4MKV8iczW3gt9ibhLIPFfjzOrw/640?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;架构文摘&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID: ArchDigest&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;每天一篇架构领域重磅好文，涉及一线互联网公司的互联网应用架构、大数据、机器学习等各个热门领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclIibprErJoicT0dhYoTnoO7ZdyibTQXIy56xUiautyMHd5o8Tn2HceZwxNw/640?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;PaperWeekly&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：PaperWeekly&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每周会分享N篇nlp领域好玩的paper，旨在用最少的话说明白paper的贡献，内容均为原创。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dfcz1aePdDiaYH2avf1iaZyxqw2FGbagdvP7iawpfibxIFuia7OiaKd1jfYMIC94mW6ISKfVcng09YUj1MA/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Call4Papers&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：Call4Papers&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;发布近期各领域即将截稿的学术会议和期刊专刊约稿信息。用户可根据自己论文的水平、研究方向和投稿时间查找感兴趣的会议或期刊。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dc6P0RxKzNvzibJjTGU0Dqiclqq2icG1yxhoCwOKbFanJia9xr8jrfRUxysAmJnOmQ6D1wj2uK9zeia73g/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;AI金融评论&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：aijinrongpinglun&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在大数据、人工智能、区块链等新技术奔涌薄发的时代，我们关注一切能够推动传统金融业务变得更加安全、高效的技术创新，致力于提供最前沿全面的技术应用参照与市场解读。我们重点报道智能投资、智能信贷、智能保险、区块链。在这里，读懂智能金融与未来。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclPn80kfyz6ickABPytlj8HASBceiab2ZHEYLJLHom47bxSee7P88pWPVQ/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;AIHealth&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：HealthAI&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;AIHealth是雷锋网旗下专注于未来医疗&amp;amp;健康领域的垂直内容频道。AIHealth致力于帮助科技从业者掀开医疗行业的神秘面纱，替医务人员解读最新最硬前沿技术。在这里，读懂未来医疗&amp;amp;健康。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclkwusmQk1spssXkQLbDLnGFDicDJVyTf1yhDhKZh61JfyXumXfl7X6fA/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;科研圈&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ID：keyanquan&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;《科学美国人》中文版《环球科学》面向科研人员的微信公众号。我们提供好看的科学故事、前沿的研究、没有毒的鸡汤，推荐和导读各领域最新论文，发布科研招聘、会议预告。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/cokWkYcF4Dc6P0RxKzNvzibJjTGU0DqiclomxZgrSZ1SiaxIsAqx8MZ1icyOibpbgY5KH1f2VVpw3te3QhGIncicWKiaQ/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 21 Jan 2017 23:08:18 +0800</pubDate>
    </item>
    <item>
      <title>区块链开发技术综述</title>
      <link>http://www.iwgc.cn/link/4422178</link>
      <description>&lt;blockquote style=" margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;作者：&lt;/span&gt;孟岩，IBM大中华区高级经理，曾负责IBM智慧地球、智慧城市、认知计算等重大技术战略在中国的推广和落地。一年前开始关注区块链技术及其行业应用前景，对比特币、以太坊、超级总账和BigchainDB四个主要区块链技术流派都进行过考察和研究，形成了在中国应用区块链技术的观点和思路。&amp;nbsp;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果你关注区块链技术长达几个月，可能也会跟我一样，对没完没了的原理介绍、前景描绘、行业探讨和链圈新闻产生了审美疲劳。没错，区块链必须与行业紧密结合，它也有颠覆人类协作方式之洪荒巨力，但是说到底它还是一个技术活，是要写代码的，在咖啡厅里整天坐而论道是造不出金链子来的。技术人员的逻辑简单直接，这个事情有没有前（钱）途？有，那怎么干？&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文试图对区块链有关技术流派和主流平台进行一个概览，作为学习区块链技术体系的导览，意在抛砖引玉，促进区块链开发社区的讨论与共识。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;区块链技术的流派&lt;/h3&gt;&lt;p&gt;未战先谋局，你想投入区块链开发这个领域，至少先要搞清楚现在有哪些玩家，各自的主张和实力如何。&lt;/p&gt;&lt;p&gt;&lt;span&gt;划分区块链技术流派并无一定之规，据我所见，或可有以下四种方式：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一是按照节点准入规则，划分为公有链、私有链和联盟链。&lt;/span&gt;公有链的代表自然是比特币和以太坊，私有链则以R3 Corda声名最盛，联盟链的代表作品是Hyperledger名下的Fabric。公有链注重匿名性与去中心化，而私有链及联盟链注重高效率，而且还往往设置了准入门槛。公有链、私有链与联盟链之间的这些不同都在技术中有所体现，比如私有链和联盟链假设节点数目不大，可以采用PBFT算法来形成共识。而公有链假设有大量且不断动态变化的节点网络，用PBFT效率太低，只能采用类似抽彩票的算法来确定意见领袖。这就意味着，私有链与联盟链很难变成公有链，而用公有链来作联盟链或私有链虽然容易，却也并非即插即用。此种差异，学者不可不察。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二是按照共享目标，划分为共享账本和共享状态机两派。&lt;/span&gt;比特币是典型的共享账本，而Chain和BigchainDB也应属此类，这几个区块链系统在各个节点之间共享一本总账，因此对接金融应用比较方便。另一大类区块链系统中，各个节点所共享的是可完成图灵完备计算的状态机，如以太坊、Fabric，它们都通过执行智能合约而改变共享状态机状态，进而达成种种复杂功能。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第三是按照梅兰妮 · 斯旺所描述的代际演进，将区块链系统分为1.0、2.0和3.0三代。&lt;/span&gt;其中1.0支撑去中心化交易和支付系统，2.0通过智能合约支撑行业应用，3.0支撑去中心化的社会体系。比特币和Chain应属于区块链1.0系统，而以太坊和Fabric是区块链2.0系统，目前尚无成功的区块链3.0系统出现，不成功的尝试倒是有那么一个，就是著名的The DAO。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第四是按照核心数据结构，分为区块链和分布式总账两派。&lt;/span&gt;区块链这一派在系统中真的实现了一个区块的链作为核心数据结构，而分布式总账这一派，只是吸取了区块链的精神，并没有真用一条区块链作为核心数据结构，或者虽然暂时用了，但声明说吾项庄舞区块链，意在分布式总账耳，若假以时日，因缘际会，未尝不可取而代之也。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;主流区块链技术平台&lt;/h3&gt;&lt;p&gt;了解流派划分，仍是只能用来指点江山，吹牛论道，要动手，总要有个切入点。区块链货币据说已经有上千个了，但值得关注的技术平台大概只有数十个，而如果要进入区块链开发领域，打下一个好基础，练出一身好功夫，捞到几个好offer，则值得深入研究学习的平台，屈指可数。&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先当然是比特币。&lt;/span&gt;比特币作为区块链的第一个也是目前为止最成功、最重要的样板工程，已经上线运行了八年多，本身没有发生任何严重的安全和运维事故，其稳定与强悍堪称当代软件系统典范。比特币Bitcoin Core是一个代码质量高、文档良好的开源软件，从学习区块链原理、掌握核心技术的角度来说，Bitcoin Core是最佳切入点，能够学到原汁原味的区块链技术。当然，Bitcoin Core是用C++写的，而且用了一些C++11和Boost库的机制，对学习者的C++水平提出了较高的要求。&lt;/p&gt;&lt;p&gt;学习比特币平台开发还有一个优势，就是可以对接繁荣的比特币技术社区。目前围绕比特币进行改进和提升的人很多，人多力量就大，诸如隔离验证、闪电网络、侧链等比较新的想法和技术，都率先在比特币社区里落地。比如侧链技术的主要领导者Blockstream是由密码学货币元老Adam Back领衔的，而Blockstream是Bitcoin Core最大的贡献者之一，所以一些有关侧链的技术在比特币社区里讨论最充分。&lt;/p&gt;&lt;p&gt;但比特币作为一个典型的区块链1.0系统，是不是支撑其他类型区块链应用的最佳技术平台，存在很大的争议。另外，也不是所有人都有能力和必要精通区块链底层技术。所以对那些急于冲到区块链领域里做（quān）事（qián）的人来说，可能更直截了当的学习目标是以太坊和Hyperledger Fabric。&lt;/p&gt;&lt;p&gt;&lt;span&gt;在以太坊上面用Solidity进行的智能合约开发是切入区块链开发最简单的方式，没有之一。&lt;/span&gt;以太坊的理想非常宏大，由于配备了强大的图灵完备的智能合约虚拟机，因此可以成为一切区块链项目的母平台，是驮住整个区块链世界的大乌龟。在以太坊上开发一个类似比特币的加密货币，是一个不折不扣的小目标。一般有经验的开发者在文档指导下，半天到一天即可入门。问题在于，入门以后又如何？靠写Solidity是否就可以包打天下？这是大大存疑的。我们也可以反过来说，如果以太坊+Solidity是区块链的终极解决方案，那么怎么还会出现那么多区块链技术门派呢？特别是，以太坊似乎并没有给现实世界中巨型的中心化组织们留下一条活路，这种彻底不妥协的革命态度有可能也成为以太坊推广的障碍。&lt;/p&gt;&lt;p&gt;当前以太坊项目的开发进展并不顺利。一个比较突出的问题是项目过多，力量分散，导致项目质量参差不齐。但尽管如此，跟其他区块链2.0平台相比，以太坊提供的开发环境是最简单最完善的。初学区块链的人绝对有必要学习以太坊，从而对区块链和智能合约建立起一个最“正宗”的认识。&lt;/p&gt;&lt;p&gt;&lt;span&gt;主流区块链技术平台的第三支就是Fabric，它是Hyperledger的第一个也是最知名的孵化项目。&lt;/span&gt;&amp;nbsp;Fabric最早来自IBM的Open Blockchain项目，到2015年11月，IBM将当时已经开发完成的44,000行Go语言代码交给Linux基金会，并入Hyperledger项目之中。在2016年3月一次黑客马拉松中，Blockstream和DAH两家公司将各自的代码并入Open Blockchain，随后改名为Fabric。到目前为止，Fabric与Intel提供的Sawtooth Lake并列为Hyperledger的一级孵化项目，但前者得到的关注远超后者。&lt;/p&gt;&lt;p&gt;从技术角度来说，Fabric思路不错，重点是满足企业商用的需求，比如解决交易量问题。众所周知，比特币最大的短板是它每秒钟7个交易的上限，完全无法满足现实需要。而Fabric目标是实现每秒钟10万交易，这个量接近刚刚过去的双十一交易量瞬时峰值，完全可以满足正常条件下的行业级应用。Fabric用Go语言开发，也提供多种语言的API。特别值得一提的是，Fabric比较充分地运用了容器技术，比如其智能合约就运行在容器当中。这也是Go语言带给Fabric的一项福利，因为Go语言静态编译部署的特征很适合开发容器中的程序。&lt;/p&gt;&lt;p&gt;Fabric还有一些特点，比如其membership服务可以设置节点准入审查，这是典型的联盟链特征。再比如其共识算法是可定制的。Fabric自带PBFT共识算法实现，但是PBFT的算法效率是O(n²)，其中n是节点数量。因此PBFT用在节点数量受限的联盟链里是没有问题的，但用在公有链里效率过低。&lt;/p&gt;&lt;p&gt;Fabric的短板是体系较为复杂，虽有文档，但缺少经验的开发者学习起来障碍比较大。然而由于其定位清楚，迎合了不少企业的心态，所以已经有多家机构在基于Fabric秘密研发行业内的联盟链项目。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;小众门派&lt;/h3&gt;&lt;p&gt;上述区块链开发的三大主流平台，从活跃度、受关注和参与人数来说，远远超过其他平台。但俗话说莫欺少年穷，&lt;span&gt;一些眼下还默默无闻的平台也不容忽视&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hyperledger的另一个一级孵化项目Sawtooth Lake是Intel开发的区块链平台&lt;/span&gt;，是一个很少被关注的项目，大概是因为被同在Hyperledger旗下的Fabric给掩盖了，再加上名字拗口，所以很少看到有人讨论它，项目活跃度也不高。但其实Sawtooth Lake是一个挺有想法的区块链项目，设计十分精心。它以数字金融资产管理为目标，整体架构清晰，模块化程度高，因此可定制能力也强。概念上独创了“交易族（transaction family）”概念，而且还支持PoET和Quorum两种共识机制。当节点数量很多（公有链环境）时，使用第6代Intel Core CPU所提供的SGX扩展功能提供一种称为时间流逝证明（PoET）的机制来形成共识，这种机制与比特币所采用的PoW同属“抽彩票”式的共识算法，但杜绝了通过ASIC专用硬件“作弊”的可能性，排除了比特币出现的算力过于集中的隐患，可靠性由Intel CPU硬件来保障，是公有链系统里很有价值的一个共识机制。另一方面，当节点数量少且受控时，Sawtooth Lake可以采用Quorum共识机制，这是由Ripple提出并验证的共识机制，非常适合于联盟链场景，这样Sawtooth Lake就摇身一变成为很好用的联盟链了。&lt;/p&gt;&lt;p&gt;Sawtooth Lake采用Python开发，并提供了Java SDK。由于这两种语言的流行度，实际上它应该有很大的潜在开发者人群。事实上，R3 CEV曾经测试过Sawtooth Lake并进行了成功的证券交易实验。当前它主要的问题是受关注度不足，不知Intel是否有足够的耐心和毅力坚持到底。如果Intel战略更明确一些，支持力度更大一些，我建议大家可以对它投以更多的关注。&lt;/p&gt;&lt;p&gt;&lt;span&gt;R3 Corda是一个备受关注的分布式账本项目。&lt;/span&gt;&amp;nbsp;R3是由数十家银行和金融机构支持的区块链企业，融资上亿美元，号称汇集了一票高手，潜心研究符合金融行业需求的分布式账本系统。Corda是R3分布式账本系统中的核心，在千呼万唤之后，于11月30日正式开源。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Corda采用JetBrain原创的小众语言Kotlin开发，对Java世界敞开大门，这是令人点赞的。&lt;/span&gt;此外，Corda更重要的特色是其与现有世界里大银行、大型中心机构的全面妥协、全面合作的姿态，这与以太坊革命无罪、造反有理的形象形成鲜明对比。Corda在设计中有多项独特考虑，就是为了对接现有的业务规则。比如在其他几乎所有区块链平台里，每一个交易对于各节点来说都是可见的，可见才能验证，能验证才谈得上共识，所以交易的全网可见性是顺理成章的。但是现实世界里金融机构之间的交易，只有交易相关方才能看到交易详情，工行与建行的一笔交易，绝无必要让招行看到。为了对接这个现实，Corda设计了与众不同的机制，牺牲了交易验证的全局可见性，确保只有交易相关方才能看到和验证交易本身。可是另一方面，银行业务是被重度监管的业务，不能因为你用了区块链系统，就把洋洋洒洒的巴塞尔协议晾在一边，监管机构的职能如何体现？这是其他区块链系统里考虑不多的。而Corda设计了独特的Notary和Oracle节点，为监管体系进入留下了空间。仔细品味，这些都是给现实世界当中的大机构预留的美差。这些设计上的考虑，无疑大大增强了Corda被现有大型金融机构采纳的机会。不过这一切看上去很美好，但目前Corda的实现基本上是个花架子，设想的种种，不少处于TODO状态。&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外两个值得点名的区块链门派分别是Chain和BigchainDB。&lt;/span&gt;前者跟Visa有合作，后者是一个基于RethinkDB开发的分布式账本，两者各有各的思路和特色，也拿到了为数可观的投资，不排除未来能有大的发展。限于篇幅，在这里不展开介绍了。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;区块链开发所需具备的技术基础&lt;/h3&gt;&lt;p&gt;可以预见，&lt;span&gt;未来从事区块链开发的主要有三类开发者，一类是开发基于区块链的Web或移动App&lt;/span&gt;，这种开发者所需要的技能与今天的Web和移动开发者并无二致，这里就不赘述了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二类开发者是开发智能合约的。&lt;/span&gt;这类开发者使用类似Solidity这样的智能合约语言，或者直接用Go、Java、Python等语言开发。开发智能合约所要求的语言和算法技术水平不高，什么并发、多线程之类的东西一般用不到，普通开发者均可胜任。但是智能合约的难点在于业务与安全。本质上智能合约就是以代码写成的商业合同，必须对于业务有非常清晰的认识，对于安全有着深刻的理解，才能够写出正确的智能合约。因此，我认为未来智能合约的开发者，可能反而是具体应用领域的行业专家出身居多，因为让他们掌握Python语言，远比让程序员去理解进出口贸易规则或者商业票据业务要容易得多。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第三类开发者，就是区块链核心应用系统和核心平台的开发者。&lt;/span&gt;这部分人当然必须是技术高手，按现在通俗的说法，得是后端专家。从语言上讲，C++、Java、Python、Go、JavaScript都有可能要触及。从基础知识来说，要求对密码学、分布式系统、网络编程、系统架构和部署都有相当程度的理解和实践经验。这种开发者显然将是区块链技术浪潮当中的弄潮儿，也将是最大的受益者之一。&lt;/p&gt;&lt;p&gt;&lt;span&gt;特别要点一下密码学。密码学是大多数开发人员的短板，但若要在区块链核心技术领域搞出能够碾压竞品的创新点，密码学是最有可能出成果的地方。&lt;/span&gt;不用说搞出什么密码学突破，就是将密码学现有成果充分运用在区块链里，都可能会搞出一些逆天的创新来。比如用零知识证明协议（zero-knowledge proof）构造高度匿名化的区块链系统，比如用私有计算外包（private computing outsourcing）技术让别的节点既能够验证交易，又对交易本身的内容一无所知，这都是能够激发大量商业模式创新的技术，等待密码学黑客们发掘和实现。因此，我相信密码学成为显学的时代即将到来。&lt;/p&gt;&lt;p&gt;区块链是一项前景无限、极具颠覆性和想象空间的技术，它有潜力带来一个完全不同的商业时代，塑造新一代的互联网，也有可能被传统势力合谋异化。无论如何，区块链为创业者和程序员提供了又一次弄潮的机会，在这片蓝海上将演出一场怎样的大戏，我们且拭目以待。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Fri, 20 Jan 2017 17:06:05 +0800</pubDate>
    </item>
    <item>
      <title>Apache顶级项目8-Geode源码深度分析</title>
      <link>http://www.iwgc.cn/link/4422179</link>
      <description>&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCXxwygmszesibsgyX9lBkRkU3ectJceGI3RZY37mtKS2fyEgSBbgzrdg/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;顶&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;级项目介绍之Geode。Apache顶级项目介绍之8，我们重新恢复Apache顶级项目系列，较之前介绍系列，我们本文直入代码分析，原因有二，Geode即上文我们分析的Gemfire的开源版本，其二被逼无奈，阅读源码查找问题。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;1. Geode&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;2016年11月21日，Apache 软件基金会（ASF）宣布 Apache® Geode™ 已从 Apache 孵化器毕业成为顶级项目（TLP），表明该项目的社区和产品已根据 ASF 的精英流程和原则得到良好管理。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Apache Geode 是一个数据管理平台，提供实时的、一致的、贯穿整个云架构地访问数据关键型应用，最初由 GemStone Systems 公司开发，商标为 GemFire。 此项技术初期被广泛应用在金融领域，用于华尔街交易平台，作为事务性、 低延时的数据引擎。2015年4月将代码提交给 Apache 孵化器作为孵化项目。&lt;span&gt;目前 Apache Geode 有超过600家大中型企业级用户, 主要是必须满足低延时和24x7 高可靠要求的，高可扩展的关键业务应用系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;2. 适用场景&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;可以参考上文，分布式缓存利器-Gemfire.&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCbBo3rPoMR4Qpibu7yFQ9QGJJGh43eExBa1icAPk1Zfq7K5PVeUDJiaeTA/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4个主要使用场景：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;－高可用性的分布式缓存&lt;br/&gt;－网格计算&lt;br/&gt;－事件通知和处理（CEP类似）&lt;br/&gt;－交易处理（Transaction），采用最终一致性&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Geode 池化了服务器上的内存, CPU, 网络资源, 和本地磁盘，跨多个进程来管理应用对象和行为. 它使用了动态数据复制和分区技术来实现高可用, 高性能, 高可扩展性, 和容错. 另外, 对于一个分布式数据容器, Apache Geode 是一个基于内存的数据管理系统, 提供了可靠的异步事件通知和可靠的消息投递.&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3. 数据结构源码&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;如上文所说，系统目前遇到一个分布式系统异常复杂之难题，难到不遍历源码无法解开谜题的地步。注意，笔者写此文时，此难题尚无答案，我们希望当此文发布时，已有解药。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;另外，强烈建议看官先自行了解Gemfire功能以及部分原理，否则此文较为吃力。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3.1 Region&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;进入正题，先来看一下核心类Region。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCMbdznnGMW6WCQ0U23EzQs6gwOyDDtT0bnbdsBcvx1e2nBD1XNpvhNw/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Region继承Java的ConcurrentMap，实现了分布式K,V的HashMap，并提供了高阶的事务，Persistence，分区等分布式功能。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;接口继承Map的get, put无须多说，看几个比较重要的。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCfvG81T8EcuqoASDEWG9ibUGibJJSL98jO5ZowVwsAZ1ejaZnUQibicMeicw/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Geode的Region可以像树形一样，形成一种Hierarchy结构嵌套，使用"/"来分隔多个子Region.所以有向上获取父亲，自然也有向下导航获取子女：getSubregion(String path)&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;RegionDistributedLock&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCxnhXHDp91EmE7D9g38mDwuKCWJiaRx0eJJSZWh6RT9cIpO2J7eQkeng/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;第一个分布式锁，全局Region。注释写很到位，其中提到当region创建时会自动开启全局region锁，所有对region级别的操作，如invalidateRegion, destroyRegion也可能会自动用到region级别锁，这个么可以理解，毕竟是重量级操作。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;getDistributedLock（key）&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCYr5ZRQlDoXiafPkeSmZf4BavwXsnYPnRiczn3R5vHpu48TXcFicZibFrPQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;提供了更细粒度的region级别分布式锁控制。&lt;/p&gt;&lt;p&gt;然而，除非必要，所有分布式操作不建议用如此之重的锁，否则后患无穷。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;public void writeToDisk();&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;当然，支持持久化到磁盘，分布式的一种表现形式，相对于普通的HashMap。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;public void becomeLockGrantor();&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCibXgQ9Xct1Riaqz9bqgFnxukAfsbxOjddFy0wy6icjFfbuQ36U2Jk2eJg/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;不赘述，如注释所描述，LockService的担保，前提当前region必须是Global类型，有点类似对于分布式全局变量加锁，所以每当调用此方法，线程将阻塞直到担保被转移到当前member。&lt;/p&gt;&lt;p&gt;超级重量级方法，请自保。注释强调了，相互调用可能造成死锁，说的比较委婉，back and force。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;public void registerInterest(K key);&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCv7mia6ypuoQwY3AWCdAO4O1wHpOd7iacCDwXNxicLg61oFq6faISJDh4A/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;后续很多分布式，多个member交互的入口之一。&lt;/p&gt;&lt;p&gt;注释提到用于向&lt;strong&gt;CacheServer&lt;/strong&gt;提交注册一个感兴趣的key，后续还有按照正则表达式注册，或者注册所有key。其注册目的是用于被通知，类似ems queue的subscription功能，或者回调通知。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;public List&amp;lt;K&amp;gt; getInterestList();&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;返回当前region已经注册的所有感兴趣key。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对了，每个类代码小于500行都是骗人的，随便看看这些开源代码，少则1000，多则6-7千行代码。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;3.2&amp;nbsp;AbstractRegion&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;AbstractRegion抽象类，主要封装实现了关于RegionAttributes, AttributesMutator, and some no-brainer method&amp;nbsp;implementations。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCGMdXcDoBMEvzx65tETEuM0nicXExoWRTsd2DVX9I8F9NrHsdxp5bDXQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;其中，主要cache操作的读写则由上面loader与writer代理实现。Usually there will be only one CacheWriter in&amp;nbsp;the distributed system.所以，通常整个分布式系统只有一个cache writer，其它特殊情况暂时不提。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicC6wFEcA15BLEkADDTfibiajibu2D8HOKqOh2nndECD3OiaygsFzDMnnOpxQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;截获entry更新事件，其中entryEvent包含了整个操作的信息，如KeyInfo, EventID, newValue, oldValue, Operation, originated member等。BTW, 这个看起来普通的EntryEvent类也有2856行，此处省略无数。。。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;protected Set&amp;lt;String&amp;gt; asyncEventQueueIds;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;隐隐觉得，其分布式的消息事件处理会放到queue中，这里用了set结构，我们继续看下去。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;protected boolean &lt;span&gt;&lt;strong&gt;enableSubscriptionConflation&lt;/strong&gt;&lt;/span&gt;;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;这个参数对于高频写region非常有用，主要是同一个key高速写，类似实时报价。这个参数效果类似于Leaky Bucke。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;漏桶算法(Leaky Bucket)是网络世界中流量整形（Traffic Shaping）或速率限制（Rate Limiting）时经常使用的一种算法，它的主要目的是控制数据注入到网络的速率，平滑网络上的突发流量。漏桶算法提供了一种机制，通过它，突发流量可以被整形以便为网络提供一个稳定的流量。漏桶可以看作是一个带有常量服务时间的单服务器队列，如果漏桶（包缓存）溢出，那么数据包会被丢弃。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YzCJqLscUbZlJUu9b61FFicCm3dfSWWrVyj403CF7ibftZSb8Sv8pVjSqkxXOhlljf36oPxaIaupExg/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3.3 Regions UML&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;当我们越加深入，发现代码越来越复杂，很多类少则几千，多则上万行，类也有上千万个，对于大型开源项目，还是来一张类图吧，掌握整体宏观很重要。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiaKbXFmFBhF6yatVuxnWAa53Z76fwMnNhAH5edJV6sNxYQcibsian1SpYw/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;可以看到LocalRegion继承自AbstractRegion，最重要的是内部封装了Region的数据结构。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;了解HashMap内部数据结构的朋友应该知道，其内部为数组+链表组合的二维空间；同理，Geode的Region内部数据结构则由RegionMap来抽象，持有真正的数据，而究其内部则是内置了一个ConcurrentHashMap，想想让我们来设计的话也大概如此吧。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3.4 AbstractRegionMap&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiaJjUp5VC1PhslGLz64zBOZ5ln1TSbRIj3ey1Gwy3jSxNcxqs5Gz3b4A/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;可以看到里面内置一个CustomEntryConcurrentHashMap map；应该是这个map, 这是什么神器？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmsns.qpic.cn/mmsns/hQibgRpv49YztaObsK9meAddBNUwUm0PiaibWkfd4iaHn4fS2I8AGVxqbg/0"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;如果你看到了Doug Lea的大名，不要惊奇，难道Doug也为Gemfire/Geode操刀？非也。&lt;/p&gt;&lt;p&gt;Gemfire/Geode当年直接copy Doug老人家的ConcurrentHashMap, 你可以去比较一下源码，当然，GemStone也进行了一些定制化，如读锁等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;了解完其真实内部存储数据结构后，心中略有一二，而然这也是预期之中，我们继续看如何实现分布式的精髓。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3.5 DistributedRegion&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;我们还是先上UML图吧。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0Pia6mczvbaEqPYWicUiaEicleabA6Zq0VHSNk8DZF75GkJq3AWMEZic1aCa5A/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;DistributinRegion代表了分布式的&lt;span&gt;&lt;strong&gt;ReplicatedRegion&lt;/strong&gt;&lt;/span&gt;, 而其中则是靠CacheDistributionAdvisor来帮忙跟踪保持数据同步的。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3.6 Partitioned Regions&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Partitioned Region为PatitionedRegion的实例化，内部则基于key的hash code来检测定位Bucket。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiagDg54icWaxrwNKlkRH9cJCerb0o8hNPNkv72icp0VSgEHV3vFNYMLTqQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;PartitionedRegion&lt;/strong&gt;，Geode中的核心分布式结构。通过hash算法（可以自定义）来把key映射到相应的bucket从而达到分布式存储，并提供routing消息到相应的bucket。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;PartionedRegion中的PartitionedRegionDataStore则实际负责分布式管理bucket，以及存储。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;PRHARedundancyProvider&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;类如其名:&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiaC9sxkdXcgSxBQAYxCb4QPfNicwXIEZHgkjlibthfv0MlIvW8uRqPqWTg/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;主要提供针对Reduancy Copy的管理，包括：&lt;/p&gt;&lt;p&gt;bucket创建，以及node的管理。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;当创建并配bucket的时候，其内部创建出BucketRegion的实例, 来看一下BucketRegion中经典的virtualPut:&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiaUibVmE7q4TqLzexVFh4jiaiaLaeE6xpsTk54qb1OiaKFfAMQVnTU8ClvwQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;注释很好，&amp;nbsp;&lt;/p&gt;&lt;p&gt;如果当前是Primary, 则op locally, 之后分发操作op到secondaries及bridge server，同时cache listerner同步其结果；&lt;/p&gt;&lt;p&gt;反之，则首先op locally，之后更新local bridge server， gateway&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;来个序列图吧：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0Pia9n8gcbVQGPntYsGibFXjp4ZAEXFd6dFCvbBwqOzv3fVOFianmQdM5G6g/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;4. 分布式管理&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Geode的分布式消息通信分为主要两大类，一类是Peer to Peer，主要使用了InternalDistributedMember。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;4.1 Peer to Peer 消息机制&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;InternalDistributedMember封装了分布式member的信息，当需要发送p2p消息时，需要用该对象表明目标。&lt;/p&gt;&lt;p&gt;DM提供了获取所有当前cluster中的peers列表，并通过listerners来获取动态信息，而其底层则是通过DistributionAdvisor实现，统一的模式，所以真正筹谋画册的都是幕僚。DM主要封装了相关的网络通信信息，包含netMember, dcPort（direct channel port）, vmPid（member machine's process id）等，当然实现特定内部序列化接口（DataSerializableFixedID）是必不可少的。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;而消息则是DistributionMessage封装，包含了上述InternalDistributedMember信息的sender与destination,以及多个recipients的InternalDistrbutedMember[]数组，还有万恶的用于direct ack的ReplySender等。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;整个消息通信过程大概是先创建DistributionMessage, 设定recipient（可以多个）,之后调用(DistrbutManager DM) DM.putOutgoing(message)。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;如果需要不但发送消息，而且还要确认消息回复response，则要使用著名的ReplyProcessor21, 如果你看到过Gemfire/Geode的ThreadDump, 你就明白我说什么了。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0Piar54oyGfI1L4glVzsolPGL885qicA5U2NW2H0gZU6iciaRtAjUKkyPia1pA/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;还是来个序列图吧，一图抵千言。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YztaObsK9meAddBNUwUm0PiaBIHlpqqIZXDLJyugs4EAbYdkXfw0iaeKibT4jkxXglQpAYVTb0dMKaOQ/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;最后在远端则是通用的处理：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YyILiaTiaUkjEQAYs0GNAbH2ticXEzUMkJ0oLRtWZcQEaEk2PDns2ic0JojribwQ9zcyKy3c94mYfNshaA/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;最后，远端返回replyMessage，并使用相同的unique id，sender收到消息后，找到ReplyProcessor，并wakeup thread waitForRepliesUninterrupibly()。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;4.2 Client / Server 通信&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Client/Server通信机制与p2p略有不同。Server端封装了command，引入智囊团BridgeServerImpl, AcceptorImpl, Client端则封装了AbstractOp。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;:&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YyILiaTiaUkjEQAYs0GNAbH2tbeodpL1YibhzDwU6NRAA4pLfic08l1Po42fGMH3f1MnvupIF7ia02J2Ig/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Acceptorimpl主要监听socket端口，接受客户端的链接。而其中又通过区分max-connections, max-threads而分为使用dedicated thread还是selector模式的NIO处理。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;:&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/hQibgRpv49YyILiaTiaUkjEQAYs0GNAbH2tg5xcia7lX8JrWialKXa5wflkbQGaQR76VzYKlM8jiaPfxHZneibYKA9hHA/0?wx_fmt=jpeg"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;客户端则使用PoolImpl来管理连接connections，client region则持有serverRegionProxy以便实现调用。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;值得注意的是，客户端可以通过subscribe events于特定／多个region或者通过内置的continuous queries，这样当服务器端有数据更新则client端可以受到更新的通知event。&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;5. 总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;好吧，时间，篇幅受限，我们先到此。&lt;/p&gt;&lt;p&gt;我们把核心的数据结构以及分布式通信的核心类大概介绍了一下，详细细节还需要仔细阅读源码，有时间有精力的话再来一篇。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Fri, 20 Jan 2017 17:06:05 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】HPE收购超融合技术公司SimpliVity，ElasticSearch 5.1.2 发布</title>
      <link>http://www.iwgc.cn/link/4422180</link>
      <description>&lt;p&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Deis v1.13.4 发布，开源 PaaS 系统&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;开源 PaaS 系统 Deis v1.13.4 发布了。该版本是 v1 系列的最终维护版。注意，对 Deis v1 LTS 的支持将于 2017 年 2 月 13 日结束。请参阅 Deis Workflow 以获取下一代 PaaS。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;羽毛也疯狂，盘点 Apache 最新毕业的11个顶级项目&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自1999年成立至今，Apache 软件基金会已成功建立起自己强大的生态圈。其社区涌现了非常多优秀的开源项目，同时有越来越多国内外项目走向这个国际开源社区进行孵化。据悉，目前所有的 Apache 项目都需要经过孵化器孵化，满足一系列质量要求之后才可毕业。从孵化器里毕业的项目，要么独立成为顶级项目，要么成为其他顶级项目的子项目。为便于了解 Apache 孵化的标准，本文盘点了 Apache 从2016年1月1日至2017年1月19日所有孵化成功并独立管理的顶级项目，共有11个。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;ElasticSearch 5.1.2 发布，开源系列合集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ElasticSearch 5.1.2 发布了，ElasticStack 是一系列开源产品的合集，包括 Elasticsearch、Kibana、Logstash 以及 Beats 等等。主要增强Internal、Mapping、Network、Plugins等性能，还修复了部分bug。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;HPE宣布以6.5亿美元收购超融合技术公司SimpliVity&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;之前一直有消息称HPE正在考虑以40亿美元左右的价格收购超融合基础设施服务商Simplivity。18日，HPE方面宣布以6.5亿美元完成了对SimpliVity的收购。Simplivity是超融合基础设施一体机（HCIA）市场的第二大初创公司，并且也是存储市场中增长最快的公司。Simplivity与戴尔、思科以及联想和华为都有合作。HPE有自己内部开发的CS 200系列产品；Simplivity套件采用FPGA加速，因此与HPE 3PAR StorServe阵列中使用的ASIC加速是匹配的。Simplivity加入HPE大家族的话会因为HPE庞大的渠道得到扩展，当然，HPE也会因为Simplivity的加入增强自身的基础设施、自动化和云服务能力。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;ZStack获阿里云数千万A轮融资 发布混合云战略&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月18日，企业专有云、混合云市场的创新者ZStack举办了以“进化”为主题的ZStack产品战略及融资新闻发布会。在发布会上，ZStack表示随着企业应用加速云化，企业云计算正在从项目型向产品型进化，混合云也因为满足敏捷性、安全性等关键需求而获得企业的青睐。据此，ZStack宣布与阿里云进行战略合作，获得由阿里云领投，找钢网胖猫创投、紫竹小苗基金跟投的数千万人民币A轮投资，并推出以公共云为中心的混合云战略，未来更将向基于IaaS的企业软件仓库分发部署方式进化。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;新疆首个智慧城市时空大数据与云平台建设正式启动&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;近日，乌鲁木齐智慧时空大数据与云平台项目正式启动，拉开了新疆智慧时空大数据与云平台建设的序幕。据了解，乌鲁木齐智慧时空大数据与云平台项目已正式列入国家测绘地理信息局试点计划，由国家测绘地理信息局、新疆测绘地理信息局、乌鲁木齐人民政府合作共建，建设成果三方共享。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;工信部：2020年大数据业务收入破万亿&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;近日，工信部正式发布的《大数据产业发展规划（2016-2020）》提出，到2020年，技术先进、应用繁荣、保障有力的大数据产业体系基本形成。大数据相关产品和服务业务收入突破1万亿元，年均复合增长率保持30%左右。随着大数据产业的快速发展，相关上市公司开始分享政策和产业红利。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;大数据安全企业「比特信安」完成千万级天使轮融资&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;近日，成都比特信安宣布完成千万级天使轮融资，本轮融资由成都工投集团领投，成都技术转移集团、天大清源跟投。来自成都本土的大数据企业“比特信安”是一家做大数据安全的公司，对标的国外企业为Ganzang（被大数据第一品牌Cloudrea收购，溢价100倍）。目前在中国大数据领域，做大数据安全的企业非常少，比特信安的静态数据加密技术、涉密信息大数据保密检查系统以及数据脱敏解决方案非常值得关注。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;农村金融征信平台“农信宝”获千万融资，专注于为用户提供大数据风控服务&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成立于2015年12月的农信宝是一家专注于提供农村征信的金融服务公司。该公司主要针对农村群体，基于“互联网+IPC+大数据”的风控方式，提供专业的信用评估及金融服务。近日，该公司刚刚获得了数千万元的Pre-A轮融资，投资方为万豪投资。届时，该笔资金将全部用于扩充团队及市场拓展方面。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;买买买！国际科技巨头开启云计算军备竞赛&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;821亿美元（约5700亿人民币）——这是Gartner（高德纳咨询公司）对今年全球云计算市场规模的预判。“矿藏”如此丰富，自然吸引了众多的淘金者。甲骨文公司近日宣布，它已斥资6亿美金收购流行的DNS提供商Dyn。甲骨文计划将Dyn的DNS解决方案添加到其更大的云计算平台，该平台已经销售并提供各种基础架构的服务和产品。实际上，早在2006年亚马逊就收购了AWS，谷歌云、阿里云等巨头在云计算产品矩阵与解决方案方面已经形成全面布局，云计算市场的鏖战已经打响。&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWqWQKwZ728ibFMEuMWIGCqcicT92G6jgTZ2AqWqibn8AhbTIW2OqVv92LkmAULwumuZrFeDBmU3UJ6w/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br/&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/p&gt;&lt;/blockquote&gt;</description>
      <pubDate>Fri, 20 Jan 2017 17:06:05 +0800</pubDate>
    </item>
  </channel>
</rss>
