<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>百度谷歌搜索大数据揭今年全球人民都在关注啥？</title>
      <link>http://www.iwgc.cn/link/3950923</link>
      <description>&lt;p&gt;&lt;span&gt;即将告别2016，作为中国最大搜索引擎之一的百度日前发布了2016年度搜索报告，包含“年度热搜榜”、“年度文娱榜”和“年度现象榜”三大母榜单，汇聚了2016年国人搜索热点。南海仲裁、里约奥运、房价飙涨、车牌摇号、人工智能、互联网金融等等基本囊括了2016年中国社会、经济、科技发展的方方面面。而就在今天，谷歌也正式推出了今年的年度热搜榜，看看世界人民都在关注什么。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNVwRE4AgjI5PbcAaM33akdHQhKxNu4YBFx5oLRLsgCEOzcvVd1ibntKw/0?wx_fmt=jpeg"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;此次榜单通过“谷歌趋势”(Google Trends)板块发布。谷歌除了统计全球范围内用户搜索最多的关键词外，还生成了部分国家和地区的榜单。在全球范围内看，谷歌将关键词榜单分为9类——综合搜索、新闻、人物、消费者技术、体育赛事、悼念逝者、电影、音乐人和电视节目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在全球综合类搜索排名中，全球“最火关键词”头衔被风靡全世界的增强现实(AR)手游精灵宝可梦(Pokemon Go，又译作口袋妖怪)拿下，iPhone7位列第二，11月份出人意料获得美国大选的特朗普仅排第三名，希拉里甚至没有上榜。此外，美国传奇歌手Prince逝世、美国巨额彩票强力球、大卫鲍伊逝世、漫威电影死侍、奥运会、贪吃蛇游戏Slitherio排名位列前十名。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016全球十大最火关键词&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPN1ejVP0G83UuuTrj3rI6NapOfGx7DzUAdEDuHrbAW6fEqGR0Ve2Iwibg/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年，我们先是见证了英国脱欧，再目睹了备受争议的美国大选，这些事件上榜并无悬念。此外，同样引起世界关注的还有美国今年影响最大的两起枪击案——致49人死亡、53人受伤的奥兰多枪击案，和反映美国种族矛盾的达拉斯警员被射杀案件，以及法国尼斯的恐袭事件。此外，奥运会、寨卡病毒、巴拿马文件、布鲁塞尔、熊本地震都成为全球十大热点新闻事件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016全球十大热点新闻事件&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNUYRyov1gFP4BzyW7hyhBw54ibdZ6ho1PiaxvpfYZoObcS0icfjUXfEE0Q/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在热搜人物榜单前10名中，与美国大选相关的人物除了最后当选总统的唐纳德·特朗普、民主党内两位竞选者希拉里·克林顿和伯尼·桑德斯，特朗普的妻子梅拉尼亚·特朗普名字的搜索量也排到第四位。在选举过程中，梅拉尼亚·特朗普曾多次被推到聚光灯下——她在一次演讲中涉嫌抄袭米歇尔·奥巴马8年前的一次演讲内容，多处措辞几乎一模一样，让她成为争议焦点;曾当模特的她还被《纽约邮报》挖出多年前为杂志拍摄的裸照并登上报纸头版，一时间又被推到舆论的风暴眼。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外，还有菲尔普斯等3位体育运动员，以及席琳迪翁等2位演艺界人士也上榜前十名。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜人物&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNTKvaFXah1ABHgyYd05ox2Nuq8icZG71GwiaAfGLgxaLL6wXLLeBQkicibA/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在消费者科技方面，iPhone 7稳居第一，连榜单第三、第四都分别被iPhone SE和iPhone 6S占据。今年因电池爆炸而丑闻缠身的三星Galaxy Note 7在该榜单中排名第八。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜消费者科技&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNCdGO1rcmjWRCspFeIwZrfGOtZia2mj0ebGozyjUenqJwibcxWX2aMwmg/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年巴西奥运会成全球最受关注的体育赛事，其次是棒球大联盟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜体育赛事&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNghdbLuibJvT8gK4L3S6HV9T3PcQibZGfBKEEQGSHcYn02icZO0n8BrJqg/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在十大热搜电影中，排名第一的是《死侍》，其次是《自杀小队》《荒野猎人》。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外，《美国队长：内战》《蝙蝠大战超人》《奇异博士》《寻找多莉》《疯狂动物城》《招魂2》《血战钢锯岭》也成为十大热搜电影。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜电影&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNFqVHQ3BAiaJEALMN8ddN7uHuwc93QErd7FFibWstgbibiaZcgAodWyPacQ/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;电视剧《怪奇物语》在今年热搜电视剧中排名榜首，此外《权利的游戏》《太阳的后裔》等均上榜。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜电视剧&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNP3h3nHpWibR8SQ2j22rdJIDiautaeLxcz8FQTblYZ1fiaQeNRJHVx5Jicg/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;h4&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016年全球十大热搜音乐&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPN72UIkMdzOB091vxz87ex6GlGd6YsdNk3rtyP7yMHB0nHKia8D4BqKRw/0?wx_fmt=png"/&gt; 
 &lt;/center&gt;&lt;h4&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2016全球十大悼念逝者&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNibVrqTlnKfriaQzF0D1CAQNicJceZZ8ZqSfrjPu1WrJEA0nWAlT8ndLiag/0?wx_fmt=png"/&gt;&lt;/center&gt;</description>
      <pubDate>Fri, 16 Dec 2016 21:42:26 +0800</pubDate>
    </item>
    <item>
      <title>提供基于 Spark 的云服务，大数据软件公司 Databricks 获得 6000 万美元 C 轮融资</title>
      <link>http://www.iwgc.cn/link/3950924</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNyQRreVxtQjQW0GHtzpliaaZnjiarpGiabyPQFYcvaXKicey3ul9y9n8DRg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;近日，大数据软件公司 &lt;/span&gt;&lt;a target="_blank" rel="nofollow,noindex" style="font-size: 14px; text-decoration: underline;"&gt;&lt;span&gt;Databricks&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 获得 6000 万美元 C 轮融资，由New Enterprise Associates 领投，Andreessen Horowitz 参投，本次投资有望帮助公司完成在数据的组织、计算和交付方面的一次跨跃。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Databricks 成立于 2013 年，总部设在旧金山，属于 Spark 的商业化公司，由美国伯克利大学 AMP 实验室著名的 Spark 大数据处理系统多位创始人联合创立。Databricks 致力于提供基于 Spark 的云服务，可用于数据集成，数据管道等任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Databricks 曾在 2014 年获得 3300 万美元的投资，当时他们推出了第一个产品 Databricks Cloud，这是一个通过将流程置于云端来简化大数据处理云平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Databricks 公司的云解决方案由三部分组成：Databricks 平台、Spark 和 Databricks 
工作区。该产品背后的理念是提供处理数据的单独空间，不受托管环境和 Hadoop 集群管理的影响，整个过程在云中完成。该产品有几个核心概念：由 Notebooks 提供一种与数据交互并构建图形的方法，当用户了解了显示数据的方式时，就可以开始构建主控面板以监视某些类型的数据。最后，用户可以通过该平台的任务启动器来规划 Apache Spark 的运行时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Spark 数据处理引擎据称比 Cloudera 和 MapR 的 Apache Hadoop 要快。Coudera 公司在 2014 年筹集了大约 10 亿美元高调入场，声称他们有比以前的基础设施技术更好的方式来存储和管理大量的数据。这是 Facebook 和 Google 等公司用来处理他们收集的数十亿个数据的工具。Spark 关注的地方不再数据的存储，而是如何最有效地管理数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Databricks 的 Spark &lt;/span&gt;&lt;span&gt;系统能使大量数据在下一代应用中易于理解和使用，是数据科学家长期努力的方向。数据处理的速度和容量在当下具有许多应用，能够处理数据并使企业内部人员可以有效地理解和使用数据并提供有效服务的公司将成为最大的赢家。作为&lt;/span&gt;&lt;span&gt; Hadoop 开源工具组合的一部分，Spark 项目已经获得了非常可观的收入。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;去年，该公司就 Spark的 机器学习能力与 IBM 建立了合作伙伴关系。不少数据科学家正在涌向 Databricks 的项目。他们的社区有 288,000 名成员以及来自 250 个组织的 1,000 多名积极贡献者。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;截至目前，Databricks 累计融资超过 1 亿美元。公司 CEO 兼联合创始人 Ali Ghodsi 在一份声明中表示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Apache Spark 的高级分析解决方案帮助很多企业和早期用户创造了商业价值。随着市场对 Spark 平台的需求和认可的不断提升，这笔资金将帮助我们推进计算机工程和市场战略，解决客户的痛点，同时继续扩大Spark社区。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016 年 11 月，在“计算界奥运会” Sort Benchmark 全球数据排序大赛公布的结果中, databricks 公司和南京大学计算机科学与技术系 PASA 大数据实验室以及阿里巴巴组成的参赛团队 NADSort 荣获 2016 年 CloudSort 大数据排序世界冠军。该团队以 144 美元的成本完成 100TB 标准数据集的排序处理，将100 TB数据的排序价格从 2014 年的每 TB 4.51 美元的记录降到了每 TB 1.44 美元，同时刷新了多项世界纪录。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Sort Benchmark 是图灵奖获得者 Jim Gray 发起组织的全球性数据排序基准性能评测大赛，自 1987 年开始每年举办一次。CloudSort 评测竞赛项目又被称为“云计算效率之争”，旨降低云架构的获取成本，包括软件堆栈、硬件堆栈等，鼓励企业将大数据应用程序部署到公共云上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNTtZVQ6BSmA4ib1kNtZuF3DCDM1Sy3gr6g9sInkDpBNQq0KiaajDgq6sg/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;span&gt;每日播报Spark相关技术及资讯，我们坚信Spark才是未来的通用大数据处理框架。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 16 Dec 2016 21:42:26 +0800</pubDate>
    </item>
    <item>
      <title>专访俞岳：华为如何构建新一代PaaS平台</title>
      <link>http://www.iwgc.cn/link/3950925</link>
      <description>&lt;p&gt;&lt;span&gt;华为PaaS首席系统工程师俞岳在发表完《新一代华为PaaS&amp;nbsp; 平台助力企业IT全云化转型》之后，在SDCC专访间接受了CSDN记者的独家专访，他对目前企业IT面临的挑战以及华为新一代PaaS平台的进展做了详细的介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPNDB5d6VGZznWLrdVtShbY4YvRcBfNPeX3Kwq8dCltvCbSiaMnMn4Tnpw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;华为PaaS首席系统工程师 俞岳&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;俞岳在采访时告诉记者，目前企业IT面临诸多挑战，正如他在大会上分享的观点：首先，烟囱式应用系统难以共享，资源利用率极低；其次，传统单体应用架构缺乏敏捷和弹性，部署扩容慢，产品升级困难；第三，开发和运维割裂，自动化程度低，造成整个企业IT的应用无法做到非常敏捷的全栈发布、迭代。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他认为，未来，应用一定会向CloudNative架构演进，而微服务是必经之路。PaaS平台作为面向应用云化转型的平台，会从目前的碎片化形式走向基于统一架构平台，企业只需要真正聚焦于自己应用的开发就可以。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对目前企业IT的挑战和趋势，俞岳表示，前一代的碎片化的PaaS平台很难满足企业的敏捷开发和快速上线的需求。华为基于多年企业应用开发实践以及外部客户访谈，华为推出新一代PaaS产品FusionStage。FusionStage采用分层的架构，分成业务无关PaaS内核以及领域相关PaaS服务两层，PaaS内核可灵活对接各种领域PaaS平台和应用，包括三个核心框架、云中间件、公共原子服务，三者均采用服务化的方式开发，使用独立软件包进行交付，组件和服务之间实现解耦、不相互依赖。同时，平台里面也融入了Docker、kubernetes、Mesos、 Yarn这些最新的云计算技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUpCWUUUxs4yRMCvfwseOPN6Ijt5agHWK9xIa6PIeLou9sBfgyR22Bgm8iaMiaVx0XaMS6aibH6xYHjg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于以上架构，华为PaaS平台可以做到灵活组合，支持多种部署组合来适应公有云，私有云，混合云等多种不同场景需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于最上层的领域服务，华为希望通过和行业内资深解决方案的供应商或者ISV共同构建，通过这种分层，通过这两方面的结合，华为希望给企业PaaS提供一个量身定做统一架构平台，从而能够满足企业应用敏捷开发、运行、运维的需要。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于PaaS平台的构建，平台的“内核”会帮助用户处理任务调度，管理资源,集成应用所需要的不同类型的服务未来用户的应用架构，肯定无需从0开始，而是要基于某些已有的、通用的服务来构建的，用户只需要写最核心的那部分逻辑，其他的尽量都是用现有的服务来构建，这样才能满足快速上线，敏捷的要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;FusionStage开发流水线是用以解决端到端的流程打通问题。俞岳表示，在企业内部，开发流水线可以分成两个层次，上层叫做业务流程编排，下层则是开发流水线的编排。企业内部完成一个特定能力的业务功能时，需要一条或者多条流水线。流水线引擎的核心是基于容器的相关技术构建起来的，具备很大灵活性和扩展性，可以对接企业已有的工具链，除此之外，还支持自定义组件，封装成容器，然后对接到流水线里组成一个完整的流程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;华为FusionStage应用调度和资源管理框架主要技术包括：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;兼容开放：北向支持多种类型应用，兼容多种应用框架，包括Kubernetes、Compose、Mesos、Yarn；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多云适配：支持同时接入多个不同的I层, 支持混合云的部署；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;异构资源统一管理：实现基于容器、虚拟机、物理机资源的统一管理；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多调度算法：可插拔的多调度策略，支持亲和，反亲和，公平调度，乐观并发，负载均衡&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于当前广泛关注的FusionStage微服务框架，俞岳谈到，微服务是应用的分布化的基础，一个好的微服务框架首先要对不同的开发语言、框架做一些适配，让你的编程变得更简单，中间有一个高性能的通讯总线，保证了微服务之间可以互通，最核心的就是微服务的运行和治理能力。华为FusionStage微服务框架核心能力包括多语言、可扩展、高性能、高可靠、可监控。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;俞岳最后表示，华为会在明年推出FusionStage新一代商用版本，构建端到端的完整的应用开发能力，支持企业应用的敏捷开发；其次，平台通过合作共建，和合作伙伴一起打造一个完整的生态圈，通过引入不同领域的解决方案和服务，构造出面向客户，面向不同行业的PaaS平台，这是华为PaaS平台的最终目标。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 16 Dec 2016 21:42:26 +0800</pubDate>
    </item>
    <item>
      <title>卷积神经网络（CNN）在无人驾驶中的应用</title>
      <link>http://www.iwgc.cn/link/3931080</link>
      <description>&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;本文为《程序员》原创文章，未经允许不得转载，更多精彩请订阅2017年《程序员》&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无人驾驶的感知部分作为计算机视觉的领域范围，也不可避免地成为CNN发挥作用的舞台。本文是无人驾驶技术系列的第八篇，深入介绍CNN（卷积神经网络）在无人驾驶3D感知与物体检测中的应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;CNN简介&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;卷积神经网络（Convolutional Neural Network，CNN）是一种适合使用在连续值输入信号上的深度神经网络，比如声音、图像和视频。它的历史可以回溯到1968年，Hubel和Wiesel在动物视觉皮层细胞中发现的对输入图案的方向选择性和平移不变性，这个工作为他们赢得了诺贝尔奖。时间推进到上世纪80年代，随着神经网络研究的深入，研究人员发现对图片输入做卷积操作和生物视觉中的神经元接受局部receptive field内的输入有相似性，那么在神经网络中加上卷积操作也就成了自然的事情。当前的CNN相比通常的深度神经网络（DNN），特点主要包括：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一个高层的神经元只接受某些低层神经元的输入，这些低层神经元处于二维空间中的一个邻域，通常是一个矩形。这个特点受到生物神经网络中receptive field的概念启发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同一层中不同神经元的输入权重共享，这个特点可以认为是利用了视觉输入中的平移不变性，不光大幅度减少了CNN模型的参数数量，还加快了训练速度。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于CNN在神经网络的结构上针对视觉输入本身特点做的特定设计，所以它是计算机视觉领域使用深度神经网络的不二选择。在2012年，CNN一举打破了ImageNet这个图像识别竞赛的世界纪录之后，计算机视觉领域发生了天翻地覆的变化，各种视觉任务都放弃了传统方法，启用了CNN来构建新的模型。无人驾驶的感知部分作为计算机视觉的领域范围，也不可避免地成为CNN发挥作用的舞台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;无人驾驶双目3D感知&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在无人车感知中，对周围环境的3D建模是重中之重。激光雷达能提供高精度的3D点云，但密集的3D信息就需要摄像头的帮助了。人类用两只眼睛获得立体的视觉感受，同样的道理能让双目摄像头提供3D信息。假设两个摄像头间距为B，空间中一点P到两个摄像头所成图像上的偏移（disparity）为d，摄像头的焦距为f，那么我们可以计算P点到摄像头的距离为：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKSdxUKD5RSTFkRw8Sy8BbsS9ORl8ocrb0sA30bFicp8O5sicDV4TS9JaQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以为了感知3D环境得到z，需要通过双目摄像头的两张图像I_l和I_r得到d，通常的做法都是基于局部的图片匹配：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKNSf7m3ZpTLEkMJ0micGuJQ5fsM3jTecP6AXDIcqFbPw2Dgqq7libySAQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于单个像素的值可能不稳定，所以需要利用周围的像素和平滑性假设d(x,y)≈d(x+α,y+β)（假设α和β都较小），所以求解d变成了一个最小化问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHK3jWaCUaAIJLm3cwBHmAUr5L96T0qWiaPTSKibe2XuTj9Gl4MfvK6Jong/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这和optical flow任务想要解决的是非常类似的问题，不过是（Il，Ir）变成了（It ，It+1），所以下面将要介绍的算法，两者都适用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;MC-CNN&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在来看看Matching-Cost CNN算法，这个算法使用了一个CNN来计算上式的右侧matchingcost，MC-CNN的网络结构见图1。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKicYM75jGoCeia90aAaMibh5lXgcRdFV3xERaJocM8VRbELTxKCPW7RLrA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图1 MC-CNN的网络结构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个网络的输入是两个图片的一小块，输出是这两块不匹配的概率，相当于一个cost函数，当两者匹配时为0，不匹配时最大可能为1。通过对一个给定的图片位置搜索可能的d取值，找到最小的CNN输出，就得到了这一点局部的偏移估算。MC-CNN算法接下来做了如下后期处理：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cross-based cost aggregation：基本思想是对邻近的像素值相似的点的偏移求平均，提高估计的稳定性和精度。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Semi-global matching：基本思想是邻近的点的平移应该相似，加入平滑约束并求偏移的最优值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;插值和图片边界修正：提高精度，填补空白。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最终算法效果如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKyAibwvJ3U8wBCELibWCJd4BISrwL3blamFXwKGSeic3j0GL3cYPp7NHWg/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图2 MC-CNN的算法效果&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MC-CNN虽然使用了CNN，但仅限于计算匹配程度，后期的平滑约束和优化都是必不可少的，那有没有可能使用CNN一步到位呢？FlowNet就是这样做的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;FlowNet&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了实现端到端的模型结构，需要用CNN实现特征提取，匹配打分和全局优化等功能。FlowNet采取了encoder-decoder框架，把一个CNN分成了收缩和扩张两个部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKkBWEwLLtdPHsMOmPIlQryJKHsejwibp6Z16Eia6DUrXliblwd4DDzJiazw/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图3 encoder-decoder的框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在收缩部分FlowNet提出了两种可能的模型结构：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;FlowNetSimple：把两幅图片叠起来输入到一个“线性”的CNN中，输出是每个像素的偏移量。这个模型的弱点是计算量大，而且无法考虑全局的优化手段，因为每个像素的输出是独立的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;FlowNetCorr：先对两幅图片分别进行特征的提取，然后通过一个相关层把两个分支合并起来并继续下面的卷积层运算。这个相关层的计算和卷积层类似，只是没有了学习到的特征权重，而是由两个分支得到的隐层输出相乘求和。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKw1nVDWKl6DJ3PfMzRnvC8Ps6V5qlkMPOvg3R44ucT5Zm2j6g7iak07w/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图4 FlowNetSimple与FlowNetCorr&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;FlowNet网络收缩部分不仅减少了CNN的计算量，同时起到了在图像平面上聚合信息的作用，这也导致分辨率下降。于是在FlowNet网络扩张部分使用 “up convolution”来提高分辨率，注意这里不仅使用了上一层的低分辨率输出，还使用了网络收缩部分相同尺度的隐层输出，如图5所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKtdzpXeA7Z5UpXGcjnBRssNlljF2dicZ4ZtGYXqLsYkOPaptaPGiaqwRg/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图5 FlowNet网络扩张&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;FlowNet算法在常见的公开数据集上都获得了不错的效果，值得一提的是它的速度很快。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;无人驾驶物体检测&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;物体检测技术是无人驾驶感知必不可少的部分。自从2012年CNN在图片分类问题上的突破，物体检测自然是CNN应用的下一个目标，CNN的物体检测算法层出不穷，我们挑选比较有代表性的几个算法做介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Faster R-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CNN在物体识别领域大行其道之前，通常做法类似于DPM（Deformable Parts Model）这样的解决方案：在图像上抽取局部特征的组合作为模板，比如基于图像的空间梯度的HOG特征；为了能够处理形变，遮挡等变化，我们建立一个“弹性”的结构，把这些“刚性”的部分组合起来；最后加上一个分类器判断物体是否出现。这样的算法一般复杂度较高，需要大量经验，而且改进和优化难度较大。CNN的到来改变了一切。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;R-CNN系列算法是一个两段式的算法，它把物体识别这个问题分为：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;物体可能所在区域的选择：输入一张图片，由于物体在其中的位置大小有太多可能性，我们需要一个高效的方法找出它们，这里的重点是在区域个数的一定上限下，尽可能找到所有的物体，关键指标是召回率。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;候选区域的识别：给定了图片中的一块矩形区域，识别其中的物体并修正区域大小和长宽比，输出物体类别和更“紧”的矩形框。这里重点在识别的精度。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在了解算法的大致架构后，来看看算法的具体实现，这里主要描述R-CNN这一系列算法的最新版：Faster R-CNN，它对应上面两步分为RPN（Region Proposal Network）和Fast R-CNN，接下来分别介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RPN&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们称物体可能所在区域为候选，RPN（Region Proposal Network）的功能是最高效地产生一个候选列表。如图6，RPN选择以CNN为基础，图片通过多个（比如4）卷积层进行特征提取，在最后一个卷积层输出的特征图上使用一个3x3的滚动窗口连接到一个256或者512维的全连接隐层，最后再分支到两个全连接层，一个输出物体类别，一个输出物体的位置大小。为了能够使用不同的物体大小和长宽比，在每一个位置上考虑三个尺度(128x128, 256x256, 512x512)和三个长宽比(1:1, 1:2, 2:1)一共9种组合。这样一个1000x600的图片上考虑了(1000/16) × (600/16) × 9 ≈ 20,000种位置、大小和长宽比的组合，由于使用CNN计算，这一步耗时不多。最后根据空间重叠程度去掉冗余的候选区域，一张图片大约获得2000个左右的物体可能区域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKtO2TicicSD5bKhg1TjOOkRIwcsrw38yLcqbDqkuOxBnicISIAviaib3Id8w/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图6 Region Proposal Network&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Fast R-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在候选区域分类阶段，我们使用的是基于全连接的神经网络，如图7的右侧部分：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而左侧的特征提取部分可以重用RPN中的CNN计算结果，大大节约了计算时间，能达到5-17帧每秒的速度。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKmDEWGhO3EOydGa9tk4AVW3XxEricDu0xOW3xIYzo3hjrdCpCjicjIFWA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图7 Fast R-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;MS-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然Faster R-CNN算法大名鼎鼎，但在物体尺度变化很大的场景，比如无人驾驶，它还有提升的空间，Multi-scale CNN（MS-CNN）正是针对这个问题的尝试。CNN的层级结构由于pooling层的存在自然形成了和不同尺度的一个对应关系。那为什么不把对物体的检测放到CNN的不同层里去呢？这正是MS-CNN的想法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在选择物体候选区域阶段，MS-CNN使用了图8的网络结构，我们看到如果把CNN网络里的卷积层看成一个大树的“主干”，那么在conv3、conv4和conv5这三个卷积层之后，这个网络都长出了“分支”，每个“分支”都连接了一个检测层，负责一定的尺度范围，这样多个“分支”一起，就能覆盖比较宽的物体尺度范围，达到我们的目的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在候选区域识别阶段，我们让上一阶段多个检测层的输出特征图分别输入到一个子网络里，这里有几个值得注意的细节：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKqyycic5coeG9aRz00HiaOpu2U77q3LdB8ldCS8I6YyPqNLiaO1zn2Ybmw/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图8 MS-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第一层是“Deconvolution”，目的是为了提高特征图的分辨率，保证物体检测的准确率，特别是对尺度偏小的物体。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Deconvolution之后，在抽取物体特征时（绿色框），同时还抽取了物体周边的信息（蓝色的框），这些“上下文”信息对识别准确率的提高有明显帮助。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总的来说，MS-CNN和Faster R-CNN相比，优势是识别的准确度有很大提高，尤其在物体尺度变化的情况下，比如KITTI数据集里面的行人和自行车。但是Faster R-CNN还是有速度的优势。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKL0fyVFT2HKwoicRbhLBnewR9ZjAbydVxmiaGEicSIEz0ibFZBUqnOYQZgQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图9 MS-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;SSD&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然Faster R-CNN的速度比之前的R-CNN已有很大提高，但还达不到实时的要求。Single Shot Detector（SSD）就是一个能够实时运行，有更佳准确度的算法，最近人气很高。SSD沿用了滑动窗口的思想，通过离散化物体的位置，大小和长宽比，使用CNN高效计算了各种可能的物体情况，从而达到了高速检测物体的目的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujgwITib2o4ib8cP8TVxxSvHKiajOicbaJuERMxoKLXU8piaCCkO8tYqmBKvv92qpWAhAtB5ichFulJRYGw/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;图10 Single Shot Detector&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如图10所示，SSD使用了VGG-16网络来做底层的图片特征提取，通过取消生成候选区域，缩放图片缩放和特征图采样的步骤，一步到位判断物体位置和分类，得到了高速的物体检测算法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在VGG网络的基础上，SSD加入了逐步变小的卷积层，这些不同尺度的卷积层分别使用3x3大小的卷积核进行物体位置偏移和分类的判断，使SSD能够检测到不同大小的物体。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无人驾驶的感知部分作为计算机视觉的领域范围，也不可避免地成为CNN发挥作用的舞台。CNN在无人驾驶中的应用主要包括3D感知与物体检测。在3D感知中使用到的网络包括MC-CNN与FlowNet， 在物体检测中使用到的网络包括Faster R-CNN、 MSCNN与 SSD。本文详细介绍了各种网络的优缺点，希望对各位在选择网络时有帮助。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;作者简介：&lt;/p&gt;&lt;p&gt;吴双，原百度研究院硅谷人工智能实验室资深研究科学家，美国研发中心高级架构师。研究方向包括计算机和生物视觉，互联网广告算法和语音识别，曾在NIPS等国际会议中发表文章。&lt;/p&gt;&lt;p&gt;王江，百度研究院硅谷深度学习实验室资深研究科学家。曾在微软和Google研究院实习，他的工作在Google和百度的图像检索系统、人脸识别系统和大规模深度学习中均得到了广泛的应用。&lt;/p&gt;&lt;p&gt;刘少山，PerceptIn联合创始人。加州大学欧文分校计算机博士，研究方向智能感知计算、系统软件、体系结构与异构计算。现在PerceptIn主要专注于SLAM技术及其在智能硬件上的实现与优化。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;更多精彩文章请扫描下方二维码，订阅2017年《程序员》&lt;strong&gt;&lt;span&gt;（含iOS、Android及印刷版）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/Pn4Sm0RsAuge4vFTeHXaUiclIILb8QeMsrXpgmLDiaQCY4cCWaHovwYbczicvah9EonGxRLtDiaJKiarx7UhUXYDQuA/640?wx_fmt=jpeg"/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 15 Dec 2016 18:15:55 +0800</pubDate>
    </item>
    <item>
      <title>【BDTC 2016】数据库论坛：探索蚂蚁金服、巨杉、移动、京东、南大通用等企业数据库应用实践</title>
      <link>http://www.iwgc.cn/link/3931081</link>
      <description>&lt;p&gt;&lt;span&gt;2016年12月8-10日，由中国计算机学会（CCF）主办，CCF大数据专家委员会承办，中国科学院计算技术研究所、中科天玑数据科技股份有限公司与CSDN共同协办，以“聚焦行业最佳实践，数据与应用的深度融合”为主题的&lt;/span&gt;&lt;a target="_blank" style="font-size: 14px; text-decoration: underline;"&gt;&lt;span&gt;2016中国大数据技术大会&lt;/span&gt;&lt;/a&gt;&lt;span&gt;在北京新云南皇冠假日酒店隆重举办。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;华东师范大学数据科学与工程研究院院长周傲英&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据大会，第二天上午精彩继续，备受关注的数据库论坛在主持下华东师范大学数据科学与工程研究院院长周傲英的主持下开始，他对大家的到来表示感谢，同时介绍了今天的演讲嘉宾，包括来自蚂蚁金服基础数据部资深专家蒋志勇、SequoiaDB巨杉数据库
 
联合创始人&amp;amp;CTO王涛、中国移动苏州研发软件工程师闫超众、京东资深DBA张洋、天津南大通用数据技术股份有限公司高级副总裁兼CTO武新，他希望大家今天都能有所收获。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xkynjv1ibIXCQU9s9DaCZaVywj5gTMVZAVOiajt7Eg1YzyChMGMCNQ8HQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;华东师范大学数据科学与工程研究院院长周傲英&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;蚂蚁金服基础数据部资深专家蒋志勇&lt;/span&gt;蚂蚁金服基础数据部资深专家蒋志勇发表《12万笔每秒支付能力的背后—OceanBase的发展之路》。本次议题主要分为三个方面，其一，OceanBase的第二个“双十一”；其二，OceanBase的发展历程；其三，OceanBase1.0：面向未来的云数据库。蒋志勇认为，OceanBase适合“双十一”主要基于三个特性：易扩展，水平扩展，自动负载均衡、通用服务器，通用存储；高性能，内存数据库性能、轮转合并，合并不影响服务能力；高可用，IDC级别自动容灾、故障恢复时间秒级。&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xTyVHAyg8ba9ZTfEGdc5KZaaboyspDvD5ibiavnibVgJCbPeVnx9uV8TZA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;蚂蚁金服基础数据部资深专家蒋志勇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从2014年起，蚂蚁核心系统正式迁移到OceanBase上，全面支持蚂蚁核心业务，即交易、支付、账务。OceanBase采用分布式架构，具备高可用、高效的存储引擎、高性能、低成本、多租户、兼容性高等特点，而OceanBase下一步的将在四个方面，即更高的兼容性、更高的可用性、更高的性能及高度自管理等，未来还会拓展周边产品，降低TCO以及服务更广大的用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;SequoiaDB巨杉数据库联合创始人&amp;amp;CTO王涛&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;SequoiaDB巨杉数据库联合创始人&amp;amp;CTO王涛带来了《NewSQL技术解析与企业级应用案例》，他首先介绍了SequoiaDB巨杉数据库。成立于2011年，专注于新一代企业大数据平台研发,&lt;/span&gt;&amp;nbsp;其核心产品SequoiaDB(巨杉数据库)是国内第一款新一代分布式数据库。&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xFFkqZQTNgX44FnCjVEHf76wIFjH8TOia0qEx08A7iaU9HGlLtpQb8l8A/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;SequoiaDB巨杉数据库联合创始人&amp;amp;CTO王涛&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他重点介绍了大数据数据湖的概念，他介绍说，传统的数据集市,为了优化数据分析的性能,
 只会存储一部分的属性并且只操作已经聚合的数据。 而“数据湖”则是将全量数据的所有属性都进行存储,尤其是当你并不确定从什么角度去分析和使用这些数据时，数据湖是大数据架构的巨大飞跃。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在介绍完大数据时代数据库的技术特点之后，他重点介绍了NewSQL的应用案例，主要有五大场景，第一是近线数据平台、第二是内容管理营销平台、第三是跨业务的数据整合、第四是物联网智能制造。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;中国移动苏州研发软件工程师闫超众&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;中国移动苏州研发软件工程师闫超众发表《中国移动基于PostgreSQL系列开源数据库的实践》主题演讲。闫超众表示针对市场需求，目前PostgreSQL系列产品有三种类型：第一种产品是基于pg单机的主备集群数据库，tp类产品，这类产品主要是使用流复制原理，定位于满足中小企业的市场需求，主要应用于中小型数据库的实时在线处理。第二种产品是基于pg-x2的分布式交易型数据库，tp类产品，这类产品主要是使用shared noting架构，通过x86机器来降低成本，主要应用于中大型数据的实时在线交易处理。第三种产品是基于gpdb的 分布式分析型数据库，AP类产品，这类产品也是使用shared noting架构，通过x86机器来降低成本，它和第二种产品的架构不一样，适用的场景也不一样，它主要应用于对海量数据 进行统计分析的场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xFKR0zC3qZxmT7wmdJT1IQ2MQzcXtzauFABYEt87NNUTtaqfPnbibp8w/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;中国移动苏州研发软件工程师闫超众&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分布式交易型数据库到底是什么样的呢？闫超众表示它是基于pgx2研发的一款数据库，所以它既有关系数据库的特性，又具备可扩展、高可用的特性，主要应用于海量数据的实时在线交易处理，目标是为CRM、客服等核心TP系统提供数据库服务。苏研基于gpdb研发的一款分布式分析型关系数据库，主要用来处理大规模的数据分析任务，包括数据仓库（DW）、商务智能（BI/OLAP）和数据挖掘（DM）等。支持ANSI SQL 2008标准和SQL OLAP 2003 扩展，目标是提供大数据的存储引擎、计算引擎和分析引擎。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;京东资深DBA张洋&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东资深DBA张洋带来的分享聚焦《京东数据库备份系统进化之路》。他的分享主要分为三个部分，备份的重要性、备份的用途、京东备份系统的演进。他表示，备份有很多用途，不简单是做数据恢复，最主要的用途是测试环境的搭建，还有就是从库扩容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xWF3bFLwQg4SedhuF0LepYn3AaUGYLRUt5n84UPic6H6OVia1mnSskk1g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;京东资深DBA张洋&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在介绍完京东备份系统1.0、2.0之后，重点介绍了3.0系统的演进之路和架构，他表示目前的3.0系统挑战主要包括存储未上云、有些老库redolog太小，xtrabackup不能成功、备份策略需要人工添加，大表xtrabackup容易失败等。因此，对于未来，他表示主要关注使用JSS云存储、规范化数据库配置、从库分类自动添加备份策略。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后他也分享了目前京东备份系统的一些数据，目前拥有备份集群795套、备份36037、备份文件总大小1362T、成功率99.9%。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;天津南大通用数据技术股份有限公司高级副总裁兼CTO武新&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;天津南大通用数据技术股份有限公司高级副总裁兼CTO武新发表《关系型模型与非关系模型的融合：技术实战与展望》主题演讲。本次分享武新分别从四个方面诠释主题，首先，介绍大数据需求与IT技术架构演变；其次，介绍SQL（关系）与Hadoop（非关系）的融合趋势；再次，GBase UP 介绍及应用案例；最后是总结与展望。武新表示，当前企业数据处理仍面临“三座大山”，在过去是业务数据孤岛，如今是MPP数据库解决了结构化业务数据的分析问题，在未来将是大数据的挑战，全数据、多模型、异构、新技术等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUMkOwcKTzYNMkx8mXrAX9xFH8gSn2b9wg4INHAzhy5GIQccL8YPlOOmGqrdfqUdicPykMYfb9Drqg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;天津南大通用数据技术股份有限公司高级副总裁兼CTO武新&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;融合架构的大数据平台产品需求范畴包括传统事务型数据库（SQL）、新型MPP数据库（SQL）以及Hadoop（NoSQL），TPC-DS MPP与Hadoop性能对比：GBase MPP整体快5.8倍；TPC-DS MPP与Hadoop性能对比：GBase MPP多数快10倍以上；TPC-H MPP与Impala性能对比：GBase MPP整体快7.3倍以上。而GBase UP的定义为简化、融合、扩展及开放，其技术架构是SQL and NoSQL融合、扩展和开放，而GBase UP 的定位是企业级大数据融合产品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;武新还表示当前数字商业的场景越来越复杂，数据容量越来越大，数据也越来越分布。数据的集成，分享和组织管理成为重要目标，统一管理是大势所趋；市场表现方面，传统数据库5强依然占据88.7%市场份额。表明传统SQL数据库依然有着很大的用户市场；尽管传统SQL数据库和Hadoop有各自独立的工作场景，它们之间的数据融合和双向数据流通越来越成为趋势。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 15 Dec 2016 18:15:55 +0800</pubDate>
    </item>
    <item>
      <title>为什么说 Storm 比 Hadoop 快？</title>
      <link>http://www.iwgc.cn/link/3931082</link>
      <description>&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;文 | 杨晓青 &amp;nbsp;张云聪&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“快”这个词是不明确的，专业属于点有两个层面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.时延 ， 指数据从产生到运算产生结果的时间，题主的“快”应该主要指这个。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 吞吐， 指系统单位时间处理的数据量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先明确一点，在消耗资源相同的情况下，一般来说storm的延时低于mapreduce。但是吞吐也低于mapreduce。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Storm的网络直传、内存计算，其时延必然比hadoop的通过hdfs传输低得多;当计算模型比较适合流式时，storm的流式处理，省去了批处理的收集数据的时间;因为storm是服务型的作业，也省去了作业调度的时延。所以从时延上来看，storm要快于hadoop。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说一个典型的场景，几千个日志生产方产生日志文件，需要进行一些ETL操作存入一个数据库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;假设利用hadoop，则需要先存入hdfs，按每一分钟切一个文件的粒度来算(这个粒度已经极端的细了，再小的话hdfs上会一堆小文件)，hadoop开始计算时，1分钟已经过去了，然后再开始调度任务又花了一分钟，然后作业运行起来，假设机器特别多，几钞钟就算完了，然后写数据库假设也花了很少的时间，这样，从数据产生到最后可以使用已经过去了至少两分多钟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而流式计算则是数据产生时，则有一个程序去一直监控日志的产生，产生一行就通过一个传输系统发给流式计算系统，然后流式计算系统直接处理，处理完之后直接写入数据库，每条数据从产生到写入数据库，在资源充足时可以在毫秒级别完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，跑一个大文件的wordcount，本来就是一个批处理计算的模型，你非要把它放到storm上进行流式的处理，然后又非要让等所有已有数据处理完才让storm输出结果，这时候，你再把它和hadoop比较快慢，这时，其实比较的不是时延，而是比较的吞吐了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;storm是典型的流计算系统，mapreduce是典型的批处理系统。下面对流计算和批处理系统流程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;整个数据处理流程来说大致可以分三个阶段：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 数据采集与准备&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 数据计算(涉及计算中的中间存储)， 题主中的“那些方面决定”应该主要是指这个阶段处理方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. 数据结果展现(反馈)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1)数据采集阶段&lt;/span&gt;&lt;/strong&gt;，目前典型的处理处理策略：数据的产生系统一般出自页面打点和解析DB的log，流计算将数据采集中消息队列(比如kafaka,metaQ,timetunle)等。批处理系统一般将数据采集进分布式文件系统(比如HDFS)，当然也有使用消息队列的。我们暂且把消息队列和文件系统称为预处理存储。二者在延时和吞吐上没太大区别，接下来从这个预处理存储进入到数据计算阶段有很大的区别，流计算一般在实时的读取消息队列进入流计算系统(storm)的数据进行运算，批处理一系统一般会攒一大批后批量导入到计算系统(hadoop)，这里就有了时延的区别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2)数据计算阶段&lt;/strong&gt;&lt;/span&gt;，流计算系统(storm)的时延低主要有一下几个方面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;A： storm 进程是常驻的，有数据就可以进行实时的处理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;mapreduce 数据攒一批后由作业管理系统启动任务，Jobtracker计算任务分配，tasktacker启动相关的运算进程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;B： stom每个计算单元之间数据之间通过网络(zeromq)直接传输。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;mapreduce map任务运算的结果要写入到HDFS，在于reduce任务通过网络拖过去运算。相对来说多了磁盘读写，比较慢&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;C： 对于复杂运算&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;storm的运算模型直接支持DAG(有向无环图)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;mapreduce 需要肯多个MR过程组成，有些map操作没有意义的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3)数据结果展现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;流计算一般运算结果直接反馈到最终结果集中(展示页面，数据库，搜索引擎的索引)。而mapreduce一般需要整个运算结束后将结果批量导入到结果集中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际流计算和批处理系统没有本质的区别，像storm的trident也有批概念，而mapreduce可以将每次运算的数据集缩小(比如几分钟启动一次)，facebook的puma就是基于hadoop做的流计算系统。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 15 Dec 2016 18:15:55 +0800</pubDate>
    </item>
    <item>
      <title>阿里超大规模Docker化之路</title>
      <link>http://www.iwgc.cn/link/3900813</link>
      <description>&lt;blockquote style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p&gt;&lt;span&gt;本文阿里巴巴技术论坛整理文章，首发于CSDN，未经许可，禁止任何形式的转载。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;12月6-7日，由阿里巴巴集团、阿里巴巴技术发展部、阿里云云栖社区联合主办，以“2016双11技术创新”为主题的阿里巴巴技术论坛上，阿里巴巴研究员林昊分享了阿里超大规模Docker化之路。阿里在Docker化这条路上，碰到了规模、多元化场景所带来的各种挑战，这次分享中将给大家介绍阿里为什么要引入Docker，以及如何完成这次超大规模的Docker化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;Docker化之前&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Docker化之前，阿里主要交易业务已经容器化。采用T4做容器化，T4是2011年开发的一套系统，基于LXC开发，在开发T4的过程中，跟业界很大的不同在于，T4更像VM的容器。当用户登进T4后，看起来与标准的KVM等几乎完全一样，对用户来讲是非常透明化的。所以，容器化不是我们推进Docker的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;a)触发我们Docker化的主要原因一：Docker最重要的一点是镜像化，可以做到拿着镜像就可以从一台完全空的机器的应用环境搭建起来，可以把单机环境完全从零搭好。Docker化之前，阿里巴巴的应用部署方式主要由Java、C来编写的，不同的业务BU可能采用完全不同的部署方式，没有统一标准。内部尝试通过基线来建立部署标准，定义的基线包括应用依赖的基础环境（OS、JDK版本等）、应用依赖的脚本，基础环境的配置（启动脚本、Nginx配置等）、应用目录结构、应用包、应用依赖的DNS、VIP、ACI等，但不成功。部署标准做不了，直接导致自动化很难做到。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;b)触发我们Docker化的主要原因二：DevOps是一个更好的方向，阿里巴巴做了很多运维和研发融合的调整。Docker是帮助DevOps思想真正落地的一种手段，所有的思想最终都体现在工具或框架上，变成一个强制性的手段，Docker会通过Dockerfile的描述，来声明应用的整个运行环境是怎样的，也就意味着在编写Dockerfile过程中，就已经清楚在不同环境中的依赖状况到底是怎样的，而且，这个环境是通过一个团队来维护的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;Docker化目标&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年7月，阿里巴巴制定了两个Docker化目标：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;交易核心应用100%Docker化；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DB其中一个交易单元全部Docker化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;Docker化之路&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推进Dcoker之前，我们有一个准备的过程。在准备阶段，我们需要Docker更像VM和更贴合阿里运维体系的Docker，我们将改造过的Docker称为AliDocker；除了AliDocker以外，我们需要支持AliDocker的工具体系，比如编译、镜像库、镜像分发机制，在完成这些准备工作后，我们认为可以一帆风顺地开始大规模的AliDocker上线。但事实并非如此。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;第一轮Docker化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们碰到了很多问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;工具不完善，阿里很多应用之前都是在T4容器中，怎样将T4容器转换成AliDocker是首要面临的问题；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;镜像Build后上传，以前阿里一个应用转成多个，很多时候需要在自己的机器上做Build，然后自己上传，导致做应用时很痛苦；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;应用从T4切换成走Docker的链路，链路没有完全准备好，从资源创建到发布，很多需要手工去做，大规模去做效率非常低。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;第二轮Docker化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在推进的过程中，我们又遭遇了新的问题。Docker的发布模式是典型的通过镜像，拉到镜像后将原来的容器销毁，重新创建一个容器，把镜像放进去，拉起来。Docker单一化的发布方式支持不了多种发布模式，更改velocity模板发布效率低；有本地内存cache的发布，重启本地内存cache就会消失。怎样在基于镜像模式情况下又能支持多种发布模式呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们在Docker的镜像模式基础上做出一个crofix的模式，这个模式不是绕开镜像，而是从镜像中拉起我们需要的文件，去做覆盖等动作，这样就可以完成整个发布。Docker化镜像模式是必须坚持的，否则失去了Docker化的意义。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;第三轮Docker化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;继续推进到很多应用切换到Docker的时候，我们又遇到了更大的问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，很多研发人员都有明显的感受，切换到Docker后变慢。第一，编译打包镜像慢，编译打包完应用的压缩包后，还需要把整个环境打包成镜像，这是在原有基础上增加的过程，如果编译时每次都是新机器，以前依赖的所有环境都要重新拉，一个应用Docker的完整镜像通常会很大，因为它包括依赖的所有环境。对此，我们在编译层做了很多优化，尽可能让你每次都在之前编译的基础上进行编译。第二，镜像压缩问题，Go在1.6以前的版本压缩是单线程，意味着压缩整个镜像时效率会非常低，所以我们选择暂时把镜像压缩关闭掉。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其次是发布问题，Docker的镜像化模式决定了分发一定是镜像分发，使用Docker时不能完全把它当作透明化东西去用，对所有研发人员来说，要非常清楚依赖的环境、Dockerfile中镜像的分层改怎么做，将频繁变化部分与不频繁变化部分做好分层，镜像分层是改变Docker慢的重要方案；阿里制定了镜像分发多机房优化，比如打包后将所有镜像同步到所有机房；阿里也做了发布优化（P2P、镜像预分发、流式发布），还通过Docker Volume将目录绑定到Dockerfile中，可以保证镜像文件每次拉起时不会被删掉。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在整个Docker化的过程中，我们在“慢”这个问题上遇到了最大的挑战，不管是编译慢还是发布慢，都做了很多突击的改造项目，最后才让整个编译过程、发布过程在可控的响应速度内。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;第四轮Docker化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在推进过程中，我们还遇到规模问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于规模比较大，开源软件很容易碰到支撑规模不够，稳定性差的问题。目前我们使用Swarm来管理，Swarm的规模能力大概可以支撑1000个节点、50000个容器，而我们需要单Swarm实例健康节点数在3W+，对此，我们对Swarm进行了优化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujBuGPtAgJKNZAzut6nHxLRTfUFhjqxVuJm7NCOwCiauX3qMUdLqbpboglqHV5LH9KcOxblwS1El8Q/0?"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;规模我们做到从支撑1000到3W+，压力减小了很多。而Swarm的稳定性对我们来讲，最大的问题在HA上，一个Swarm实例如果挂掉，重新拉起需要时间，所以我们在用Swarm时进行了改造。在前面加了一层Proxy，不同业务、不同场景都可以通过Proxy转换到自己不同的Swarm实例上。另外，所有的Swarm节点我们都会用一个备方案在旁边，而且都是不同机房去备。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过改造增强HA机制后，可以做到每次切换、简单发布。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;Bugfix和功能增强&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了上面四轮次比较明显的问题，在整个Docker化过程中，还做了很多的Bugfix和功能增强，具体有以下几方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Daemon升级或crash后，所有容器被自动销毁的问题；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cpuset、cpuacct和CPU子系统mount到一起时CGroup操作错误的bug；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持基于目录的磁盘配额功能（依赖内核patch）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持制定IP启动容器，支持通过DHCP获取IP；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持启动容器前后执行特定脚本；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持镜像下载接入各种链式分发和内部mirror的机制；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;增加Docker Build时的各种参数优化效率和适应内部运维环境；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;优化Engine和Registry的交互。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;经历了这么多坎坷，我们终于完成了全部目标，实现双11时交易所有核心应用都AliDocker化，DB其中一个交易单元全部AliDocker化，生产环境共几十万的AliDocker。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;未来&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;容器化的好处是可以把很多对物理机型的强制要求虚拟化，可能也需要Docker在内核层面的改造，对于未来，我们已经做好了准备，希望：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有软件AliDocker化；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;和Docker公司紧密合作回馈社区；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AliDocker生态体系逐渐输出到阿里云。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;作者：林昊，花名毕玄，阿里巴巴研究员。&amp;nbsp;&lt;/p&gt;&lt;p&gt;责编：钱曙光，关注架构和算法领域，寻求报道或者投稿请发邮件qianshg@csdn.net，另有「CSDN 高级架构师群」，内有诸多知名互联网公司的大牛架构师，欢迎架构师加微信qianshuguangarch申请入群，备注姓名+公司+职位。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;</description>
      <pubDate>Tue, 13 Dec 2016 19:08:34 +0800</pubDate>
    </item>
    <item>
      <title>MaxCompute SQL查询优化解析</title>
      <link>http://www.iwgc.cn/link/3900814</link>
      <description>&lt;p&gt;&lt;span&gt;&lt;strong&gt;开课时间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年12月22日（周四） 20:00 - 21:00&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;主讲嘉宾&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjUXkAnuicBXD5aJ9IBNuLHeaNJbuGHC53jC9Jic7ibV3Jzalg1G8C5bn5OKbEQEtzoibpeyrQicJdxWfhA/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;徐冬&amp;nbsp; 阿里云高级技术专家&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;阿里云技术专家，MaxCompute开发工程师。在分布式和大数据领域有多年的经验，从事过分布式系统的开发、设计、运维和应用，也是Apache Hive和Apache Calcite的贡献者。现任阿里云MaxCompute团队开发工程师，负责MaxCompute优化器开发以及多个查询优化的实现工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;课程简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MaxCompute是阿里云的大数据解决方案，它在跨数据中心的超大规模分布式系统上提供多种编程接口，使得用户可以灵活地在其上开发大数据应用。这个分享会专注于SQL领域，介绍MaxCompute SQL最近的发展，如何利用基于代价的优化器以及代码生成技术大幅提高了SQL查询效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;学习要点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol style="list-style-type: decimal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;MaxCompute SQL简介&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于代价的优化器和优化规则&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;编译执行的运行时&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;后续工和展望&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;课时安排&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;19:30 - 20:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;观众签到&lt;br/&gt;20:00 - 21:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 演讲分享&lt;br/&gt;21:00 - 21:00&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Q&amp;amp;A&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按【识别二维码】，报名课程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjUXkAnuicBXD5aJ9IBNuLHeaWeKnjOq9t57VyUIduib8ZTJJPaUxick2XuxoHfrdoxLRfbrpG53xiaibicg/0?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 13 Dec 2016 19:08:34 +0800</pubDate>
    </item>
    <item>
      <title>2017年深度学习十大趋势预测</title>
      <link>http://www.iwgc.cn/link/3900815</link>
      <description>&lt;p&gt;&lt;span&gt;本文作者曾经多次预测了技术发展的趋势，最近的一次预测是“2011年软件发展的趋势与预测”。10项预言中，准确地命中了6项，比如JavaScript VM、NoSQL、大数据分析、私有云、Scala语言等等。今年，他对深度学习的发展趋势做了一个预测，主要是研究领域的趋势预测，而不是工业界的应用。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以下是作者对2017年度的预测内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;硬件将加速倍增摩尔定律&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者根据其观察到Nvidia和Intel的发展动态，认为这是显而易见的趋势。由于Nvidia具有完整的深度学习生态系统，它们在整个2017年都将主导占据主导地位。在另一个深度学习生态系统成熟之前，没有人会抛弃Nvidia而追求其它的平台。Intel的Xeon Phi方案中途夭折，预计要到2017年年中才能在性能上追赶上Nvidia，那时基于Nervana的芯片才推向市场。Intel的FPGA方案可能因为成本原因而被云提供商所采纳。降低功耗是头等大事。预计到2017年年中，Intel的Nervana芯片每秒可完成30万亿次浮点运算。作者个人猜测，Nvidia目前已经能够实现每秒20万亿次浮点运算，他打赌Intel在2018年之前不会有太多动作。Intel手中的唯一可能的一张王牌是3D XPoint技术。这将有助于提高整个硬件堆栈，但不一定是提升核心能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;卷积神经网络（CNN）将会统治而RNNs和LSTM将被淘汰&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者认为CNN模型将成为深度学习系统的主流模型。RNN和LSTM模型及其递归设置和嵌套的记忆节点将越来越少地使用，因为它们无法与CNN所抗衡。就如同GOTO在代码中消失一样，作者希望RNN和LSTM模型也被淘汰。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;简单的调参工作将被元学习取代&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当作者刚开始接触深度学习时，他认为优化算法，特别是二阶的算法能够有巨大的提升。如今，已经有替我们优化模型的深度学习模型了。我们不在需要费尽心思改进SGD算法了，作者认为重要的一个原因是元学习（meta-learning）能够根据领域自适应地优化学习过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;可微分记忆网络将更常见&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记忆模块将从核心节点中抽取出来，只是作为计算机制的一个独立组件，作者觉得这是一个很自然的结果或者说架构。他认为LSTM的遗忘门、输入门和输出门没有必要，它们可以被辅助的可微分记忆模块所取代。这呼应了作者对CNN模型的预测。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;强化学习只会变得更具创造性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于现实的观察永远是不完美的。我们身边存在着大量SGD无法解决的问题。因此，任何实践性的深度学习系统都必须包含某些形式的强化学习。除此之外，强化学习将会出现在各种深度学习的训练过程中。作者认为强化学习极大地促进了元学习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;对抗与合作学习将成为王牌&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在过去，我们的深度学习系统都只有单一的目标函数。今后，作者希望看到两个或两个以上的网络合作或竞争来实现一个最佳的解决方案。参见“博弈论揭示了深度学习的未来”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;转移学习引领产业化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Andrew Ng认为这非常重要，作者也表示赞同！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;更多的应用程序将使用深度学习组件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在2016年，我们已经看到深度学习在更大的搜索算法中用作一个功能评价组件。alphago采用深层学习来评估策略。谷歌的Gmail自动回复系统将深度学习与集束搜索(beam search)结合。作者希望看到更多的这类混合算法，而不是新的end-to-end的被训练的DL系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;更多的采用设计模式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习只是众多需要抽象结构的复杂领域之一。尽管它用到了很多高深的数学知识，仍有很多未经证明和模糊的概念可以借鉴在其它复杂领域已被证明是有效的方法，比如在软件开发领域有效。作者认为人们最终会从深度学习与模式设计中得到启发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;工程将超过理论&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者认为研究人员的背景和他们所使用的数学工具会给他们的研究方法带来偏见。深度学习系统和无监督学习系统等等这些新的东西可能我们从来没有遇到过。因此，他觉得没有证据表明我们的传统分析工具将对解开深度学习的谜团提供任何帮助。几十年来，物理学中大量的动态系统一直困扰着作者，他将此类比于深度学习系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而，尽管我们缺乏了解其本质，但是将不会阻止工程上的应用。作者觉得深度学习几乎就像是生物技术或基因工程。我们已经创建了模拟学习机，我们不知道他们是如何工作的，但是这并没有阻止任何人进行创新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;原文： 10 Deep Learning Trends and Predictions for 2017&amp;nbsp;&lt;/p&gt;&lt;p&gt;作者： Carlos E. Perez&amp;nbsp;&lt;/p&gt;&lt;p&gt;译者： KK4SBB&amp;nbsp;&lt;/p&gt;&lt;p&gt;欢迎技术投稿、约稿、给文章纠错，请发送邮件至heyc@csdn.net&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;想要更多干货？请关注CSDN人工智能公众号AI_Thinker。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujo8lhoBLrP2fhLff2iaEuOYlNQPXibIOpx9SichlYicw19XZQ7AgGPRokYO4RhAiavA3jfic3pN89iaAqwQ/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 13 Dec 2016 19:08:34 +0800</pubDate>
    </item>
    <item>
      <title>【BDTC 2016】专访中兴飞流吕阿斌、郑龙：Yita，基于数据流的大数据计算引擎</title>
      <link>http://www.iwgc.cn/link/3884372</link>
      <description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;【CSDN现场报道】2016年12月8-10日，由中国计算机学会（CCF）主办，CCF大数据专家委员会承办，中国科学院计算技术研究所、中科天玑数据科技股份有限公司与CSDN共同协办，以“聚焦行业最佳实践，数据与应用的深度融合”为主题的2016中国大数据技术大会在北京新云南皇冠假日酒店隆重举办。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在此次大会的大数据分析与生态系统论坛上，中兴飞流信息科技有限公司CTO郑龙发表了“Yita：基于数据流的大数据计算引擎”的演讲，阐述了数据流对于大数据的影响，以及中兴飞流自主研发的Yita平台能够给大数据产业带来的价值，在会议的间隙，CSDN记者有幸对中兴飞流信息科技有限公司CEO吕阿斌、CTO郑龙就数据流技术以及中兴飞流的Yita平台进行了深入的交流和探讨。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;什么是数据流？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;中兴飞流CEO吕阿斌首先就数据流模型产生的背景进行了阐述，他表示，近年来，大数据成为继云计算以后一个重要的科技发展分支。大数据本质上是研究如何利用好数据的问题，而数据才是最重要的资产，因此，大数据比云计算更具有现实应用的意义，它可能发生在社会生产生活中更重要的一方面。大数据的发展有一个历程，早期数据的产生、存储、计算依赖于数据库，但当时数据量不大，数据计算过程相对来说比较规范，尤其是数据格式相对来说比较标准，所以数据库基本能够解决大多数的事情，例如，基于数据库的数据挖掘、分析等等。但更复杂的数据分析是和数学结合在一起的，而复杂的数学模型在其中起到了重要的作用，但因为没有和具体应用结合，因而并没有完全发挥出数学模型的作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着网络、移动互联网的飞速发展，数据的形式越来越多，从以单一的结构化数据为主发展成为由文本、图片、文件等多种形式组成的非结构化数据为主，同时，数据的数量也呈现出指数级的增长，在这样的情况下，只有通过高效的算法和有效数据的具体结合，才能从海量的数据中挖掘真正的信息价值，而实际上，这就是所谓的数据智能，也是未来大数据真正的发展方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;吕阿斌继续解释道，数据智能说的再高一点就是人工智能，人工智能最重要的就是应用、算法、计算平台和数据，对于数据智能同样如此，但要建立高效的数据智能的计算平台，首先需要了解大数据时代数据处理的特点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一个特点是海量实时处理。在以前，很多数据都是事后处理，而在大数据时代，海量实时处理的需求非常普遍，比如在交通领域的视频分析中，对于人流、车流、异物等情况的分析要快速得出结果，不能事后再记。再比如在金融领域的投资分析，因为国内国际政治经济形势瞬息万变，因此如果没有快速实时的分析结果，投资的效果可能就是相反的。这就是海量数据下的实时处理需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二个特点是智能。以前对数据只是做简单的处理，分类，聚合，而在大数据时代，需要对数据进行复杂计算，需要高效的算法，比如分类算法、聚类算法、深度学习、神经网络等来对数据进行深度的分析，得出有价值的信息，这就是对智能的要求。而高效的算法需要运行在一个计算框架里面，这个框架就是计算平台。但算法再好，如果计算处理平台不行的话，就无法满足大数据时代智能的需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而海量实时计算和智能对计算平台有着更高的要求，但依靠传统的冯∙诺依曼模型控制理论，实际上很难高效满足大数据时代的这两个需求。因此，在这种情况下，更适应大数据时代需求的数据流模型脱颖而出。而实际上，数据流的概念在70年代就有，由MIT杰克∙丹尼斯教授和中兴飞流顾问高光荣教授研发,但由于当时控制流的技术得到了主流硬件和操作系统厂商，如英特尔，微软的支持，因此，数据流模型并没有被业界所重视。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但当大数据出现以后，数据流计算模型在并行计算上的特点，能够较好的满足大数据时代数据处理的两个需求。在控制流模型中，通过等同步的方式进行计算，计算需要等待上一步计算结束，才能进行下一步计算（如图1所示），在等待同步的过程中，计算资源是被白白浪费的，而流式计算则可以同时进行其他计算，因此，数据流计算特别适合于有海量实时需求的大数据处理领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjW5Fh0nD9tXuLricYr6HwlHBQSvibgvAMOmicS4sS7OFajaicciaiaF4y99icPKib8oYY9LrlbeTDeuYF2nfQ/0?wx_fmt=jpeg"/&gt; &lt;br/&gt;&lt;span&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;图1 例如，当需要计算如图中（A+B）*C的算式时，传统的控制流方式需要等待A，B，C三者都被赋值后才能开始计算，而采用数据流模型，只要A,B两者被赋值即可开始计算&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简单来说，数据流和控制流的最主要区别和特征就是细颗粒度的异步计算，而无需等待全局的同步，数据流的这个特征非常适合大数据的处理，在计算的过程中不会有太多的衰减，尤其是在海量实时处理时更具有优势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;中兴飞流CTO郑龙也对数据流模型进行了补充解释，他表示，控制流模型有点像以前的计划经济，计算的每个步骤都是预先设定好的，这在以前的静态数据处理时，没有问题，但在当前的大数据处理过程中，数据是变化的、动态的，一旦在计算的过程中数据出现了变化，就会给下一步计算造成很大的麻烦。而数据流模型更加像市场经济，它只是制定一定的规则，只要有数据、计算资源，就可以进行处理，当数据出现变化时，会动态的增加或者减少资源来应对数据的变化，这种高效的资源调度模式可以最大限度的利用资源，这是数据流在处理海量数据时延时低的主要原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Yita，数据流大数据计算引擎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正是看到了数据流模型在大数据处理方面的优势，中兴飞流推出了基于数据流模型的Yita大数据计算引擎。在谈到中兴飞流研发Yita的背景时，郑龙表示，现有的Spark、Storm等大数据平台主要使得原来海量数据从无法计算、无法有效时间内计算变成了有办法计算，但在实际应用当中会遇到很多问题，比如计算效率过慢，对数据量的支持不高，对算法的支持度不够等等。而Yita的研发背景就是要进一步增强海量数据的计算效率，实现海量、实时、智能的大数据处理。而传统的基于同步计算模式的Spark、Storm平台受制于控制流模型的局限，已经逐渐不太适合当今的大数据处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;郑龙表示，大数据的特点是高维稀疏，所谓高维就是数据量多，数据维度多，数据种类多，例如，对上网用户进行精准画像时，用户的信息、用户的上网行为、用户使用的APP、用户的网站喜好、用户的浏览习惯等都是可以采集的数据。所谓稀疏是指数据是分散的，同样的精准画像的例子，例如，有个用户用了一个非常冷门的APP，这个APP只有千分之一或者万分之一的人在用，这就是稀疏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而要根据大数据的这两个特点进行大数据分析，实际上对实时计算是一个很大的挑战，其中要涉及智能计算、数据汇总、算法模型、资源调度等等很多方面的技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而基于数据流理论的Yita正是有效解决这些问题的大数据平台，它具有两大优势：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其一是海量内存计算，采用控制流模型的计算方法是把数据的一部分先放进内存，然后开始计算，这样内存就同时要处理两项工作，一项是数据的缓存，一项是数据的计算，但实际上决定计算能力的是除去负担缓存工作之外的内存容量，而很多计算效率不高，是因为数据缓存占的多，留给计算的内存少，这就是现在内存计算领域遇到的很大问题。而数据流可以很好的解决这个问题，数据流的基本思想不是载入、然后计算、然后输出的模式，它是一边载入一边计算一边输出的模式，所以不需要预载入那么多数据，而是像流水一样一点点的不断载入，这种计算方式，在数据载入方面耗费的内存量非常低，大量内存被留给了数据计算，因而能够更加高效的利用内存，这也就是为什么在同样内存量的条件下，Yita能够支撑比Spark更多的计算的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjW5Fh0nD9tXuLricYr6HwlHBkhibWG4ofehJqnrNGUcCJZXZa4mapW3peEPRFIR2txJ0mhmqibLSrZwg/0?wx_fmt=jpeg"/&gt; &lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;&lt;em&gt;图2 Yita的优势：海量内存计算&lt;/em&gt;&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其二是动态实时，我们会发现当内存的使用量接近临界值的时候，计算会变很慢，这主要因为C、Java等语言的内存设计机制导致的，计算如果超过内存量计算将会不成功，同时内存用的过多还有可能造成计算能力大幅下降，而数据流可以根据每一级的实际负载，动态调配资源分配，保证吞吐和延迟要求。这使得Yita的计算可以一直保持高效，并且在接近系统瓶颈的时候计算性能依然保持是线性的，因此可以提供相对于传统控制流大数据平台10多倍的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjW5Fh0nD9tXuLricYr6HwlHBwYSZF7WEeibE43jaCLB390CzELpeUzzgRc9p1vybrgPmhZiaA0ln7UNQ/0?wx_fmt=jpeg"/&gt;&lt;span&gt; &amp;nbsp;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;&lt;em&gt;图3 Yita的优势：动态实时&lt;/em&gt;&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;中兴飞流，做中国大数据核心技术的探索者&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在采访的最后，吕阿斌对中兴飞流进行了简单的介绍，他表示，大数据发展的未来趋势就是数据智能，怎么把数据变成智能化的应用，不仅需要好的技术，好的商业运作公司，更需要有立足自身的核心技术，而脱胎于中兴通讯的中兴飞流就是这样一家以技术为核心的公司，中兴飞流主要聚焦于下一代大数据处理平台、算法以及在一些关键垂直领域的应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;郑龙补充道：“中国在系统软件领域没有自己的核心技术，真正的核心竞争力都在国外，而大数据给了中国企业一个机会，但在以Hadoop为代表的第一代大数据浪潮中，我们错过了，第二代以Spark、Storm这种内存计算、实时计算为雏形的时候我们也错过了，而在以海量、智能、实时为标志的第三代大数据技术浪潮中，中兴飞流希望做一次努力的尝试，希望在大数据海量、实时、智能的技术演进中至少为中国自有技术在大数据领域中贡献一次创新，虽然Yita不一定最终能成为整个大数据生态系统中的全部，但至少我们在这里面贡献了一个很重要的，很有意义的一个模块、一个组件。我们在Yita上面有一些自己独到的应用，有一些非常擅长的领域，这能够让中国的技术第一次站在大数据技术的前沿，能够掌握自己的核心竞争力，不再被别人牵着鼻子走，这是从技术人角度更大的愿景，我们也考虑把Yita开源、把Yita贡献成为整个中国的财富甚至世界的财富，这是我们在技术上的理想和愿景，是我们的诗和远方！”&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 12 Dec 2016 17:59:17 +0800</pubDate>
    </item>
  </channel>
</rss>
