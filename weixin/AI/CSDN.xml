<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>17.5W秒级交易峰值下的混合云弹性架构之路</title>
      <link>http://www.iwgc.cn/link/4743095</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;每年的双11都是一个全球狂欢的节日，随着每年交易逐年创造奇迹的背后，按照传统的方式，我们的成本也在逐年上升。双11当天的秒级交易峰值平时的近10多倍，我们要用3-4倍的机器去支撑。但大促过后这批机器的资源利用率不高，到次年的双11会形成较长时间的低效运行。试想一下，电商交易有大促峰值，而阿里云有售卖Buffer，如果能充分发挥云计算的弹性能力，让资源可以两边快速腾挪，就可以解决资源浪费的问题了。把我们的交易单元可以部署在云上面，那么大促的时候我们只需要按照压测模型去云上构建一个符合能力的新单元即可，用完马上释放掉，这样无疑是最优雅的。专有云+公共云 的混合云弹性架构成为一种自然而然的选择，不但可以资源合理利用，降低成本，同时也锻炼了阿里人的的技术能力，为用户提供更优质的服务。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有了架构思路，实现起来似乎也没那么容易。阿里的交易涉及几百个系统，他们之间的依赖错综复杂，如果能够把他们快速的搭建在云上？这次系统之间的依赖如何复杂，如果把他们的容量估算好，快速调整他们的容量水位？这就不得不提到下面的两个秘密武器了：一键建站和弹性容量交付&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 一键建站&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.1 背景&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站是在底层基础设施交付的基础上，快速地在一个空机房部署交易单元，使新机房迅速具备对外提供服务的能力。一键建站的逆过程叫一键下站，即迅速切除单元流量，释放所有单元内应用的物理资源。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;从架构的层面看，一键建站的基础是阿里电商体系的异地多活。从运维的角度看，一键建站是运维产品的升华，更是运维效率的核心体现。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站第一次被提出是在2014年，但由于系统多，依赖复杂，加上中间件的复杂性，当时新建一个单元需要耗时近1个月的时间，更是需要所有单元链路上的运维同学参与。去年，DB实现了一次完整意义上的一键建站，中间件的建站实现了半自动化，但是应用的建站过程仍需要很多运维同学的支持。今年，一键建站进行了重构，并提出一天（8小时）一单元的目标，在几乎不用运维同学参与的情况下，顺利支持了3个云单元的建站工作，最快一次耗时6小时建站。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.2 挑战&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;今年的双11单元架构是三地五单元，一中心四单元，也是第一次遇到同机房两单元。如何控制单元内的链路封闭，单元与单元、单元与中心的同步与可见性，是异地多活的大挑战，也是一键建站的难点。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;首先需要明确单元内部署什么。建站需要维护一份知识库，包括单元的数据库，中间件，统一接入，以及导购、商品、店铺、交易、会员等一百多个应用。需要知道每个产品的服务器配置，软件配件，容量需求，甚至是应用间链路依赖等相关信息。这份知识库会跟随日常运维操作，调用链路日志等不断更新。同时，一个完整单元不仅仅包含线上环境，还需包含预发环境与小流量(测试环境)，每套环境都有自己的一份知识库。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;其次是需要明确部署的每个步骤实现。单元内的每个产品，都需要明确部署的操作细节，以及产品之间的前后依赖。今年，一键建站第一次在云上实施，面对全新的服务器资源(ecs)，全新的网络资源(slb)以及全新的部署方式(docker)等，每个环节都需要技术落地。由此可见，一键建站是一个庞大的系统，几乎涉及所有的运维产品。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在明确了建站数据与建站步骤的基础上，还需要有一套技术实现能将单元内所有产品相关的近四千个部署步骤串联起来，这就是建站系统。追求建站效率的同时，安全始终要铭记于心。建站的每个步骤，都需要考虑可能出现的突发情况以及应对策略。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.3 技术架构&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站是一个体系的构建，是要在原有运维产品的基础上进行升华，将相关产品的原子性服务联动起来，最终凝聚成一个按钮。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站涉及的单元产品种类繁多，相关操作保罗万象，而且变化极为频繁。如果为每类产品写死操作流程，那建站只会疲于代码，即使完成了代码，也只会是一次性的玩物。因此建站需要更多的考虑灵活性，在最终的技术实现上，将系统架构分为四个层次，原子服务、功能组件、组件编排以及流程调度。系统架构如下图：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321229zsRMec.jpg"/&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.4 原子服务&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;建站平台的能力来源于周边的运维产品，接入相关系统的服务，将最小粒度的一次服务调用称为一个原子操作。服务网关包装一系列原子操作，以提供上层业务调用。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作为唯一的外部系统调用入口，服务网关还需要做统一的日志记录，业务链路跟踪以及故障告警等。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;对建站平台的效率要求，很大一部分最终会落在外部系统服务上。最具代表性的是服务器资源申请与docker镜像，这两条链路的背后，凝聚着很多人努力的心血。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.5 功能组件&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;功能组件，是将相关的原子服务进行整合，从而形成的一个个有业务含义的独立功能模块。比如创建服务器、添加帐号、创建vip、docker upgrade、应用启动、更新hsf路由等等，将近百个原子服务最终聚合成三四十个功能组件。组件的实现需要能保证幂等。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;功能组件需要遵循一定的规范，从而使得同一组件能被不同的应用，不同的流程复用。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.6 组件编排&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;组件编排是建站灵活性的核心。建站平台支持在web页面动态编排功能组件，从而组装成一个个可以运行的流程。单元内的每类中间件或应用都可能存在部署上的差异，通过服务编排，使每一类产品都能对应到一类流程。&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;建站需要涉及整套中间件以及一百多个单元应用，这些产品在部署启动上还存在先后链路依赖。去除弱依赖，将单元产品依赖描述成一张无环有向图，每个节点代表一个产品的部署流程。将整张图描述成一个流程，这个流程就是建站流程！&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;1.7 流程调度&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;流程调度是建站稳定性的有力保障。流程调度负责建站流程的分布式执行，是流程引擎的一个实现，至少需要达到下述几点要求：&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;高可用。服务器宕机不能影响流程执行；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;系统容错。下游系统异常诊断，自动重试；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;并发访问控制。流程节点不应该同时在多台服务器被调度；在结构上，流程调度可以分为流程实例管控、任务队列、任务调度、组件执行器与分布式协同组件等。每个节点按照自身的负载情况加载流程实例到本地任务队列，组件执行器负责每个组件的入參注入，出參收集以及反射调用，分布式协同保障同一时刻仅有一个节点在调度流程实例。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站流程是一个包含众多子流程的嵌套流程结构，建站时，流程调度需要同时执行上千个流程。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一键建站只是完成了最小单元的建站工作，如果想让这个单元支撑好大促的流量，还需要对这个单元进行容量评估和扩容，如何快速的评估各个应用的容量并自动扩容呢？这时就需要弹性容量交付出场了。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 18px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2. 弹性容量交付&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如下图：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321229rkJE64.jpg"/&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;今年弹性技术在实时容量评估算法上作了一定的改良，期初主要出于提升效率，最大程度地降低实施成本,与保障集群稳定性的目的: 更加智能，使用在线机器学习实时测算应用性能变化，并可作出简单的故障原因分析, 通过算法对各个单元的应用集群进行自然水位拉平.&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如何用机器在无人介入的情况下，预测应用集群各个单元的性能；需要做很多事情：日常性能变化测量；应用发布性能变化测量；集群中单机的性能变化预测，与目标交易量下会有多少比例机器挂掉的预测，容量问题还是性能问题的判断等等等等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;为支持XX笔交易的业务目标，需要多少资源；或者说，现有XX些资源，最高可以支撑多高的交易量?&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;一个应用集群在什么样的物理资源利用率下稳定性与成本会是一个最佳配比?&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;资源预算.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;我们先简单以一个在线web服务类应用进行分析，在线电商每天的流量波动与资源利用率是存在一定的关系的(当然也可以换成其它指标进行测算)，我们将两项指标叠加，呈散点图形态&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321229a3soPO.jpg"/&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;现在假设，我们设定资源利用率阀值为70%的cpu利用率，预测该应用集群的服务能力，我们利用上面呈现的散点图做一次拟合，延长趋势线，呈以下形态:&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321229e6vrTR.jpg"/&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;则求出，该应用极限能力在X%的资源利用率下的服务能力大致是Y.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;但实际场景中，情况要复杂得多，在不同压力下，随着物理机的利用率整体饱和度的上升，性能会有一定的损耗，将不同压力下测算的服务能力记录，并作一次回归，预测出目标压力下，大致损耗度，并用刚才计算好的服务能力减去目标压力下的损耗度即可，&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;哪下一个问题来了，应用集群的资源利用率多少为极限值？这里只是一个假定，每个应用集群的极限能力都不相同; 首先前文已经提到，由于各个应用集群布署的物理机坑位不同，有可能超卖，也有可能会与资源占用多的应用布署在同一个物理核内，超线程会带来一定的影响，而一个物理核通常分为两个逻辑核，是否一个物理核的总能力/2则为两项占用该物理核逻辑核上的能力；假定100%的资源利用率为满负荷，则两个逻辑核各分50%的能力相对合理?&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;但实际情况是，占用两个逻辑核的应用集群利用率，在容量层次不齐的宏观情况下，有的偏高，有的偏低，这就会出现资源抢占问题。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如何识别某项应用集群合理的资源利用率是多少？ 我们需要做一些事情，即除了对整个应用集群作上文中讲到的资源测算，还需要对每台单机作能力测算，这里我们随便拟定一个值，如单机负载如果超过80%是不可承受的，则我们在整体全链路压测时，会对每台单机做实时的负载预测，看在目标交易量下，多少比例的机器会超过最大的承受能力，该集群的总qps会有出现多少比例的损耗。 这里假定我们认为不允许有机器出现这样的情况，则当某台机器预测值达到最大承受能力时，则认为当前集群能力的合理负载应该在多少。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;根据上文的描述，我们可以直接拿到测算好的各个应用集群的容量配比进行在线备容即可.通过后续每次的压测，对各个应用集群的预期资源利用率进行逐步逼近，最终达到整体备容目标.&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;正因为有了以上两个秘密武器，我们在双11之前就快速的做好了容量准备，同时双11一过，我们立刻对云资源进行一键下站，把资源归还到云的Buffer里，对公共云进行售卖。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" margin-top: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者简介：唐三、乐竹、锐晟、潇谦，阿里中间件技术团队。（责编／魏伟）&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;[SDCC 2017·上海站] 将于2017年3月17-19日登陆申城，三大技术峰会24位嘉宾，汇聚国内一线的互联网公司大牛，畅谈运维、数据库和架构的热门话题和技术热点，精益运维发起人&amp;amp;优维科技CEO王津银、MongoDB 大中华区首席架构师唐建法和华为软件API开放平台架构师李林锋等亲临现场。3月5日前门票八折优惠中，5人以上团购立减400元，详情点击左下角&amp;nbsp;&lt;span style="max-width: 100%; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;阅读原文 。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321230SLa5xv.jpg"/&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Fri, 17 Feb 2017 16:43:31 +0800</pubDate>
    </item>
    <item>
      <title>SDCC 2017·上海站之互联网应用架构实战峰会讲师和议题全曝光</title>
      <link>http://www.iwgc.cn/link/4743096</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2017年3月17-19日，&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;SDCC 2017·上海站震撼来袭&lt;/a&gt;&lt;/span&gt;，特开设了三大主题会场，分别是互联网运维开发实战峰会、数据库核心技术与应用实战峰会和互联网应用架构实战峰会，为期三天，为软件开发者带去共24场的技术盛宴。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;其中，阿里、腾讯、百度、苏宁、京东等企业的顶级运维大牛带来360度无死角的运维盛宴，大规模分布式系统运维、自动化运维、云端运维、游戏运维、海量容器运维等等热点技术话题一网打尽。同时，集结业界前沿领域的数据库专家，业界巨匠，触手可及，围绕MySQL、PostgreSQL、Redis、Oracle等数据库，共同探讨性能调优、数据库自动运维、云端数据库、新一代数据平台等领域的前瞻性话题；深度剖析行业痛点，探秘数据库核心技术。SDCC也汇聚互联网应用架构实践的焦点议题，海量并发环境下的高可用/高并发/高性能系统架构设计、电商架构、消息队列、分布式架构、架构演讲、移动APP性能优化、分发系统的构建、微服务等。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;日前，大会主委会也对外公布了&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;SDCC 2017·上海站&lt;/a&gt;之互联网应用架构实战峰会讲师和议题，详情如下：&lt;/span&gt;&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;出品人&lt;/span&gt;&lt;/h2&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(0, 82, 255); font-size: 14px; line-height: 1.1; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;张立刚 1号店技术部-电商云平台技术总监&lt;/span&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2012年7月加入1号店，先后担任过1号店订单、库存、拆单、运费、第三方平台订单等电商核心交易系统负责人，致力于电商平台产品化、智能化、云化。期间主导并参与了1号店SOA治理、订单Service化、订单水平拆库&amp;amp;去Oracle迁Mysql、无线性能优化及拆pool、运费体系重构、库存准确率优化等重要项目，负责1号店与Tmall、百度、当当、B2B2C平台等第三方平台订单业务，从0开始建立了1号店完善的订单监控、预警、履单体系。 对高可用高并发高性能的电商核心交易系统及SOA架构有深入的理解和实践，熟悉电商核心产品、订单、库存等业务，将以OMS为核心规划构建新一代电子商务云平台。&lt;/span&gt;&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 16px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;讲师&lt;/span&gt;&lt;/h2&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;者文明 京东运营研发部系统架构部系统架构师&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;者文明，中科院硕士，清华大学精仪系学士，14年电子商务/企业应用领域研发、架构经验，涉及电商后端物流系统架构，实时大数据解决方案。2012年加入京东，主要负责仓储、配送、售后客服等系统架构。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：京东物流系统高可用架构实践&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;大多电商物流系统均为OLTP系统，同时具有海量数据和高并发特性。如何在海量数据和高并发的应用场景中构建一个高可用的OLTP系统？本专题聚焦电商物流系统高可用架构设计与实践，旨在介绍京东物流系统在数据库和Web端的高可用架构设计思路、应用场景及案例分析。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. OLTP系统面对海量数据和高并发场景时如何提升系统的可用性；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 电商物流系统高可用架构设计和实战经验。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;孙子荀 腾讯科技&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;嘉宾简介：&lt;/span&gt;孙子荀，09年毕业后从事内核和分布式系统的开发工作，11年在百度从事过高性能计算方面的工作。12年加入腾讯从事腾讯云加速的带宽调度系统的设计研发，获得公司多个业务奖项。14年开始手Q公众号项目，负责构建公众号平台和内容平台。现在从事个性化阅读内容方面的处理和挖掘工作。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲主题：&lt;/span&gt;内容分发的系统建设&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲概要：&lt;/span&gt;&amp;nbsp;17年是内容生态分发的爆发年。分享主要介绍在内容分发领域的一些工程和算法技术。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 内容分发系统的框架；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 内容的建模和质量控制；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 内容推荐技术PUSH和PULL模式。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 如何构建一个内容分发引擎，存储层的技术选型和挑战；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 多种算法策略模型如何与并发处理相互结合；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 关于假新闻和低俗内容的控制技术手段。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;李雄峰 爱奇艺公司支付中心技术经理&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;&amp;nbsp;10多年企业应用和互联网软件架构设计经验，涉及电子商务、电子政务、风控、支付等领域。现供职于爱奇艺公司，先后负责大数据仓库系统和支付系统的软件架构设计工作。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：支付系统微服务化实践&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;互联网公司的快速发展往往也伴随着软件系统的迅速演化。在建设初期，由于基础设施和技术能力限制，大部分系统倾向采用单体应用。但随着业务的发展和复杂度的增加，系统的可维护性和性能都很难满足线上需求。本次演讲以支付系统为例，介绍如何对单体应用进行拆分，落地实施微服务架构，在确保线上业务稳定运行的同时推动架构可控地演化。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;以核心支付系统的改造为例，介绍：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 如何评估采用微服务架构来改进现有系统的必要性和收益；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 微服务架构改进的时机选择和路线图；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 微服务基础设施建设；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;4. SSH架构系统的微服务化改进最佳实践。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;李天晨 58到家技术中心架构部高级Java工程师&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;&amp;nbsp;58到家后端架构部团队核心成员，有着丰富的架构经验。目前负责到家自研的消息队列服务DMQ(Daojia Message Queue)、分布式调用链跟踪系统DTracker、通用消息平台等底层平台服务，在中间件架构设计上有自己的独到见解。本质程序员一枚。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：58到家电商业务场景下的消息队列架构设计&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;介绍适应58到家电商业务场景下的消息队列架构设计，根据真实的业务场景，各业务线开发痛点，合理选型技术架构，满足业务快速迭代发展。详细阐述对于电商交易支付类场景下消息100%到达率的架构设计，以及广播消息、消费者业务ack、延迟消息、消息有效期这些业务场景的功能实现，最后是对于将来顺序消息、事务消息功能的规划。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;电商业务的消息队列架构设计，满足消息100%可达，支持广播消息、消费者业务ack、延迟消息、消息有效期的业务场景。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;李林锋 华为软件API开放平台架构师&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;李林锋，2008年进入华为公司从事电信软件的设计和开发工作，有多年Java NIO、平台中间件设计和开发经验，精通Netty、Mina、分布式服务框架、云计算等，目前从事云平台和开放API相关的架构和设计工作，著有《分布式服务框架原理与实践》、《Netty权威指南》。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：微服务故障隔离技术&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;微服务分布式部署之后，涉及到序列化和反序列化、集群路由、网络读写等操作，故障在所难免。另外，在微服务中，可能会调用第三方服务，进行数据库操作、磁盘I/O操作等，这些对第三方服务的依赖，也会增加故障级联和扩散的风险。在实际项目中如何规避这些风险、如何更加有效的管理第三方依赖带来的可靠性奉献？本文将给出答案。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;学习到微服务故障隔离的关键技术：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. RPC通信层的故障隔离；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 第三方依赖故障隔离；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 基于线程池的微服务优先级调度；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;4. 熔断机制；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;5. 流量控制：静态、动态流控和并发控制；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;6. 优雅降级、异步回调机制。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;陈清渠 携程基础业务部高级研发经理&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;陈清渠，毕业于武汉大学，多年软件及互联网行业开发经验。14年加入携程，先后负责了订单查询服务重构，实时用户行为服务搭建等项目的架构和研发工作，目前负责携程订单中心团队。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：实时用户行为服务系统架构&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;用户实时行为对接了携程近20条业务线用户访问日志，通过kafka+storm的组合，每天在处理20亿+埋点数据的基础上保证秒级落地可查，支撑了多个产品，目前日均服务8千万以上请求。本次分享主要介绍我们在海量数据和高并发双重挑战下，如何从架构上和实现上保证实时性，稳定性和性能。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 了解实时计算的系统构成和架构；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 打造高性能服务的经验分享；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 从多个层面提高系统可用性经验分享。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;李嘉璇 百度研发工程师&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;李嘉璇，百度研发工程师，有处理图像、社交文本数据情感分析的经验，参与过基于深度学习的自动驾驶二维感知系统hackathon竞赛，对研究深度学习框架TensorFlow的架构、源码分析及在不同领域的应用有浓厚兴趣。目前一本《TensorFlow入门到精通》正在出版，4月上市。独立制作和运营的竞品分析网站——追点网（www.tdrop.top），也是国内基于深度学习做产品的社交评论和新闻的竞品分析和舆情报告的网站。个人博客：blog.greatgeekgrace.com，活跃于国内各大技术社区，知乎编程问题回答者，热爱技术，热爱分享。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：TensorFlow在人脸年龄、情绪、性别、关键点识别系统中的架构设计&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;结合目前最流行的TensorFlow深度学习框架，讲解如何对人脸识别、人脸情绪识别、人像笑脸、人脸关键点等系统的架构设计。并结合人脸的特征提取，建立特征工程；最后应用在安防、支付等领域。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 帮助听众了解人脸识别系统的架构和组成；并打造高性能的人脸识别系统。&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 百度人脸在人脸识别系统中的技术实战、特征提取以及坑是如何填的；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 理解人脸及图像相关的一些特征，及特征工程经验；&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;4. 目前关于深度学习架构设计的资料，中文资料翻译的有限，社区非常活跃，但是总是呈现出会着恒会，不会者始终找不到入门方法的状态。本次希望分享深度学习的架构设计和经验。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(0, 82, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;高亮亮 饿了么移动技术部iOS工程师&lt;/span&gt;&lt;/h3&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;个人简介：&lt;/span&gt;高亮亮，饿了么移动技术部高级iOS工程师，负责饿了么商家版iOS App开发。对iOS架构和系统底层有深入研究，擅长移动性能分析，trouble shooting、iOS逆向等重难点工作。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;演讲主题：新瓶旧酒——换个角度提升 APP 性能和质量的实践之路&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; word-wrap: break-word !important;"&gt;演讲简介：&lt;/span&gt;结合当下火热的移动性能话题和 APM，围绕移动应用性能质量等方向，谈谈饿了么商家版如何避开传统解决方案，将Reflow &amp;amp; repaint，throttle &amp;amp; debounce、优雅降级等方案在客户端实现。通过类比借鉴，作为一个全新角度来思考质量提升问题，并灵活的运用到移动端，从而提升应用的性能，稳定性和可用性。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;听众收益：&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1. 针对一线开发人员，贴合实际落地，由浅入深，通俗易懂 ;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;2. 通过借鉴其他领域概念，打破传统，提供非常规解决方案和思路 ;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;3. 普及其他领域概念，开拓思路，举一反三，挖掘更深层次的运用。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Fri, 17 Feb 2017 16:43:31 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】RancherOS 0.8.0 发布，多地加快推进大数据产业发展</title>
      <link>http://www.iwgc.cn/link/4743097</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;多地加快推进大数据产业发展&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近期，贵阳、福州、西安等地均开展了与大数据相关的建设工作，以推动大数据产业发展。工信部数据显示，“十三五”期间，大数据产业将保持高速增长，到2020年，大数据相关产品和服务业务收入将突破1万亿元，年均复合增长率保持30%左右。各相关上市公司也在谋篇布局，推动产业发展。专家认为，目前积累了丰富的数据资源，大数据技术创新取得了明显突破，大数据应用推进势头良好。此外，技术和产品的发展推动着大数据服务模式创新，未来会培育数据即服务（DaaS）新模式和新业态。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;不只是银行！未来这27大领域都将深受区块链影响&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;区块链技术影响的不仅仅只是银行和支付行业，以下27大领域都将受区块链影响：1.银行；2.支付和转账；3.网络安全；4.学历记录和学术界；5.投票；6.汽车租赁以及销售；7.网络和物联网；8.预测；9.在线音乐；10.拼车；11.股票交易；12.房地产；13.保险业；14.医疗；15.供应链管理；16.云存储；17.能源管理；18.体育管理；19.礼品卡和顾客忠诚度计划；20.政府和公共福利；21.枪支追寻；22.遗嘱和遗产；23.零售；24.慈善；25.执法；26.人力资源；27.打车服务。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;光大银行风险大数据产品“滤镜”正式上线&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，中国光大银行大数据实验室基于风险管理领域的预警分析研究，成功孵化出数据产品——“滤镜”。该产品利用大数据技术对企业客户进行过滤，形成高信用违约倾向的企业名单，向总分行风险管理决策者提供更加科学精准的决策支持；同时依托首个移动数据应用平台——“光速观察”，提升风险决策的时效性。此项数据产品运用社交网络、路径算法、文本分析等大数据分析挖掘技术，在线运行特殊交易对手、风险共同体、复杂循环担保圈三类大数据模型信号。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;Evernote公司短期内实现大规模的云迁移&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，Evernote公司最近在70天内将其业务完全迁移到Google云平台，这项工作通常耗时长达9到12个月。Evernote公司表示，它完成的这一业务迁移举动，对客户的影响达到最小程度，这在当今的商业环境中是一个壮举。实际上，该公司表示，其业务迁移到云计算的原因只是因为允许Evernote公司可以花费更多的时间响应客户，而不是担心他们的基础设施能力。事实上，这是推动数字化转型的关键点。如果云计算和其他技术可以帮助企业更快地向客户提供创新的新功能，它可以帮助公司提供差异化服务，从而有利于在竞争中胜出。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;Switch公司数据中心获得绿色和平组织的A级评测&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，绿色和平组织（Greenpeace）对于14个数据中心和CDN服务提供商进行了评测，并对四家厂商给出了整体不合格的成绩，努力清理这些运营商的数据中心提供能量的能源结构。其中一家是美国厂商，是杜邦Fabros技术公司，三家是韩国厂商：韩国电信，LG公司，以及SK公司。这个环保活动组织表彰了总部位于拉斯维加斯的Switch公司的努力，给出A的评价（列表中唯一的A），而硅谷的托管巨头Equinix公司是B，而总部位于旧金山的Digital Realty Trust公司则为C。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;微软联袂毕马威成立区块链创新工场，加速区块链应用开发&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;微软和毕马威日前宣布即将成立区块链创新工场，以推动区块链应用的检验和开发。据了解，早在2015年，两家公司就已经宣布促进全新战略合作关系形成，包括联手提供数据和分析（D&amp;amp;A）、云合规和变革以及商业解决方案服务的合作；2016年共同携手英国FinTech初创公司建设区块链资产管理平台，宣称将于2017年初发布核心平台计划。被称作“区块链节点”创新工程的建立目的就是协调、优化使用者尤其是金融投资公司的工作流程，提高服务效率。能进一步扩展去年以来建立在区块链上已有的合作基础。目前两家公司已经在新加坡和法兰克福设立办事处，并打算在未来设立第三个纽约办事处。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;国内首个基于大数据平台的智慧消防联合实验室成立&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，国家超算天津中心和天津市公安消防总队签署战略合作协议，共同成立天津市智慧消防联合实验室，推动大数据、云计算、物联网等新一代信息技术深度应用于本市消防安全工作，让消防更智慧，将火灾隐患消灭于萌芽状态。这也是国内消防领域首次与超算中心大数据平台进行合作。预计年底前第一阶段工作将完成，届时可实现消防预警预报，为监督检查提供预测和指导性数据。2018至2019年第二阶段完成，将进一步深化细化消防应急指挥系统，把建筑、地理等信息融入进来，建成整体平台。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;RancherOS 0.8.0 发布，基于 Docker 的操作系统&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;RancherOS 0.8.0 发布了，RancherOS是微型Linux发行，整个操作系统以Docker容器的形式运行。这包含了系统服务如udev和rsyslog。RancherOS 只包含运行Docker所需的最低数量的软件。这使得RancherOS的二进制下载量非常小。其他任何东西都可以动态通过Docker来获得。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;私有云将出现两极分化，行业云或占半壁江山&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;来自Gartner和美国Interop ITX/InformationWeek公司的最新数据与观察，揭示了一个与最近几年来十分流行的观点不同的结论：混合云的前景并不美妙，私有云在美国企业市场的部署率在下降，企业部署的私有云停留在虚拟化＋自动化基础上，而不是全方位私有云。但在中国市场，正在出现不一样的私有云市场形态。无论在行业云还是私有云的赛道上，都有可能诞生独角兽型创业公司，因为中国的市场空间足够大且处于空白阶段。而且因为中国市场的复杂性和成熟的互联网环境，在中国市场孵化出的私有云技术、产品与解决方案，还有机会复制到其它国家，最终产生世界级的新一代企业IT公司。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;Oracle为企业扩展云服务物联网组合&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;据悉，Oracle正在扩展其物联网产品组合，为基于Oracle物联网云和Oracle大数据云平台的企业提供四种新的云产品。这些物联网云应用与Oracle SCM Cloud和Oracle Service Cloud以及本地软件集成。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;本期周刊：&lt;/span&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;【Data &amp;amp; Cloud周刊】第4期 | SDCC 2017上海站震撼来袭&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;，立即&lt;/span&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;订阅&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487321233CvUPhf.jpg"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Fri, 17 Feb 2017 16:43:31 +0800</pubDate>
    </item>
    <item>
      <title>深度增强学习前沿算法思想</title>
      <link>http://www.iwgc.cn/link/4726773</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者：&lt;/strong&gt;&amp;nbsp;Flood Sung，CSDN博主，人工智能方向研究生，专注于深度学习，增强学习与机器人的研究。&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;责编：&lt;/strong&gt;何永灿，欢迎人工智能领域技术投稿、约稿、给文章纠错，请发送邮件至&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;heyc@csdn.net&lt;/span&gt;&lt;/a&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&amp;nbsp;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本文为&lt;/strong&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;《程序员》&lt;/a&gt;原创文章，未经允许不得转载，更多精彩请&lt;a target="_blank" style="color: rgb(67, 149, 245); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;订阅2017年《程序员》&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2016年AlphaGo计算机围棋系统战胜顶尖职业棋手李世石，引起了全世界的广泛关注，人工智能进一步被推到了风口浪尖。而其中的深度增强学习算法是AlphaGo的核心，也是通用人工智能的实现关键。本文将带领大家了解深度增强学习的前沿算法思想，领略人工智能的核心奥秘。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习（Deep Reinforcement Learning，DRL）是近两年来深度学习领域迅猛发展起来的一个分支，目的是解决计算机从感知到决策控制的问题，从而实现通用人工智能。以Google DeepMind公司为首，基于深度增强学习的算法已经在视频、游戏、围棋、机器人等领域取得了突破性进展。2016年Google DeepMind推出的AlphaGo围棋系统，使用蒙特卡洛树搜索和深度学习结合的方式使计算机的围棋水平达到甚至超过了顶尖职业棋手的水平，引起了世界性的轰动。AlphaGo的核心就在于使用了深度增强学习算法，使得计算机能够通过自对弈的方式不断提升棋力。深度增强学习算法由于能够基于深度神经网络实现从感知到决策控制的端到端自学习，具有非常广阔的应用前景，它的发展也将进一步推动人工智能的革命。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习与通用人工智能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;当前深度学习已经在计算机视觉、语音识别、自然语言理解等领域取得了突破，相关技术也已经逐渐成熟并落地进入到我们的生活当中。然而，这些领域研究的问题都只是为了让计算机能够感知和理解这个世界。以此同时，决策控制才是人工智能领域要解决的核心问题。计算机视觉等感知问题要求输入感知信息到计算机，计算机能够理解，而决策控制问题则要求计算机能够根据感知信息进行判断思考，输出正确的行为。要使计算机能够很好地决策控制，要求计算机具备一定的“思考”能力，使计算机能够通过学习来掌握解决各种问题的能力，而这正是通用人工智能（Artificial General Intelligence，AGI）（即强人工智能）的研究目标。通用人工智能是要创造出一种无需人工编程自己学会解决各种问题的智能体，最终目标是实现类人级别甚至超人级别的智能。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;通用人工智能的基本框架即是增强学习（Reinforcement Learning，RL）的框架，如图1所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235001MF4Zrp.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图1 通用人工智能基本框架&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;智能体的行为都可以归结为与世界的交互。智能体观察这个世界，然后根据观察及自身的状态输出动作，这个世界会因此而发生改变，从而形成回馈返回给智能体。所以核心问题就是如何构建出这样一个能够与世界交互的智能体。深度增强学习将深度学习（Deep Learning）和增强学习（Reinforcement Learning）结合起来，深度学习用来提供学习的机制，而增强学习为深度学习提供学习的目标。这使得深度增强学习具备构建出复杂智能体的潜力，也因此，AlphaGo的第一作者David Silver认为深度增强学习等价于通用人工智能DRL=DL+RL=Universal AI。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习的Actor-Critic框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;目前深度增强学习的算法都可以包含在Actor-Critic框架下，如图2所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235002PI72us.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图2 Actor-Critic框架&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;把深度增强学习的算法认为是智能体的大脑，那么这个大脑包含了两个部分：Actor行动模块和Critic评判模块。其中Actor行动模块是大脑的执行机构，输入外部的状态s，然后输出动作a。而Critic评判模块则可认为是大脑的价值观，根据历史信息及回馈r进行自我调整，然后影响整个Actor行动模块。这种Actor-Critic的方法非常类似于人类自身的行为方式。我们人类也是在自身价值观和本能的指导下进行行为，并且价值观受经验的影响不断改变。在Actor-Critic框架下，Google DeepMind相继提出了DQN，A3C和UNREAL等深度增强学习算法，其中UNREAL是目前最好的深度增强学习算法。下面我们将介绍这三个算法的基本思想。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN（Deep Q Network）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN是Google DeepMind于2013年提出的第一个深度增强学习算法，并在2015年进一步完善，发表在2015年的《Nature》上。DeepMind将DQN应用在计算机玩Atari游戏上，不同于以往的做法，仅使用视频信息作为输入，和人类玩游戏一样。在这种情况下，基于DQN的程序在多种Atari游戏上取得了超越人类水平的成绩。这是深度增强学习概念的第一次提出，并由此开始快速发展。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN算法面向相对简单的离散输出，即输出的动作仅有少数有限的个数。在这种情况下，DQN算法在Actor-Critic框架下仅使用Critic评判模块，而没有使用Actor行动模块，因为使用Critic评判模块即可以选择并执行最优的动作，如图3所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235002UNc8zy.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图3 DQN基本结构&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在DQN中，用一个价值网络（Value Network）来表示Critic评判模块，价值网络输出Q(s,a)，即状态s和动作a下的价值。基于价值网络，我们可以遍历某个状态s下各种动作的价值，然后选择价值最大的一个动作输出。所以，主要问题是如何通过深度学习的随机梯度下降方法来更新价值网络。为了使用梯度下降方法，我们必须为价值网络构造一个损失函数。由于价值网络输出的是Q值，因此如果能够构造出一个目标Q值，就能够通过平方差MSE的方式来得到损失函数。但对于价值网络来说，输入的信息仅有状态s，动作a及回馈r。因此，如何计算出目标Q值是DQN算法的关键，而这正是增强学习能够解决的问题。基于增强学习的Bellman公式，我们能够基于输入信息特别是回馈r构造出目标Q值，从而得到损失函数，对价值网络进行更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003UMb7yx.jpg"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图4 UNREAL算法框图&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在实际使用中，价值网络可以根据具体的问题构造不同的网络形式。比如Atari有些输入的是图像信息，就可以构造一个卷积神经网络（Convolutional Neural Network，CNN）来作为价值网络。为了增加对历史信息的记忆，还可以在CNN之后加上LSTM长短记忆模型。在DQN训练的时候，先采集历史的输入输出信息作为样本放在经验池（Replay Memory）里面，然后通过随机采样的方式采样多个样本进行minibatch的随机梯度下降训练。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN算法作为第一个深度增强学习算法，仅使用价值网络，训练效率较低，需要大量的时间训练，并且只能面向低维的离散控制问题，通用性有限。但由于DQN算法第一次成功结合了深度学习和增强学习，解决了高维数据输入问题，并且在Atari游戏上取得突破，具有开创性的意义。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C（Asynchronous Advantage Actor Critic）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法是2015年DeepMind提出的相比DQN更好更通用的一个深度增强学习算法。A3C算法完全使用了Actor-Critic框架，并且引入了异步训练的思想，在提升性能的同时也大大加快了训练速度。A3C算法的基本思想，即Actor-Critic的基本思想，是对输出的动作进行好坏评估，如果动作被认为是好的，那么就调整行动网络（Actor Network）使该动作出现的可能性增加。反之如果动作被认为是坏的，则使该动作出现的可能性减少。通过反复的训练，不断调整行动网络找到最优的动作。AlphaGo的自我学习也是基于这样的思想。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;基于Actor-Critic的基本思想，Critic评判模块的价值网络（Value Network）可以采用DQN的方法进行更新，那么如何构造行动网络的损失函数，实现对网络的训练是算法的关键。一般行动网络的输出有两种方式：一种是概率的方式，即输出某一个动作的概率；另一种是确定性的方式，即输出具体的某一个动作。A3C采用的是概率输出的方式。因此，我们从Critic评判模块，即价值网络中得到对动作的好坏评价，然后用输出动作的对数似然值（Log Likelihood）乘以动作的评价，作为行动网络的损失函数。行动网络的目标是最大化这个损失函数，即如果动作评价为正，就增加其概率，反之减少，符合Actor-Critic的基本思想。有了行动网络的损失函数，也就可以通过随机梯度下降的方式进行参数的更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;为了使算法取得更好的效果，如何准确地评价动作的好坏也是算法的关键。A3C在动作价值Q的基础上，使用优势A（Advantage）作为动作的评价。优势A是指动作a在状态s下相对其他动作的优势。假设状态s的价值是V，那么A=Q-V。这里的动作价值Q是指状态s下a的价值，与V的含义不同。直观上看，采用优势A来评估动作更为准确。举个例子来说，假设在状态s下，动作1的Q值是3，动作2的Q值是1，状态s的价值V是2。如果使用Q作为动作的评价，那么动作1和2的出现概率都会增加，但是实际上我们知道唯一要增加出现概率的是动作1。这时如果采用优势A，我们可以计算出动作1的优势是1，动作2的优势是-1。基于优势A来更新网络，动作1的出现概率增加，动作2的出现概率减少，更符合我们的目标。因此，A3C算法调整了Critic评判模块的价值网络，让其输出V值，然后使用多步的历史信息来计算动作的Q值，从而得到优势A，进而计算出损失函数，对行动网络进行更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法为了提升训练速度还采用异步训练的思想，即同时启动多个训练环境，同时进行采样，并直接使用采集的样本进行训练。相比DQN算法，A3C算法不需要使用经验池来存储历史样本，节约了存储空间，并且采用异步训练，大大加倍了数据的采样速度，也因此提升了训练速度。与此同时，采用多个不同训练环境采集样本，样本的分布更加均匀，更有利于神经网络的训练。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法在以上多个环节上做出了改进，使得其在Atari游戏上的平均成绩是DQN算法的4倍，取得了巨大的提升，并且训练速度也成倍的增加。因此，A3C算法取代了DQN成为了更好的深度增强学习算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL（UNsupervised REinforcement and Auxiliary Learning）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL算法是2016年11月DeepMind提出的最新深度增强学习算法，在A3C算法的基础上对性能和速度进行进一步提升，在Atari游戏上取得了人类水平8.8倍的成绩，并且在第一视角的3D迷宫环境Labyrinth上也达到了87%的人类水平，成为当前最好的深度增强学习算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法充分使用了Actor-Critic框架，是一套完善的算法，因此，我们很难通过改变算法框架的方式来对算法做出改进。UNREAL算法在A3C算法的基础上，另辟蹊径，通过在训练A3C的同时，训练多个辅助任务来改进算法。UNREAL算法的基本思想来源于我们人类的学习方式。人要完成一个任务，往往通过完成其他多种辅助任务来实现。比如说我们要收集邮票，可以自己去买，也可以让朋友帮忙获取，或者和其他人交换的方式得到。UNREAL算法通过设置多个辅助任务，同时训练同一个A3C网络，从而加快学习的速度，并进一步提升性能。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在UNREAL算法中，包含了两类辅助任务：第一种是控制任务，包括像素控制和隐藏层激活控制。像素控制是指控制输入图像的变化，使得图像的变化最大。因为图像变化大往往说明智能体在执行重要的环节，通过控制图像的变化能够改善动作的选择。隐藏层激活控制则是控制隐藏层神经元的激活数量，目的是使其激活量越多越好。这类似于人类大脑细胞的开发，神经元使用得越多，可能越聪明，也因此能够做出更好的选择。另一种辅助任务是回馈预测任务。因为在很多场景下，回馈r并不是每时每刻都能获取的（比如在Labyrinth中吃到苹果才能得1分），所以让神经网络能够预测回馈值会使其具有更好的表达能力。在UNREAL算法中，使用历史连续多帧的图像输入来预测下一步的回馈值作为训练目标。除了以上两种回馈预测任务外，UNREAL算法还使用历史信息额外增加了价值迭代任务，即DQN的更新方法，进一步提升算法的训练速度。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL算法本质上是通过训练多个面向同一个最终目标的任务来提升行动网络的表达能力和水平，符合人类的学习方式。值得注意的是，UNREAL虽然增加了训练任务，但并没有通过其他途径获取别的样本，是在保持原有样本数据不变的情况下对算法进行提升，这使得UNREAL算法被认为是一种无监督学习的方法。基于UNREAL算法的思想，可以根据不同任务的特点针对性地设计辅助任务，来改进算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;小结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习经过近两年的发展，在算法层面上取得了越来越好的效果。从DQN，A3C到UNREAL，精妙的算法设计无不闪耀着人类智慧的光芒。在未来，除了算法本身的改进，深度增强学习作为能够解决从感知到决策控制的通用型学习算法，将能够在现实生活中的各种领域得到广泛的应用。AlphaGo的成功只是通用人工智能爆发的前夜。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003XmLH97.gif"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;/p&gt;&lt;section style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003voNIa8.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>十五岁生日快乐，.NET ！</title>
      <link>http://www.iwgc.cn/link/4726774</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;.NET框架（英语：.NET Framework）是由微软开发，一个致力于敏捷软件开发（Agile software development）、快速应用开发（Rapid application development）、平台无关性和网络透明化的软件开发平台。.NET是微软为2000年代对服务器和桌面型软件工程迈出的第一步。.NET包含许多有助于互联网和内部网应用迅捷开发的技术。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235005xpOKca.jpg"/&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2月13日，我们迎来了.NET的生日，这是它面世的第15个年头。2002年2月13日，第一版.NET作为Visual Studio.NET的一部分首次公开亮相，微软宣布要构建“下一代视窗服务”，并发布了Visual Studio.NET，大幅提高了生产力，这一切恍如昨日。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在2002年的时候，最开始开发者就能够通过.NET平台以健壮的方式快速构建及部署包括Windows桌面和web服务器应用在内的各类应用程序。开发者在构建分布式Windows应用上有了一个完整的管理型框架，基于web的开发者可以使用所谓的“下一代动态服务器网页”——ASP.NET，然后新的开发语言C#出现。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;多年以来，.NET及相关的生态系统以迅猛的成长速度满足了各类开发者与平台的需求。随着技术状况的变化，.NET也在发生变化，通过.NET，我们可以构建任何东西，包括跨平台web应用、云服务、移动设备应用、游戏等等，.NET的开源社区更是充满活力、生机勃勃。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Visual Studio 2017将于3月7日发布，值得一提的是，今年正好也是Visual Studio诞生20周年，.NET核心工具也即将推出1.0版本。几天前，我们与Microsoft Alumni Network组织合作，与前.NET成员还有摇滚明星一同，为.NET举办了生日晚宴。我们邀请了C#之父Anders Hejlsberg，请他分享了一些.NET开源和发布的故事，还有他的一些想法（&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; text-decoration: underline; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;视频：https://sec.ch9.ms/ch9/a518/2be8dc04-d13a-49b1-a219-09af71f8a518/HappyBDayNETAnders_high.mp4）&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;感谢大家齐心协力构建了这么优秀的软件，对计算机行业产生了如此重大的影响，也欢迎大家分享你的故事和想法。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】TensorFlow 1.0 发布，更快、更灵活、更方便开发</title>
      <link>http://www.iwgc.cn/link/4726775</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;TensorFlow 1.0 发布，更快、更灵活、更方便开发&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;在Mountain View举办的首届年度TensorFlow开发者峰会上，Google 发布了 TensorFlow 1.0，保证了 Google 的机器学习库的API稳定性。主要亮点：1.更快，TensorFlow 1.0 现在简直快到难以置信！ XLA为未来更多的性能改进奠定了基础，而现在 tensorflow.org 调整了模型以实现最大速度；2.更灵活，TensorFlow 1.0引入了一个高级API，包含tf.layers，tf.metrics和tf.losses模块；3.更便于开发，TensorFlow 1.0 保证了 Python API稳定性，可以不破坏现有的代码便能获取新功能。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;推动大数据产业发展，腾讯云与清华大学共建国家工程实验室&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，国家发展和改革委员会下发通知，由清华大学牵头承担的“大数据系统软件国家工程实验室”获批通过。腾讯云作为该实验室重点共建单位之一，将承担国家级大数据技术创新平台关键技术攻关，起草国家大数据技术规范，开展大数据应用示范等一系列工作。“大数据系统软件国家工程实验室”的主要任务是针对我国目前大数据开源创新不足等问题，围绕我国系统软件自主安全可控的迫切需求，建设大数据系统软件创新平台。腾讯云将协助清华大学开展大规模数据异构多源一体化管理，交互式异构数据分析框架、数据可视化与智能数据工程、大数据混源软件可信验证等技术的研发和工程化。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;埃森哲《银行区块链投资价值分析报告》发布&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，埃森哲发布《银行区块链投资价值分析报告》(Accenture Banking on Blockchain)。报告指出，与许多新技术一样，区块链的创新技术为银行业注入了许多兴奋和刺激。一些分析人士将其革命性的潜力与互联网相提并论。因为这种创新大幅度的提高了效率，大大降低了风险，节省了数十亿美元。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;印度物联网企业Flutura获750万美元A轮融资，提供大数据分析解决方案&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Flutura由Krishnan Raman、Derick Jose以及Srikanth Muralidhara于2012年联合创办，总部位于印度班加罗尔，是一家大数据分析解决方案提供商，致力于通过货币化机器数据提升运营效率及质量。近日，印度物联网初创公司Flutura宣布获得750万美元A轮融资，本次交易的领投方为Vertex Ventures，Lumis Partners以及早期投资机构The Hive均参与了本轮融资。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;大数据公司“量江湖”完成数千万人民币B轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;大数据公司量江湖今日宣布已经完成了数千万人民币的B轮融资，投资方为汇付创投等机构。这次融资的资金主要用于新产品研发、市场推广和品牌打造这几个方面。旗下拥有APP反作弊和微准这两款产品，主要应用在汽车、母婴、金融、房地产和移动互联网等领域。而近期，量江湖又上线了ASM（App Store Search Marketing）智投，基于苹果推出的ASM业务，为企业在App Store上推广APP提供智能工具。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;江苏政务服务网试运行 政府与第三方平台推“互联网＋政务”服务&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，江苏政务服务网已开始试运行，该网站集合了江苏所有政府部门的3.6万项在线服务、10万项便民服务和8万个办事场所和服务场馆信息。该平台与第三方平台支付宝的4.5亿实名用户完全打通，市民不需要注册和实名认证，只需用支付宝账号登录江苏政务服务网，就可以办理江苏各政府部门的业务。涉及到缴费的项目，还可以用支付宝在统一支付平台付款。4个月前，江苏省政府分别与阿里巴巴、蚂蚁金服签署战略合作协议。这是三方合作落地的第一个项目，也是全国首个完全搭建在公有云平台上的统一政务服务平台。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;物联网产业有望迎来风口&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;工信部网站近日公示了《电信网编号计划（2017版）》，其中新增了物联网网号。业内人士表示，目前物联网已从概念落实到了实际。随着4G、5G的快速发展，制定标准化的识别编码势在必行。在政策的支持下，物联网行业发展将提速。国家对物联网产业越来越重视，出台了一系列相关政策推动产业发展。未来万物互联、云计算、大数据、智能处理等都离不开“物联网”，这是信息大融合及智能化处理的基础。这对信息产业基础设施建设，以及国计民生的信息化管理都至关重要。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;大数据世界难道遗忘了非洲吗？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;随着美国硅谷开始挖掘全球的数据，人们没有忘记大数据世界是如此的复杂。特别是非洲在世界上许多数据集上呈现出一个明显的空白时，但这个差距究竟有多大？Facebook公司创始人马克•扎克伯格表示，Facebook的原始热门主题Feed几乎完全没有来自非洲的新闻来源，这意味着几乎不可能有来自非洲大陆的Facebook公司用户，除非他们被美国媒体覆盖，才会有非洲大陆的大多数事件。其余的社交媒体的情况也不是更好，Twitter也没有真正进入整个非洲大陆。这就很有问题因为定义大数据革命的“社交媒体监控”领域的大部分都是基Twitte的firehose，因此这意味着将错过非洲和中东地区的市场。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;2017年大数据发展的十大趋势以及在各行业的应用潜力&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;2016年，大数据已从前两年的预期膨胀阶段、炒作阶段转入理性发展阶段、落地应用阶段。2017年，大数据依然处于理性发展期，依然存在诸多挑战，但前景依然非常乐观。2017年大数据的发展呈现十大趋势：越来越多的企业实现数据孤岛的打通，驱动大数据发挥更强的威力；大数据已经成为企业或机构的无形资产，将成为企业参与市场竞争的新武器；大数据算法越来越智能化；大数据和人工智能深度融合；大数据和人工智能深度融合；工业大数据成为工业互联网发展的重要引擎；工业大数据成为工业互联网发展的重要引擎；大数据人才需求增多，越来越多的机构参与到大数据人才培育中。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;本期周刊：&lt;/span&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;【Data &amp;amp; Cloud周刊】第4期 | SDCC 2017上海站震撼来袭&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;，立即&lt;/span&gt;&lt;span style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;订阅&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;：http://letter.csdn.net/news/newsletter/index/27&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235007AtSNfd.jpg"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>SDCC 2017·上海站之互联网应用架构实战峰会讲师和议题全曝光</title>
      <link>http://www.iwgc.cn/link/4712296</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2017年3月17-19日，SDCC 2017·上海站震撼来袭，特开设了三大主题会场，分别是互联网运维开发实战峰会、数据库核心技术与应用实战峰会和互联网应用架构实战峰会，为期三天，为软件开发者带去共24场的技术盛宴。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;其中，阿里、腾讯、百度、苏宁、京东等企业的顶级运维大牛带来360度无死角的运维盛宴，大规模分布式系统运维、自动化运维、云端运维、游戏运维、海量容器运维等等热点技术话题一网打尽。同时，集结业界前沿领域的数据库专家，业界巨匠，触手可及，围绕MySQL、PostgreSQL、Redis、Oracle等数据库，共同探讨性能调优、数据库自动运维、云端数据库、新一代数据平台等领域的前瞻性话题；深度剖析行业痛点，探秘数据库核心技术。SDCC也汇聚互联网应用架构实践的焦点议题，海量并发环境下的高可用/高并发/高性能系统架构设计、电商架构、消息队列、分布式架构、架构演讲、移动APP性能优化、分发系统的构建、微服务等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;日前，大会主委会也对外公布了SDCC 2017·上海站之互联网应用架构实战峰会讲师和议题，详情如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;出品人&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;张立刚 1号店技术部-电商云平台技术总监&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2012年7月加入1号店，先后担任过1号店订单、库存、拆单、运费、第三方平台订单等电商核心交易系统负责人，致力于电商平台产品化、智能化、云化。期间主导并参与了1号店SOA治理、订单Service化、订单水平拆库&amp;amp;去Oracle迁Mysql、无线性能优化及拆pool、运费体系重构、库存准确率优化等重要项目，负责1号店与Tmall、百度、当当、B2B2C平台等第三方平台订单业务，从0开始建立了1号店完善的订单监控、预警、履单体系。 对高可用高并发高性能的电商核心交易系统及SOA架构有深入的理解和实践，熟悉电商核心产品、订单、库存等业务，将以OMS为核心规划构建新一代电子商务云平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;讲师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;者文明 京东运营研发部系统架构部系统架构师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;者文明，中科院硕士，清华大学精仪系学士，14年电子商务/企业应用领域研发、架构经验，涉及电商后端物流系统架构，实时大数据解决方案。2012年加入京东，主要负责仓储、配送、售后客服等系统架构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：京东物流系统高可用架构实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;大多电商物流系统均为OLTP系统，同时具有海量数据和高并发特性。如何在海量数据和高并发的应用场景中构建一个高可用的OLTP系统？本专题聚焦电商物流系统高可用架构设计与实践，旨在介绍京东物流系统在数据库和Web端的高可用架构设计思路、应用场景及案例分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. OLTP系统面对海量数据和高并发场景时如何提升系统的可用性；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 电商物流系统高可用架构设计和实战经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;孙子荀 腾讯科技&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;嘉宾简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;孙子荀，09年毕业后从事内核和分布式系统的开发工作，11年在百度从事过高性能计算方面的工作。12年加入腾讯从事腾讯云加速的带宽调度系统的设计研发，获得公司多个业务奖项。14年开始手Q公众号项目，负责构建公众号平台和内容平台。现在从事个性化阅读内容方面的处理和挖掘工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：内容分发的系统建设&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲概要： &lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;17年是内容生态分发的爆发年。分享主要介绍在内容分发领域的一些工程和算法技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 内容分发系统的框架；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 内容的建模和质量控制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 内容推荐技术PUSH和PULL模式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 如何构建一个内容分发引擎，存储层的技术选型和挑战；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 多种算法策略模型如何与并发处理相互结合；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 关于假新闻和低俗内容的控制技术手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李雄峰 爱奇艺公司支付中心技术经理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt; 10多年企业应用和互联网软件架构设计经验，涉及电子商务、电子政务、风控、支付等领域。现供职于爱奇艺公司，先后负责大数据仓库系统和支付系统的软件架构设计工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：支付系统微服务化实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;互联网公司的快速发展往往也伴随着软件系统的迅速演化。在建设初期，由于基础设施和技术能力限制，大部分系统倾向采用单体应用。但随着业务的发展和复杂度的增加，系统的可维护性和性能都很难满足线上需求。本次演讲以支付系统为例，介绍如何对单体应用进行拆分，落地实施微服务架构，在确保线上业务稳定运行的同时推动架构可控地演化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;以核心支付系统的改造为例，介绍：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 如何评估采用微服务架构来改进现有系统的必要性和收益；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 微服务架构改进的时机选择和路线图；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 微服务基础设施建设；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. SSH架构系统的微服务化改进最佳实践。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李天晨 58到家技术中心架构部高级Java工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt; 58到家后端架构部团队核心成员，有着丰富的架构经验。目前负责到家自研的消息队列服务DMQ(Daojia Message Queue)、分布式调用链跟踪系统DTracker、通用消息平台等底层平台服务，在中间件架构设计上有自己的独到见解。本质程序员一枚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：58到家电商业务场景下的消息队列架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;介绍适应58到家电商业务场景下的消息队列架构设计，根据真实的业务场景，各业务线开发痛点，合理选型技术架构，满足业务快速迭代发展。详细阐述对于电商交易支付类场景下消息100%到达率的架构设计，以及广播消息、消费者业务ack、延迟消息、消息有效期这些业务场景的功能实现，最后是对于将来顺序消息、事务消息功能的规划。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;电商业务的消息队列架构设计，满足消息100%可达，支持广播消息、消费者业务ack、延迟消息、消息有效期的业务场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李林锋 华为软件API开放平台架构师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;李林锋，2008年进入华为公司从事电信软件的设计和开发工作，有多年Java NIO、平台中间件设计和开发经验，精通Netty、Mina、分布式服务框架、云计算等，目前从事云平台和开放API相关的架构和设计工作，著有《分布式服务框架原理与实践》、《Netty权威指南》。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：微服务故障隔离技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;微服务分布式部署之后，涉及到序列化和反序列化、集群路由、网络读写等操作，故障在所难免。另外，在微服务中，可能会调用第三方服务，进行数据库操作、磁盘I/O操作等，这些对第三方服务的依赖，也会增加故障级联和扩散的风险。在实际项目中如何规避这些风险、如何更加有效的管理第三方依赖带来的可靠性奉献？本文将给出答案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;学习到微服务故障隔离的关键技术：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. RPC通信层的故障隔离；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 第三方依赖故障隔离；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 基于线程池的微服务优先级调度；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. 熔断机制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;5. 流量控制：静态、动态流控和并发控制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;6. 优雅降级、异步回调机制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;陈清渠 携程基础业务部高级研发经理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;陈清渠，毕业于武汉大学，多年软件及互联网行业开发经验。14年加入携程，先后负责了订单查询服务重构，实时用户行为服务搭建等项目的架构和研发工作，目前负责携程订单中心团队。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：实时用户行为服务系统架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;用户实时行为对接了携程近20条业务线用户访问日志，通过kafka+storm的组合，每天在处理20亿+埋点数据的基础上保证秒级落地可查，支撑了多个产品，目前日均服务8千万以上请求。本次分享主要介绍我们在海量数据和高并发双重挑战下，如何从架构上和实现上保证实时性，稳定性和性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 了解实时计算的系统构成和架构；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 打造高性能服务的经验分享；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 从多个层面提高系统可用性经验分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李嘉璇 百度研发工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;李嘉璇，百度研发工程师，有处理图像、社交文本数据情感分析的经验，参与过基于深度学习的自动驾驶二维感知系统hackathon竞赛，对研究深度学习框架TensorFlow的架构、源码分析及在不同领域的应用有浓厚兴趣。目前一本《TensorFlow入门到精通》正在出版，4月上市。独立制作和运营的竞品分析网站——追点网（www.tdrop.top），也是国内基于深度学习做产品的社交评论和新闻的竞品分析和舆情报告的网站。个人博客：blog.greatgeekgrace.com，活跃于国内各大技术社区，知乎编程问题回答者，热爱技术，热爱分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：TensorFlow在人脸年龄、情绪、性别、关键点识别系统中的架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;结合目前最流行的TensorFlow深度学习框架，讲解如何对人脸识别、人脸情绪识别、人像笑脸、人脸关键点等系统的架构设计。并结合人脸的特征提取，建立特征工程；最后应用在安防、支付等领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 帮助听众了解人脸识别系统的架构和组成；并打造高性能的人脸识别系统。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 百度人脸在人脸识别系统中的技术实战、特征提取以及坑是如何填的；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 理解人脸及图像相关的一些特征，及特征工程经验；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. 目前关于深度学习架构设计的资料，中文资料翻译的有限，社区非常活跃，但是总是呈现出会着恒会，不会者始终找不到入门方法的状态。本次希望分享深度学习的架构设计和经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;高亮亮 饿了么移动技术部iOS工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;高亮亮，饿了么移动技术部高级iOS工程师，负责饿了么商家版iOS App开发。对iOS架构和系统底层有深入研究，擅长移动性能分析，trouble shooting、iOS逆向等重难点工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：新瓶旧酒——换个角度提升 APP 性能和质量的实践之路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;结合当下火热的移动性能话题和 APM，围绕移动应用性能质量等方向，谈谈饿了么商家版如何避开传统解决方案，将Reflow &amp;amp; repaint，throttle &amp;amp; debounce、优雅降级等方案在客户端实现。通过类比借鉴，作为一个全新角度来思考质量提升问题，并灵活的运用到移动端，从而提升应用的性能，稳定性和可用性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 针对一线开发人员，贴合实际落地，由浅入深，通俗易懂;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 通过借鉴其他领域概念，打破传统，提供非常规解决方案和思路;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 普及其他领域概念，开拓思路，举一反三，挖掘更深层次的运用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;更多精彩主题和议题信息敬请关注SDCC 2017·上海站官网，购票和注册地址点击底部【&lt;span style="font-size: 14px; color: rgb(171, 25, 66);"&gt;阅读原文&lt;/span&gt;】，截止3月5日是最后的八折阶段。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>深度学习实践：使用Tensorflow实现快速风格迁移</title>
      <link>http://www.iwgc.cn/link/4712297</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&amp;nbsp;&lt;img src="http://wxrss.b0.upaiyun.com/148715137181qlNL.png"/&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;一、风格迁移简介&lt;/h2&gt;&lt;p&gt;风格迁移（Style Transfer）是深度学习众多应用中非常有趣的一种，如图，我们可以使用这种方法把一张图片的风格“迁移”到另一张图片上：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151371GyXTlj.jpg"/&gt;然而，原始的风格迁移（论文地址：&lt;a class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;arxiv.org/pdf/1508.0657&lt;/span&gt;&lt;span class="invisible"&gt;6v2.pdf&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;）的速度是非常慢的。在GPU上，生成一张图片都需要10分钟左右，而如果只使用CPU而不使用GPU运行程序，甚至需要几个小时。这个时间还会随着图片尺寸的增大而迅速增大。&lt;/p&gt;&lt;p&gt;这其中的原因在于，在原始的风格迁移过程中，&lt;strong&gt;把生成图片的过程当做一个“训练”的过程。&lt;/strong&gt;每生成一张图片，都相当于要训练一次模型，这中间可能会迭代几百几千次。如果你了解过一点机器学习的知识，就会知道，从头训练一个模型要比执行一个已经训练好的模型要费时太多。而这也正是原始的风格迁移速度缓慢的原因。&lt;/p&gt;&lt;h2&gt;二、快速风格迁移简介&lt;/h2&gt;&lt;p&gt;那有没有一种方法，可以不把生成图片当做一个“训练”的过程，而当成一个“执行”的过程呢？答案是肯定的。这就这篇快速风格迁移（fast neural style transfer）：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;Perceptual Losses for Real-Time Style Transfer and Super-Resolution&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;快速风格迁移的网络结构包含两个部分。一个是“生成网络”（原文中为Transformation Network），一个是“损失网络”（Loss Network）。生成网络接收一个图片当做输入，然后输出也是一张图片（即风格迁移后的结果）。如下图，左侧是生成网络，右侧为损失网络：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151371WOd9Bz.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;训练阶段：&lt;/strong&gt;首先选定一张风格图片。训练的目标是让生成网络可以有效生成图片。目标由损失网络定义。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;执行阶段：&lt;/strong&gt;给定一张图片，将其输入生成网络，输出这张图片风格迁移后的结果。&lt;/p&gt;&lt;p&gt;我们可以发现，&lt;strong&gt;在模型的“执行”阶段我们就可以完成风格图片的生成。&lt;/strong&gt;因此生成一张图片的速度非常块，在GPU上一般小于1秒，在CPU上运行也只需要几秒的时间。&lt;/p&gt;&lt;h2&gt;三、快速风格迁移的Tensorflow实现&lt;/h2&gt;&lt;p&gt;话不多说，直接上我的代码的Github地址：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;hzy46/fast-neural-style-tensorflow&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;还有变换效果如下。&lt;/p&gt;&lt;p&gt;原始图片：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372XPfaCA.jpg"/&gt;风格迁移后的图片：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372zsRMec.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372ohGB31.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373BuTOge.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373CvUPhf.jpg"/&gt;&lt;strong&gt;以上图片在GPU(Titan Black)下生成约需要0.8s，CPU（i7-6850K）下生成用时约2.9s。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;关于快速风格迁移，其实之前在Github上已经有了Tensorflow的两个实现：&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;junrushao1994/fast-neural-style.tf&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;OlavHN/fast-neural-style&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是第一个项目只提供了几个训练好的模型，没有提供训练的代码，也没有提供具体的网络结构。所以实际用处不大。&lt;/p&gt;&lt;p&gt;而第二个模型做了完整的实现，可以进行模型的训练，但是训练出来的效果不是很好，在作者&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;自己的博客&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;中，给出了一个范例，可以看到生成的图片有很多噪声点：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373unMI98.jpg"/&gt;&lt;/p&gt;&lt;p&gt;我的项目就是在&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;OlavHN/fast-neural-style&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;的基础上做了很多修改和调整。&lt;/p&gt;&lt;h2&gt;四、一些实现细节&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、与Tensorflow Slim结合&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在原来的实现中，作者使用了VGG19模型当做损失网络。而在原始的论文中，使用的是VGG16。为了保持一致性，我使用了Tensorflow Slim（地址：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;tensorflow/models&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;）对损失网络重新进行了包装。&lt;/p&gt;&lt;p&gt;Slim是Tensorflow的一个扩展库，提供了很多与图像分类有关的函数，已经很多已经训练好的模型（如VGG、Inception系列以及ResNet系列）。&lt;/p&gt;&lt;p&gt;下图是Slim支持的模型：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374YQfbDB.jpg"/&gt;使用Slim替换掉原先的网络之后，&lt;strong&gt;在损失函数中，我们不仅可以使用VGG16，也可以方便地使用VGG19、ResNet等其他网络结构&lt;/strong&gt;。具体的实现请参考源码。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2、改进转置卷积的两个Trick&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;原先我们需要使用网络生成图像的时候，一般都是采用转置卷积直接对图像进行上采样。&lt;/p&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;这篇文章&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;指出了转置卷积的一些问题，认为转置卷积由于不合理的重合，使得生成的图片总是有“棋盘状的噪声点”，它提出使用先将图片放大，再做卷积的方式来代替转置卷积做上采样，可以提高生成图片的质量，下图为两种方法的对比：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374f8xsUS.jpg"/&gt;&lt;/p&gt;&lt;p&gt;对应的Tensorflow的实现：&lt;/p&gt;&lt;pre&gt;&lt;code class="language-python"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;resize_conv2d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable_scope&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'conv_transpose'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &amp;nbsp;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_shape&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_shape&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;new_height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;new_width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;x_resized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new_height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_width&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResizeMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NEAREST_NEIGHBOR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Variable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncated_normal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stddev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'weight'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conv2d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_resized&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上为第一个Trick。&lt;/p&gt;&lt;p&gt;第二个Trick是文章 &lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;Instance Normalization: The Missing Ingredient for Fast Stylization&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 中提到的，用 Instance Normalization来代替通常的Batch Normalization，可以改善风格迁移的质量。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3、注意使用Optimizer和Saver&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这是关于Tensorflow实现的一个小细节。&lt;/p&gt;&lt;p&gt;在Tensorflow中，Optimizer和Saver是默认去训练、保存模型中的所有变量的。但在这个项目中，整个网络分为生成网络和损失网络两部分。我们的目标是训练好生成网络，因此只需要去训练、保存&lt;strong&gt;生成网络中的变量&lt;/strong&gt;。在构造Optimizer和Saver的时候，要注意只传入生成网络中的变量。&lt;/p&gt;&lt;p&gt;找出需要训练的变量，传递给Optimizer：&lt;/p&gt;&lt;pre&gt;&lt;code class="language-python"&gt;&lt;span class="n"&gt;variable_to_train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trainable_variables&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FLAGS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loss_model&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;variable_to_train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;train_op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AdamOptimizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1e-3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;global_step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;global_step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;variable_to_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;五、总结&lt;/h2&gt;&lt;p&gt;总之是做了一个还算挺有趣的项目。代码不是特别多，如果只是用训练好的模型生成图片的话，使用CPU也可以在几秒内运行出结果，不需要去搭建GPU环境。建议有兴趣的同学可以自己玩一下。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374b4tpQP.jpg"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】谷歌Cloud Spanner Beta测试启动，阿里云参与共建国家工程实验室</title>
      <link>http://www.iwgc.cn/link/4712298</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;阿里云参与共建国家工程实验室 人工智能继续深入工业制造领域&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，国家发改委公布大数据国家工程实验室名单，由阿里云参与的“工业大数据应用技术国家工程实验室”和“大数据系统软件国家工程实验室”均获批复认定，分别是工业大数据应用及大数据系统软件领域的唯一国家级工程实验室。前者由航天云网旗下北京航天数据股份有限公司和阿里云联合共建。后者由清华大学和北京理工大学牵头，阿里云支撑实验室研发全生命周期大数据系统软件及其开源创新平台体系。国家工程实验室承担着国家科技创新的重要任务，此次共有19个国家工程实验室获批，其中大数据领域11个，互联网+领域8个，寄托着在该领域实现世界一流创新的希望。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;甲骨文CEO：亚马逊云服务已过时 我们更先进&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;据CNBC报道，甲骨文再次对亚马逊在云计算领域的优势地位发出挑战，称自己正在获取更大市场份额。本周二，甲骨文首席执行官马克·赫德在于旧金山举行的高盛科技与互联网会议上表示，“坦率讲，亚马逊的基础设施已老旧过时。我们的更先进。”赫德称甲骨文传统数据库用户不会转投亚马逊的服务。他特别提到AWS数据库产品Aurora和Redshift，企业使用这些软件管理它们在亚马逊云中的数据。赫德估计，“极少”公司会从内部部署的数据库（他提到SQL）转移到AWS，部分原因是因为数据将被亚马逊捕获。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;a target="_blank" style="line-height: 1.6; box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none;"&gt;&lt;span style="font-size: 14px;"&gt;获3000万Pre-A轮融资，默安科技要用“欺骗式防御”主动出击黑客&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;2月15日，新一代云计算安全企业默安科技宣布获得3000万元Pre-A轮融资。本次融资由元璟资本领投，真格基金、盈动资本跟投。据悉，融资将用于拓展云计算安全、业务安全等新领域，以及提升公司市场和服务能力。默安科技CEO聂万泉表示融资后将进一步加大新型云计算安全产品的研发，更好地满足客户需要。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;英国最大数据中心KAO Data Campus获3300万英镑融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，英国最大的数据中心KAO Data Campus宣布获得了由专注于数据中心行业的知名风头机构Downing LLP 和 Goldacre Ventures共同领投的新一轮风险投资，金额达3300万英镑。据了解，本轮所获融资KAO Data Campus将用于建设最新数据分中心，预计该中心将于今年4月建设完成，并于年底正式启用。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;英国云计算服务商Timico完成 6231 万美元融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，总部位于英国的云计算服务供应商Timico宣布完成了新一轮的股权投资，投资金额达5000万英镑(约合6231万美元)，本轮的投资方为本土知名投资机构 Lyceum Capital。据了解，Timico公司成立于2004年，除在诺丁汉郡纽瓦克的总部之外，还分别在伦敦和沃金汉两地设有办事处，主要为中端市场的企业客户提供更多的云计算相关的技术支持。本轮融资完成之后，公司将利用该笔资金进一步提升其技术能力。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;谷歌Cloud Spanner云端数据库服务Beta测试启动&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;谷歌今日宣布了其Cloud Spanner云端数据库服务的Beta测试启动，Cloud Spanner是一个云端的全球分布式数据库服务，能够为任务集中形应用服务。与Bigtable, Cloud SQL和Cloud Datastore这些谷歌云端服务不同，Cloud Spanner既能够提供传统的关系数据库服务，又能够提供NoSQL服务，而且具有伸缩易用性和保证事务一致性。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;从数据服务入手，“网红城堡”获2000万元天使轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;借助大数据分析切入网红服务市场的“网红城堡”已于去年12月获得来自天善资本与GGV的天使轮融资，金额 2000 万人民币。网红城堡”搭建了一套通过微博吸引力、微博持久力、电商系数等维度衡量网红微博表现力的数据模型。同时，通过任务系统、在线课程、评测工具、数据追踪等功能为网红提供基于数据驱动的定位、培训、运营推广、供应链对接合作等业务。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;关于大数据和隐私的“辩论”才刚刚开始&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;多年来，隐私和大数据之间的关系已经变得非常敏感，随着新兴技术产生大量数据，关于两者之间“辩论”才刚刚开始。日常生活中数据生成设备的数量不断增长，因此关于应将数据公开，以及何时应将个人数据视为私有的争论也在不断增加。SAP国家安全服务公司总裁兼首席执行官Mark Testoni说，“我们拥有所有信息，而且大部分情况下，我们还没有真正决定什么是私有或公有领域。”数据公开可以带来很多便利，但同时也存在一些安全问题。在接下来的几年里，这些问题将尤为突出。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;谷歌公司将在2017年继续扩大数据中心支出&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前据悉，谷歌公司的2016年资本支出与2015年比相比有所增长，主要是增加了建设数据中心的投资，而2017年谷歌公司的基础设施支出有望再上新高。谷歌公司2016年的资本支出约为109亿美元，而2015年为99亿美元，增长10％。并非所有的谷歌公司资本支出都用于数据中心建设与运营上，但却是大部分资金。在谷歌公司第四季度的财报电话会议上，其首席财务官RuthPorat表示，第四季度的资本支出反映了在“生产设备，设施和数据中心建设”的投资。资本支出达到峰值也符合谷歌公司去年3月公布的数据中心的投资情况，以支持其企业云服务，这一业务的增长已成为Google公司的首要任务，因为其计划赶超云计算行业巨头亚马逊和微软公司。&lt;/span&gt;&lt;/p&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="box-sizing: border-box; font-weight: 700; font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151376nfEA1z.jpg"/&gt;&lt;/center&gt;&lt;blockquote style="box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51);"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>使用 Server-Side Swift 开发 RESTful API</title>
      <link>http://www.iwgc.cn/link/4697106</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" margin-top: 1.2em; margin-bottom: 1.2em; padding-right: 1em; padding-left: 1em; max-width: 100%; border-left-width: 4px; border-left-color: rgb(221, 221, 221) ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p&gt;作者简介： 何轶琛，去哪儿网 iOS 开发工程师，四年多 iOS 应用开发经验，在去哪儿网实践了 Realm、Cocoapods、React Native 等一些好用、有用的技术，目前主要精力在 Swift 上。&lt;/p&gt;&lt;p&gt;责编：唐小引，技术之路，共同进步。欢迎技术投稿、给文章纠错，请发送邮件至tangxy@csdn.net。&lt;/p&gt;&lt;p&gt;声明： 本文为《程序员》原创文章，未经允许请勿转载，更多精彩文章请订阅2017 年《程序员》。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;【导语】Swift 自发布以来就备受众多 Apple 开发者关注，但由于 API 尚不稳定，系统没有内置 Framework 导致 App 包增大等问题，使得线上主力使用的公司还很少，不少客户端开发者都还没有机会使用 Swift 进行开发。等到 2015 年 12 月 Swift 开源并正式支持 Linux 系统，广大 Apple 开发者迎来了更广泛的开发场景，可以用它来进行服务端开发。不到一年时间各种 Server-Side Swift Web Framework 相继问世，其中以 Kitura、Perfect、Vapor、Zewo 最为成熟。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;文章正式开始前，我们先对当前几款主流框架进行了解与对比。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Kitura 是 IBM 推出的框架，使用 IBM Cloud Tools for Swift 管理组件依赖，并支持部署代码到 IBM 的云服务 Bluemix。另外还有一个在线 Swift 编码网站，可以看作是线上 GUI 版本的 Swift REPL，开发者可以直接在 Web 上编写代码并查看输出。Kitura 整个产品从代码编写到部署全部包揽，提供了完整的生态环境。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Perfect 拥有 GitHub 上最多的 Star，各种功能组件和数据库连接工具也最为齐全。近期推出的 Perfect Assistant 是运行在 macOS 上的管理工具，同样支持组件依赖管理，自动化代码部署（支持 AWS、Azure），并通过调用本地 Docker 的方式实现了在 macOS 上编译 Linux 产物的功能。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Vapor 以其友好的文档和 Pure Swift 代码实现著称，其 HTTP Parser 是使用 Swift 编写实现，而不像 Kitura 和 Perfect 是用 CHTTPParser 封装，这对最终的服务性能有很大影响。Vapor 还开发了命令行工具对 SPM 进行封装，好处是开发体验更好，但提高了学习成本。另外 Vapor 比较早就做了 ORM 工具 Fluent，整体感觉十分技术范、小清新。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Zewo 是一系列开源组件的集合平台，特点是使用 libmill 实现了类似 Go 的协程功能，模块化的设计也不同于其他的框架。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这些框架在各具特色的前提下都有高性能、易扩展等优点。正好部门内部有一个信息管理平台项目，需求很简单，只要有基本的增删改查就行，于是不用麻烦后端同学排期，可以自己来开发，也算是提前实践 Swift，积累经验。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;正式开发是在 2016 年 8 月，彼时 Swift 3 尚未发布，Beta 版本的 Toolchain 每周都在更新，框架也在积极跟进发布支持最新版本的 Toolchain。技术选型期间我先后尝试了 Kitura、Vapor 和 Perfect。Kitura 的整套产品耦合太紧密，用起来比较重，对于轻量级小项目并不合适。Vapor 一开始用起来很愉快，但写到数据库连接工具时一直无法连接成功，再加上当时还在 Beta 版本，问题不少也被弃用。最后，使用 Perfect 完成了项目研发。接下来，本文将着重介绍如何使用 Perfect 完成一套 RESTful API 的开发，希望能够对大家进行 Swift Server 端开发有所裨益。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在编写代码前，要先了解目前开源的 Swift 项目包括了 Swift、SPM 以及配套的编译调试工具，在核心库方面有 libdispatch、Foundation、XCTest 这三个项目。在客户端开发中，Foundation 是最常用的工具库，它提供了一系列国际化、系统无关的 API。服务端项目增加 Foundation 支持可以统一开发体验和复用客户端代码，尤其是和系统无关的 API 可以大大增加可移植性，本属于 Swift 3.0 的组成部分但至今并没有开发完成，原因在于 Foundation 中用到了一些 Objective-C Runtime 的代码，而这部分代码并不在开源范围之内。于是在开发中需要用到 Foundation 库时就会碰到不少问题。&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="line-height: 1.6;"&gt;环境配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;macOS 上依然是 Xcode 搞定一切事情，Linux 上目前只支持两个版本的 Ubuntu，所以推荐使用 Docker 搭建 Swift 编译和执行环境，这样可以支持所有 Linux 系统，也方便在 Swift 快速迭代时及时更新 Toolchain。代码都用 SPM 管理，在实际使用中还是有些问题，比如不支持 MySQL 5.7，创建工程文件配置时漏掉了编译设置，寻找公共代码库路径在不同操作系统上没有适配等。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;span style="line-height: 1.6;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;开发中使用了两个第三方库 SwiftLog 和 MySQL-Swift。SwiftLog 支持自定义日志级别和增量写入的日志文件，并使用了喵神的 Rainbow 在 Linux 环境下输出彩色日志。MySQL-Swift 支持 MySQL 连接池复用，可以提高访问数据库的性能。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;部署环境使用 CentOS 作为宿主机，开启两个 Docker 实例分别运行 Perfect 和 MySQL，两个 Docker 实例通过 link 方式实现通信。使用 link 参数运行 Docker 实例，主 Docker 的 hosts 文件会增加从 Docker 的 host 信息，从而达到通过 Docker 别名进行通信的效果。初始化 MySQL 容器时可以将数据库文件路径设置到虚拟卷中，再使用 crontab 执行定期任务运行 AutoMySQLBackup 来备份数据。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;编码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;先初始化工程，使用 swift package init 新建工程，此时会生成 Package.swift 配置文件和源代码、测试代码目录。在 Package.swift 中添加 Perfect、SwiftLog、MySQL-Swift 后执行 Swift Build 即可拉取所有依赖代码。此时的目录并不包含 Xcode 工程文件，需要再执行命令 swift package generate-xcodeproj 生成，工程中各个依赖库的配置都通过自身的 Package.swift 配置文件读取。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;SPM 不仅是去中心化的包管理器，它还可以编译出可执行文件，我们甚至能够直接在服务端编写代码并编译运行。如果说在使用 Objective-C 开发时用 Xcodebuild 开发自定义打包工作流，那么开发 Server-Side Swift 就需要使用 SPM 在服务端实现编译、打包等流程。虽然在服务端目前还有些兼容问题，但 SPM 作为 Swift 的组成部分，一直在快速改进与提高。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;然后，添加 API 路由，我们先添加路由配置，后面再将所有配置一起设置到 Server 对象上。Perfect 的路由 API 设计参考了 Express，只需要设置 HTTP 请求类型、路由地址和对应的处理函数即可，支持使用通配符与参数，用起来还算简洁。我们可以先设置基础 API 路径，再通过 Routes().add 方法添加自定义路由，这样所有的路由都被添加到指定 API 路径下。最后将路由对象输出一下，这样开启服务时会将所有注册的路由输出到日志。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func makeURLRoutes() -&amp;gt; Routes {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; routes = Routes() &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; apiRoutes = Routes(baseUri: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"/api"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; api = Routes()
 &amp;nbsp; &amp;nbsp;api.add(method: .get, uri: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"/staff/{id}"&lt;/span&gt;, handler: fetchStaffById)
 &amp;nbsp; &amp;nbsp;apiRoutes.add(routes: api)
 &amp;nbsp; &amp;nbsp;routes.add(routes: apiRoutes)
 &amp;nbsp; &amp;nbsp;SLogWarning(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"\(routes.navigator.description)"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; routes
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Swift 没有 define 关键字，但可以通过 typealias 自定义类型名称，比如 Perfect 里的路由处理回调函数就被定义为 public typealias RequestHandler = (HTTPRequest, HTTPResponse) -&amp;gt; ()。从定义可以看到，响应函数有两个参数，HTTPRequest 包含了客户端请求的所有信息，包括 HTTP headers 和 content data。HTTPResponse 包括 HTTP headers、body 以及 HTTP Status，这些属性可以在函数中赋值并返回给客户端。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接着来实现路由函数。先将请求参数拿到，将参数进行错误处理后调用数据库工具方法获取信息，并根据获取数据的成败做对应的处理，最后返回 JSON 格式的结果。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在路由处理函数最后都需要调用 response.completed()方法通知 Server 回调处理完成，由于函数有几个结束点，在参数错误或者获取数据的时候都可能抛出异常并提前结束函数，所以需要在好几个地方执行 response.completed()方法。Swift 和 Golang 一样拥有 defer 关键字，我们可以在函数中使用它来完成资源回收或这种需要多处调用的代码。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;defer {
 &amp;nbsp; &amp;nbsp;response.completed()
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;进行数据库请求和生成 JSON 返回值的操作都有可能抛出异常，这样在 do-catch 中会抛出两种类型的异常，我们可以使用 switch-as 语法针对不同类型的异常进行处理。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;do&lt;/span&gt; {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; staffData = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; StaffDataBaseUtil.sharedInstance.searchStaffByID(idString) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; response.setBody(json: jsonBody(errorCode: returnCode, data: [&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"staff"&lt;/span&gt;: staffData]))
} &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;catch&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; error { &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;switch&lt;/span&gt; error {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;case&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; error as QueryError: &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;// 数据库请求出错&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;default&lt;/span&gt;: &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;// 服务端出错&lt;/span&gt;
 &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;Perfect 并没有使用 SwiftyJSON 之类的第三方库，而是自己实现了很好用的 JSON 扩展，对常用的数据类型增加了 JSON 序列化和反序列化方法，Swift 的 Extension 在这里得到了充分的使用。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;extension Dictionary: JSONConvertible {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/// Convert a Dictionary into JSON text.&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;public func jsonEncodedString() throws -&amp;gt; &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; s = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"{"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; first = &lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;true&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;for&lt;/span&gt; (k, v) &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt; self {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;guard &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; strKey = k as? &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;else&lt;/span&gt; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;throw&lt;/span&gt; JSONConversionError.invalidKey(k)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; !first {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;","&lt;/span&gt;)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;else&lt;/span&gt; {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;first = &lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;false&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; strKey.jsonEncodedString())
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;":"&lt;/span&gt;)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; jsonEncodedStringWorkAround(v))
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"}"&lt;/span&gt;) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; s
 &amp;nbsp; &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;数据获取需要进行数据库请求，我们使用 MySQL-Swift 作为数据库连接工具，为的是使用连接池复用连接，但也给自己挖了个坑。在 Mac 上开发时都没有问题，但在服务器端就编译失败，后来发现有一部分的代码还不支持 Linux，原来是时区的问题。在连接数据库时需要传入一个 config，包括数据库地址、端口、密码等，其中就有时区配置。在从数据库获取数据时，如果字段中有日期类型，就会将获取的绝对时间转换为对应时区的时间字符串。在日期类型数据的处理部分用到了 NSTimezone，但这一类型在 Linux 上没有实现，于是编译失败。修复的方式很简单，使用 CFTimezone 传递信息就好，但 CFTimezone 返回的类型是 CFString，于是又要针对 macOS 和 Linux 实现不同的 CFString 转换到 String 的代码。如果 Swift 有一套跨平台的 Foundation 就不会出现这个问题了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;MySQL-Swift 底层使用的是 CMySQL 库进行连接。根据 options 初始化数据库连接，将连接保存到连接池中，这样后续的数据库操作不需要再次重新连接数据库。再对每个连接对象添加是否正在使用的标记，如果当前连接池中的所有连接都在使用当中，则再次新增一个数据库连接对象进行操作。可以手动设置连接池的最大连接数，当连接池中的连接数到达最大连接数时，后续的请求将会抛出获取数据库连接失败异常。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;MySQL-Swift 将查询方法封装的十分优雅，工具类在初始化时候根据提前设置好的 config 生成连接池，再调用 pool.execute 方法，并传入查询执行的闭包就行。这里用到了高阶函数和范型，语法简洁又安全。使用的时候不需要关心数据库连接对象的创建和状态，只需要直接使用闭包里传进来的 Connection 连接对象进行查询即可。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;private init() {
 &amp;nbsp; &amp;nbsp;pool = ConnectionPool(options: DBConfigOption)
}&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; result: [Staff] = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; pool.execute { conn &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; conn.query(querySQL)
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;对于同名不同返回值的函数，Swift 会针对代码中返回值的类型推断进行分析，确定最终运行时调用哪一个函数。上面 conn.query 函数就会根据不同的返回值执行不同的函数，所以在编写上面代码的时候一定要显示的声明返回的是 Staff 数组，不然函数返回的结果就会不同。另外在 query 的实现中可以看到，最后的不同返回结果是从同一个函数返回的 tuple 中拿到的，这样的代码阅读起来很有效率。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;public func query&amp;lt;t: queryrowresulttype=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; ([T], QueryStatus) {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query: queryString)
}

public func query&amp;lt;t: queryrowresulttype=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; [T] { &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; (rows, _) = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query, args) as ([T], QueryStatus) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; rows
}

public func query(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; QueryStatus { &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; (_, status) = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query, args) as ([EmptyRowResult], QueryStatus) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; status
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/t:&amp;gt;&amp;lt;/&lt;/span&gt;t:&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;拿到数据后可以将结果转换为自定义的数据类型。这里会将数据库查询结果解码为定义了默认值的结构体，并提供序列化方法给路由处理函数。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;static func decodeRow(r: QueryRowResult) throws -&amp;gt; Staff {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; Staff(
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;id: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(0, 128, 128); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;0&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;name: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"name"&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;department: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"department"&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;timestamp: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"timestamp"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;)
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在开发完成后的测试中发现返回数据的时间戳总是差几个小时，但是直接查看数据库里的数据，时间戳又是正确的，于是一步步从获取数据到返回 response 调试看看哪里出的问题，最后发现是 Swift 时区没有自动设置为和系统相同，而一直是 UTC 时间，在生成时间戳文案的时候就出错了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;所以在使用 Dateformatter 的时候需要手动设置时区，这也是 Foundation 的一个坑。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func resultDic() -&amp;gt; Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt; {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; dateFormatter = DateFormatter()
 &amp;nbsp; &amp;nbsp;dateFormatter.dateFormat = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"yyyy-MM-dd HH:mm:ss"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;dateFormatter.timeZone = TimeZone(identifier: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Asia/Shanghai"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; dateString = dateFormatter.string(from: timestamp.date()) &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;.init(dictionaryLiteral:
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"id"&lt;/span&gt;, id),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"name"&lt;/span&gt;, name),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"department"&lt;/span&gt;, department),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"timestamp"&lt;/span&gt;, dateString)
 &amp;nbsp; &amp;nbsp;)
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/string,&amp;gt;&amp;lt;/&lt;/span&gt;string,&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;在拿到数据后，可以将 HTTP Response 包装一下，在每个返回结果中都包括错误码，数据和时间戳这三个字段，并增加错误码对应的错误提示。这样不用在每个路由处理函数的最后都手动写一次。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;public func jsonBody(errorCode: ErrorCode, data: Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;?) -&amp;gt; [&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;: Any] {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; body = [&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;: Any]()
 &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"s"&lt;/span&gt;] = &amp;nbsp;[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"code"&lt;/span&gt;: errorCode.rawValue, &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"desc"&lt;/span&gt;: errorCode.description] &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; jsonData = data {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"data"&lt;/span&gt;] = jsonData
 &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"t"&lt;/span&gt;] = UInt(&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Date&lt;/span&gt;().timeIntervalSince1970) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; body
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/string,&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;至此代码基本编写完成，为了方便调试，我们可以通过 Perfect 的 Filter 方法添加自定义日志，将每次的 HTTP 请求和返回的信息输出。这样我们不需要在每个路由处理函数中调用日志方法就可以输出所有请求的参数和最终返回的结果。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func incomeMiddleware(request: HTTPRequest) {
 &amp;nbsp; &amp;nbsp;SLogInfo(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request URL: "&lt;/span&gt; + request.uri)
 &amp;nbsp; &amp;nbsp;SLogInfo(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request Method: "&lt;/span&gt; + request.method.description)
 &amp;nbsp; &amp;nbsp;SLogVerbose(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request Params: "&lt;/span&gt; + &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;(describing: request.params()))&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;for&lt;/span&gt; (name, detail) &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt; request.headers {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SLogVerbose(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request HEADER: "&lt;/span&gt; + name.standardName.uppercased() + &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;" -&amp;gt; "&lt;/span&gt; + detail)
 &amp;nbsp; &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我使用的 SwiftLog 作为日志工具，没想到在部署测试的时候也出了问题，表现为开启服务的时候可以输出日志，一旦请求进来就崩溃，抛出 Segmentation fault。但是代码在开发机上运行正常，一路调试下来发现是 “(Date())” 的问题，这段代码第一次执行没问题，第二次执行就会导致崩溃。直接在服务端用 REPL 执行两次 pring(Date())也发生了相同的崩溃。推断应该是 Date 对象的 description 代码执行出错，于是自定义 Date 对象的 description 方法，避免调用自带的方法，问题解决。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;所有配置和路由函数开发完成后，开始设置 server 对象。Perfect 支持静态文件路由，可以设置静态文件的路径。这里推荐针对 macOS 设置静态文件路径单独设置，因为 Xcode 编译出的可执行文件并不在代码目录，因此在本地调试时候会出现找不到静态文件的问题。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;#&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; os(OSX)
server.documentRoot = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"~/webroot"&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;#elseif os(Linux)
server.documentRoot = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"./webroot"&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;#endif&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;代码开发完成后，使用 Docker 初始化 Swift 实例并拉取代码，使用 swift build -c release 生成可执行文件，将可执行文件和 libCHTTPParser.so、libCOpenSSL.so、libLinuxBridge.so 三个依赖库文件复制出来提交到目标 Docker 中即完成部署。目前 Swift 官方只支持 Ubuntu 系统，也有人尝试在 CentOS 上手动编译 Swift 源码，但由于缺少官方的全面测试所以不推荐在生产环境使用。&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;strong style="line-height: 25.6px; color: rgb(171, 25, 66);"&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Swift 作为服务端开发语言的新成员，有着不少的先天优势，比如智能的类型推导、强大的协议扩展、丰富好用的语法糖，这也是官方宣传的 Safe、Fast 和 Expressive 的具体体现。开源后的 Swift 吸引了更多的开发者参与其中，从 4.0 演进表也可以看到更多强力且有趣的功能包括反射、并发、稳定的 ABI 等。未来是美好的，现实是残酷的，以目前国内的 Swift 开发生态环境，在客户端尚且无法占据主流位置，更不用想挑战 Java、PHP、Python 等语言在服务端的地位。想要用 Swift 替代各大公司线上成熟的开发方案是不现实的，但可以从小做起，从辅助工具之类的角度着眼，先做出广泛使用的产品，逐步找到自己的定位，再扩展使用场景。私以为 Go 在这方面做的很好，Docker 的流行让更多人知道了 Go 这门语言且证明了其实力。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;目前看来 Swift 最需要解决的是 ABI 稳定性和跨平台兼容两大问题，对于 ABI 来说，之所以到 3.0 版本还没有稳定下来，是开发小组认为目前稳定 ABI 将无法去掉现有实现中错误的部分，且很可能带着补丁开发后续版本将成倍提高今后的开发难度。越早提交的代码留存率越低。这对于语言的开发是件好事，不用带着很多历史包袱开发新功能。但对于开发者来说这意味着在语言的新版本发布后不能方便的快速跟进，除非所有依赖的 Swift 代码库都及时跟进并发布基于新版本编译的代码库，这会大大降低使用 Swift 开发的积极性。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;另外 Server-Side Swift 目前只支持 Ubuntu 系统，Foundation 的移植也还在进行当中，并且各种兼容 Bug 频出，在开发过程中很容易遇到开发环境和部署环境运行效果不同的情景。好消息是针对后面的问题，Swift 开发团队成立了 Server APIs Work Group，工作组的目标就是提供服务端跨平台 API，消除平台相关代码差异，提供基础框架功能代替 C 库的引入，进一步降低服务端的开发门槛，提高客户端代码的可移植性。同时 Swift 3.1 的修改内容中明确说明了会改进 Swift on Linux 和 SPM 的质量，期待 2017 年春天发布的这个版本会给 Server-Side Swift 带来显著的改进。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065149e7wrTr.gif"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;/p&gt;&lt;section style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065149e7wrTR.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 17:11:40 +0800</pubDate>
    </item>
  </channel>
</rss>
