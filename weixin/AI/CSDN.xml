<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>深度增强学习前沿算法思想</title>
      <link>http://www.iwgc.cn/link/4726773</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者：&lt;/strong&gt;&amp;nbsp;Flood Sung，CSDN博主，人工智能方向研究生，专注于深度学习，增强学习与机器人的研究。&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;责编：&lt;/strong&gt;何永灿，欢迎人工智能领域技术投稿、约稿、给文章纠错，请发送邮件至&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;heyc@csdn.net&lt;/span&gt;&lt;/a&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&amp;nbsp;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本文为&lt;/strong&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;《程序员》&lt;/a&gt;原创文章，未经允许不得转载，更多精彩请&lt;a target="_blank" style="color: rgb(67, 149, 245); max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;订阅2017年《程序员》&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2016年AlphaGo计算机围棋系统战胜顶尖职业棋手李世石，引起了全世界的广泛关注，人工智能进一步被推到了风口浪尖。而其中的深度增强学习算法是AlphaGo的核心，也是通用人工智能的实现关键。本文将带领大家了解深度增强学习的前沿算法思想，领略人工智能的核心奥秘。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习（Deep Reinforcement Learning，DRL）是近两年来深度学习领域迅猛发展起来的一个分支，目的是解决计算机从感知到决策控制的问题，从而实现通用人工智能。以Google DeepMind公司为首，基于深度增强学习的算法已经在视频、游戏、围棋、机器人等领域取得了突破性进展。2016年Google DeepMind推出的AlphaGo围棋系统，使用蒙特卡洛树搜索和深度学习结合的方式使计算机的围棋水平达到甚至超过了顶尖职业棋手的水平，引起了世界性的轰动。AlphaGo的核心就在于使用了深度增强学习算法，使得计算机能够通过自对弈的方式不断提升棋力。深度增强学习算法由于能够基于深度神经网络实现从感知到决策控制的端到端自学习，具有非常广阔的应用前景，它的发展也将进一步推动人工智能的革命。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习与通用人工智能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;当前深度学习已经在计算机视觉、语音识别、自然语言理解等领域取得了突破，相关技术也已经逐渐成熟并落地进入到我们的生活当中。然而，这些领域研究的问题都只是为了让计算机能够感知和理解这个世界。以此同时，决策控制才是人工智能领域要解决的核心问题。计算机视觉等感知问题要求输入感知信息到计算机，计算机能够理解，而决策控制问题则要求计算机能够根据感知信息进行判断思考，输出正确的行为。要使计算机能够很好地决策控制，要求计算机具备一定的“思考”能力，使计算机能够通过学习来掌握解决各种问题的能力，而这正是通用人工智能（Artificial General Intelligence，AGI）（即强人工智能）的研究目标。通用人工智能是要创造出一种无需人工编程自己学会解决各种问题的智能体，最终目标是实现类人级别甚至超人级别的智能。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;通用人工智能的基本框架即是增强学习（Reinforcement Learning，RL）的框架，如图1所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235001MF4Zrp.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图1 通用人工智能基本框架&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;智能体的行为都可以归结为与世界的交互。智能体观察这个世界，然后根据观察及自身的状态输出动作，这个世界会因此而发生改变，从而形成回馈返回给智能体。所以核心问题就是如何构建出这样一个能够与世界交互的智能体。深度增强学习将深度学习（Deep Learning）和增强学习（Reinforcement Learning）结合起来，深度学习用来提供学习的机制，而增强学习为深度学习提供学习的目标。这使得深度增强学习具备构建出复杂智能体的潜力，也因此，AlphaGo的第一作者David Silver认为深度增强学习等价于通用人工智能DRL=DL+RL=Universal AI。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习的Actor-Critic框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;目前深度增强学习的算法都可以包含在Actor-Critic框架下，如图2所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235002PI72us.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图2 Actor-Critic框架&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;把深度增强学习的算法认为是智能体的大脑，那么这个大脑包含了两个部分：Actor行动模块和Critic评判模块。其中Actor行动模块是大脑的执行机构，输入外部的状态s，然后输出动作a。而Critic评判模块则可认为是大脑的价值观，根据历史信息及回馈r进行自我调整，然后影响整个Actor行动模块。这种Actor-Critic的方法非常类似于人类自身的行为方式。我们人类也是在自身价值观和本能的指导下进行行为，并且价值观受经验的影响不断改变。在Actor-Critic框架下，Google DeepMind相继提出了DQN，A3C和UNREAL等深度增强学习算法，其中UNREAL是目前最好的深度增强学习算法。下面我们将介绍这三个算法的基本思想。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN（Deep Q Network）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN是Google DeepMind于2013年提出的第一个深度增强学习算法，并在2015年进一步完善，发表在2015年的《Nature》上。DeepMind将DQN应用在计算机玩Atari游戏上，不同于以往的做法，仅使用视频信息作为输入，和人类玩游戏一样。在这种情况下，基于DQN的程序在多种Atari游戏上取得了超越人类水平的成绩。这是深度增强学习概念的第一次提出，并由此开始快速发展。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN算法面向相对简单的离散输出，即输出的动作仅有少数有限的个数。在这种情况下，DQN算法在Actor-Critic框架下仅使用Critic评判模块，而没有使用Actor行动模块，因为使用Critic评判模块即可以选择并执行最优的动作，如图3所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235002UNc8zy.png"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图3 DQN基本结构&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在DQN中，用一个价值网络（Value Network）来表示Critic评判模块，价值网络输出Q(s,a)，即状态s和动作a下的价值。基于价值网络，我们可以遍历某个状态s下各种动作的价值，然后选择价值最大的一个动作输出。所以，主要问题是如何通过深度学习的随机梯度下降方法来更新价值网络。为了使用梯度下降方法，我们必须为价值网络构造一个损失函数。由于价值网络输出的是Q值，因此如果能够构造出一个目标Q值，就能够通过平方差MSE的方式来得到损失函数。但对于价值网络来说，输入的信息仅有状态s，动作a及回馈r。因此，如何计算出目标Q值是DQN算法的关键，而这正是增强学习能够解决的问题。基于增强学习的Bellman公式，我们能够基于输入信息特别是回馈r构造出目标Q值，从而得到损失函数，对价值网络进行更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003UMb7yx.jpg"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图4 UNREAL算法框图&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在实际使用中，价值网络可以根据具体的问题构造不同的网络形式。比如Atari有些输入的是图像信息，就可以构造一个卷积神经网络（Convolutional Neural Network，CNN）来作为价值网络。为了增加对历史信息的记忆，还可以在CNN之后加上LSTM长短记忆模型。在DQN训练的时候，先采集历史的输入输出信息作为样本放在经验池（Replay Memory）里面，然后通过随机采样的方式采样多个样本进行minibatch的随机梯度下降训练。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;DQN算法作为第一个深度增强学习算法，仅使用价值网络，训练效率较低，需要大量的时间训练，并且只能面向低维的离散控制问题，通用性有限。但由于DQN算法第一次成功结合了深度学习和增强学习，解决了高维数据输入问题，并且在Atari游戏上取得突破，具有开创性的意义。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C（Asynchronous Advantage Actor Critic）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法是2015年DeepMind提出的相比DQN更好更通用的一个深度增强学习算法。A3C算法完全使用了Actor-Critic框架，并且引入了异步训练的思想，在提升性能的同时也大大加快了训练速度。A3C算法的基本思想，即Actor-Critic的基本思想，是对输出的动作进行好坏评估，如果动作被认为是好的，那么就调整行动网络（Actor Network）使该动作出现的可能性增加。反之如果动作被认为是坏的，则使该动作出现的可能性减少。通过反复的训练，不断调整行动网络找到最优的动作。AlphaGo的自我学习也是基于这样的思想。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;基于Actor-Critic的基本思想，Critic评判模块的价值网络（Value Network）可以采用DQN的方法进行更新，那么如何构造行动网络的损失函数，实现对网络的训练是算法的关键。一般行动网络的输出有两种方式：一种是概率的方式，即输出某一个动作的概率；另一种是确定性的方式，即输出具体的某一个动作。A3C采用的是概率输出的方式。因此，我们从Critic评判模块，即价值网络中得到对动作的好坏评价，然后用输出动作的对数似然值（Log Likelihood）乘以动作的评价，作为行动网络的损失函数。行动网络的目标是最大化这个损失函数，即如果动作评价为正，就增加其概率，反之减少，符合Actor-Critic的基本思想。有了行动网络的损失函数，也就可以通过随机梯度下降的方式进行参数的更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;为了使算法取得更好的效果，如何准确地评价动作的好坏也是算法的关键。A3C在动作价值Q的基础上，使用优势A（Advantage）作为动作的评价。优势A是指动作a在状态s下相对其他动作的优势。假设状态s的价值是V，那么A=Q-V。这里的动作价值Q是指状态s下a的价值，与V的含义不同。直观上看，采用优势A来评估动作更为准确。举个例子来说，假设在状态s下，动作1的Q值是3，动作2的Q值是1，状态s的价值V是2。如果使用Q作为动作的评价，那么动作1和2的出现概率都会增加，但是实际上我们知道唯一要增加出现概率的是动作1。这时如果采用优势A，我们可以计算出动作1的优势是1，动作2的优势是-1。基于优势A来更新网络，动作1的出现概率增加，动作2的出现概率减少，更符合我们的目标。因此，A3C算法调整了Critic评判模块的价值网络，让其输出V值，然后使用多步的历史信息来计算动作的Q值，从而得到优势A，进而计算出损失函数，对行动网络进行更新。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法为了提升训练速度还采用异步训练的思想，即同时启动多个训练环境，同时进行采样，并直接使用采集的样本进行训练。相比DQN算法，A3C算法不需要使用经验池来存储历史样本，节约了存储空间，并且采用异步训练，大大加倍了数据的采样速度，也因此提升了训练速度。与此同时，采用多个不同训练环境采集样本，样本的分布更加均匀，更有利于神经网络的训练。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法在以上多个环节上做出了改进，使得其在Atari游戏上的平均成绩是DQN算法的4倍，取得了巨大的提升，并且训练速度也成倍的增加。因此，A3C算法取代了DQN成为了更好的深度增强学习算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL（UNsupervised REinforcement and Auxiliary Learning）算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL算法是2016年11月DeepMind提出的最新深度增强学习算法，在A3C算法的基础上对性能和速度进行进一步提升，在Atari游戏上取得了人类水平8.8倍的成绩，并且在第一视角的3D迷宫环境Labyrinth上也达到了87%的人类水平，成为当前最好的深度增强学习算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;A3C算法充分使用了Actor-Critic框架，是一套完善的算法，因此，我们很难通过改变算法框架的方式来对算法做出改进。UNREAL算法在A3C算法的基础上，另辟蹊径，通过在训练A3C的同时，训练多个辅助任务来改进算法。UNREAL算法的基本思想来源于我们人类的学习方式。人要完成一个任务，往往通过完成其他多种辅助任务来实现。比如说我们要收集邮票，可以自己去买，也可以让朋友帮忙获取，或者和其他人交换的方式得到。UNREAL算法通过设置多个辅助任务，同时训练同一个A3C网络，从而加快学习的速度，并进一步提升性能。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在UNREAL算法中，包含了两类辅助任务：第一种是控制任务，包括像素控制和隐藏层激活控制。像素控制是指控制输入图像的变化，使得图像的变化最大。因为图像变化大往往说明智能体在执行重要的环节，通过控制图像的变化能够改善动作的选择。隐藏层激活控制则是控制隐藏层神经元的激活数量，目的是使其激活量越多越好。这类似于人类大脑细胞的开发，神经元使用得越多，可能越聪明，也因此能够做出更好的选择。另一种辅助任务是回馈预测任务。因为在很多场景下，回馈r并不是每时每刻都能获取的（比如在Labyrinth中吃到苹果才能得1分），所以让神经网络能够预测回馈值会使其具有更好的表达能力。在UNREAL算法中，使用历史连续多帧的图像输入来预测下一步的回馈值作为训练目标。除了以上两种回馈预测任务外，UNREAL算法还使用历史信息额外增加了价值迭代任务，即DQN的更新方法，进一步提升算法的训练速度。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;UNREAL算法本质上是通过训练多个面向同一个最终目标的任务来提升行动网络的表达能力和水平，符合人类的学习方式。值得注意的是，UNREAL虽然增加了训练任务，但并没有通过其他途径获取别的样本，是在保持原有样本数据不变的情况下对算法进行提升，这使得UNREAL算法被认为是一种无监督学习的方法。基于UNREAL算法的思想，可以根据不同任务的特点针对性地设计辅助任务，来改进算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;小结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;深度增强学习经过近两年的发展，在算法层面上取得了越来越好的效果。从DQN，A3C到UNREAL，精妙的算法设计无不闪耀着人类智慧的光芒。在未来，除了算法本身的改进，深度增强学习作为能够解决从感知到决策控制的通用型学习算法，将能够在现实生活中的各种领域得到广泛的应用。AlphaGo的成功只是通用人工智能爆发的前夜。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003XmLH97.gif"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;/p&gt;&lt;section style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235003voNIa8.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>十五岁生日快乐，.NET ！</title>
      <link>http://www.iwgc.cn/link/4726774</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;.NET框架（英语：.NET Framework）是由微软开发，一个致力于敏捷软件开发（Agile software development）、快速应用开发（Rapid application development）、平台无关性和网络透明化的软件开发平台。.NET是微软为2000年代对服务器和桌面型软件工程迈出的第一步。.NET包含许多有助于互联网和内部网应用迅捷开发的技术。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235005xpOKca.jpg"/&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2月13日，我们迎来了.NET的生日，这是它面世的第15个年头。2002年2月13日，第一版.NET作为Visual Studio.NET的一部分首次公开亮相，微软宣布要构建“下一代视窗服务”，并发布了Visual Studio.NET，大幅提高了生产力，这一切恍如昨日。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在2002年的时候，最开始开发者就能够通过.NET平台以健壮的方式快速构建及部署包括Windows桌面和web服务器应用在内的各类应用程序。开发者在构建分布式Windows应用上有了一个完整的管理型框架，基于web的开发者可以使用所谓的“下一代动态服务器网页”——ASP.NET，然后新的开发语言C#出现。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;多年以来，.NET及相关的生态系统以迅猛的成长速度满足了各类开发者与平台的需求。随着技术状况的变化，.NET也在发生变化，通过.NET，我们可以构建任何东西，包括跨平台web应用、云服务、移动设备应用、游戏等等，.NET的开源社区更是充满活力、生机勃勃。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Visual Studio 2017将于3月7日发布，值得一提的是，今年正好也是Visual Studio诞生20周年，.NET核心工具也即将推出1.0版本。几天前，我们与Microsoft Alumni Network组织合作，与前.NET成员还有摇滚明星一同，为.NET举办了生日晚宴。我们邀请了C#之父Anders Hejlsberg，请他分享了一些.NET开源和发布的故事，还有他的一些想法（&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; text-decoration: underline; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;视频：https://sec.ch9.ms/ch9/a518/2be8dc04-d13a-49b1-a219-09af71f8a518/HappyBDayNETAnders_high.mp4）&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;感谢大家齐心协力构建了这么优秀的软件，对计算机行业产生了如此重大的影响，也欢迎大家分享你的故事和想法。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】TensorFlow 1.0 发布，更快、更灵活、更方便开发</title>
      <link>http://www.iwgc.cn/link/4726775</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;TensorFlow 1.0 发布，更快、更灵活、更方便开发&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;在Mountain View举办的首届年度TensorFlow开发者峰会上，Google 发布了 TensorFlow 1.0，保证了 Google 的机器学习库的API稳定性。主要亮点：1.更快，TensorFlow 1.0 现在简直快到难以置信！ XLA为未来更多的性能改进奠定了基础，而现在 tensorflow.org 调整了模型以实现最大速度；2.更灵活，TensorFlow 1.0引入了一个高级API，包含tf.layers，tf.metrics和tf.losses模块；3.更便于开发，TensorFlow 1.0 保证了 Python API稳定性，可以不破坏现有的代码便能获取新功能。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;推动大数据产业发展，腾讯云与清华大学共建国家工程实验室&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，国家发展和改革委员会下发通知，由清华大学牵头承担的“大数据系统软件国家工程实验室”获批通过。腾讯云作为该实验室重点共建单位之一，将承担国家级大数据技术创新平台关键技术攻关，起草国家大数据技术规范，开展大数据应用示范等一系列工作。“大数据系统软件国家工程实验室”的主要任务是针对我国目前大数据开源创新不足等问题，围绕我国系统软件自主安全可控的迫切需求，建设大数据系统软件创新平台。腾讯云将协助清华大学开展大规模数据异构多源一体化管理，交互式异构数据分析框架、数据可视化与智能数据工程、大数据混源软件可信验证等技术的研发和工程化。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;埃森哲《银行区块链投资价值分析报告》发布&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，埃森哲发布《银行区块链投资价值分析报告》(Accenture Banking on Blockchain)。报告指出，与许多新技术一样，区块链的创新技术为银行业注入了许多兴奋和刺激。一些分析人士将其革命性的潜力与互联网相提并论。因为这种创新大幅度的提高了效率，大大降低了风险，节省了数十亿美元。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;印度物联网企业Flutura获750万美元A轮融资，提供大数据分析解决方案&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Flutura由Krishnan Raman、Derick Jose以及Srikanth Muralidhara于2012年联合创办，总部位于印度班加罗尔，是一家大数据分析解决方案提供商，致力于通过货币化机器数据提升运营效率及质量。近日，印度物联网初创公司Flutura宣布获得750万美元A轮融资，本次交易的领投方为Vertex Ventures，Lumis Partners以及早期投资机构The Hive均参与了本轮融资。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;大数据公司“量江湖”完成数千万人民币B轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;大数据公司量江湖今日宣布已经完成了数千万人民币的B轮融资，投资方为汇付创投等机构。这次融资的资金主要用于新产品研发、市场推广和品牌打造这几个方面。旗下拥有APP反作弊和微准这两款产品，主要应用在汽车、母婴、金融、房地产和移动互联网等领域。而近期，量江湖又上线了ASM（App Store Search Marketing）智投，基于苹果推出的ASM业务，为企业在App Store上推广APP提供智能工具。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;江苏政务服务网试运行 政府与第三方平台推“互联网＋政务”服务&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，江苏政务服务网已开始试运行，该网站集合了江苏所有政府部门的3.6万项在线服务、10万项便民服务和8万个办事场所和服务场馆信息。该平台与第三方平台支付宝的4.5亿实名用户完全打通，市民不需要注册和实名认证，只需用支付宝账号登录江苏政务服务网，就可以办理江苏各政府部门的业务。涉及到缴费的项目，还可以用支付宝在统一支付平台付款。4个月前，江苏省政府分别与阿里巴巴、蚂蚁金服签署战略合作协议。这是三方合作落地的第一个项目，也是全国首个完全搭建在公有云平台上的统一政务服务平台。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;物联网产业有望迎来风口&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;工信部网站近日公示了《电信网编号计划（2017版）》，其中新增了物联网网号。业内人士表示，目前物联网已从概念落实到了实际。随着4G、5G的快速发展，制定标准化的识别编码势在必行。在政策的支持下，物联网行业发展将提速。国家对物联网产业越来越重视，出台了一系列相关政策推动产业发展。未来万物互联、云计算、大数据、智能处理等都离不开“物联网”，这是信息大融合及智能化处理的基础。这对信息产业基础设施建设，以及国计民生的信息化管理都至关重要。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;大数据世界难道遗忘了非洲吗？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;随着美国硅谷开始挖掘全球的数据，人们没有忘记大数据世界是如此的复杂。特别是非洲在世界上许多数据集上呈现出一个明显的空白时，但这个差距究竟有多大？Facebook公司创始人马克•扎克伯格表示，Facebook的原始热门主题Feed几乎完全没有来自非洲的新闻来源，这意味着几乎不可能有来自非洲大陆的Facebook公司用户，除非他们被美国媒体覆盖，才会有非洲大陆的大多数事件。其余的社交媒体的情况也不是更好，Twitter也没有真正进入整个非洲大陆。这就很有问题因为定义大数据革命的“社交媒体监控”领域的大部分都是基Twitte的firehose，因此这意味着将错过非洲和中东地区的市场。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;2017年大数据发展的十大趋势以及在各行业的应用潜力&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;2016年，大数据已从前两年的预期膨胀阶段、炒作阶段转入理性发展阶段、落地应用阶段。2017年，大数据依然处于理性发展期，依然存在诸多挑战，但前景依然非常乐观。2017年大数据的发展呈现十大趋势：越来越多的企业实现数据孤岛的打通，驱动大数据发挥更强的威力；大数据已经成为企业或机构的无形资产，将成为企业参与市场竞争的新武器；大数据算法越来越智能化；大数据和人工智能深度融合；大数据和人工智能深度融合；工业大数据成为工业互联网发展的重要引擎；工业大数据成为工业互联网发展的重要引擎；大数据人才需求增多，越来越多的机构参与到大数据人才培育中。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;本期周刊：&lt;/span&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;【Data &amp;amp; Cloud周刊】第4期 | SDCC 2017上海站震撼来袭&lt;/span&gt;&lt;/a&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;，立即&lt;/span&gt;&lt;span style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;订阅&lt;/a&gt;&lt;/span&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;：http://letter.csdn.net/news/newsletter/index/27&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487235007AtSNfd.jpg"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 16 Feb 2017 16:48:59 +0800</pubDate>
    </item>
    <item>
      <title>SDCC 2017·上海站之互联网应用架构实战峰会讲师和议题全曝光</title>
      <link>http://www.iwgc.cn/link/4712296</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2017年3月17-19日，SDCC 2017·上海站震撼来袭，特开设了三大主题会场，分别是互联网运维开发实战峰会、数据库核心技术与应用实战峰会和互联网应用架构实战峰会，为期三天，为软件开发者带去共24场的技术盛宴。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;其中，阿里、腾讯、百度、苏宁、京东等企业的顶级运维大牛带来360度无死角的运维盛宴，大规模分布式系统运维、自动化运维、云端运维、游戏运维、海量容器运维等等热点技术话题一网打尽。同时，集结业界前沿领域的数据库专家，业界巨匠，触手可及，围绕MySQL、PostgreSQL、Redis、Oracle等数据库，共同探讨性能调优、数据库自动运维、云端数据库、新一代数据平台等领域的前瞻性话题；深度剖析行业痛点，探秘数据库核心技术。SDCC也汇聚互联网应用架构实践的焦点议题，海量并发环境下的高可用/高并发/高性能系统架构设计、电商架构、消息队列、分布式架构、架构演讲、移动APP性能优化、分发系统的构建、微服务等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;日前，大会主委会也对外公布了SDCC 2017·上海站之互联网应用架构实战峰会讲师和议题，详情如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;出品人&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;张立刚 1号店技术部-电商云平台技术总监&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2012年7月加入1号店，先后担任过1号店订单、库存、拆单、运费、第三方平台订单等电商核心交易系统负责人，致力于电商平台产品化、智能化、云化。期间主导并参与了1号店SOA治理、订单Service化、订单水平拆库&amp;amp;去Oracle迁Mysql、无线性能优化及拆pool、运费体系重构、库存准确率优化等重要项目，负责1号店与Tmall、百度、当当、B2B2C平台等第三方平台订单业务，从0开始建立了1号店完善的订单监控、预警、履单体系。 对高可用高并发高性能的电商核心交易系统及SOA架构有深入的理解和实践，熟悉电商核心产品、订单、库存等业务，将以OMS为核心规划构建新一代电子商务云平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;讲师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;者文明 京东运营研发部系统架构部系统架构师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;者文明，中科院硕士，清华大学精仪系学士，14年电子商务/企业应用领域研发、架构经验，涉及电商后端物流系统架构，实时大数据解决方案。2012年加入京东，主要负责仓储、配送、售后客服等系统架构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：京东物流系统高可用架构实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;大多电商物流系统均为OLTP系统，同时具有海量数据和高并发特性。如何在海量数据和高并发的应用场景中构建一个高可用的OLTP系统？本专题聚焦电商物流系统高可用架构设计与实践，旨在介绍京东物流系统在数据库和Web端的高可用架构设计思路、应用场景及案例分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. OLTP系统面对海量数据和高并发场景时如何提升系统的可用性；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 电商物流系统高可用架构设计和实战经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;孙子荀 腾讯科技&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;嘉宾简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;孙子荀，09年毕业后从事内核和分布式系统的开发工作，11年在百度从事过高性能计算方面的工作。12年加入腾讯从事腾讯云加速的带宽调度系统的设计研发，获得公司多个业务奖项。14年开始手Q公众号项目，负责构建公众号平台和内容平台。现在从事个性化阅读内容方面的处理和挖掘工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：内容分发的系统建设&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲概要： &lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;17年是内容生态分发的爆发年。分享主要介绍在内容分发领域的一些工程和算法技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 内容分发系统的框架；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 内容的建模和质量控制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 内容推荐技术PUSH和PULL模式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 如何构建一个内容分发引擎，存储层的技术选型和挑战；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 多种算法策略模型如何与并发处理相互结合；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 关于假新闻和低俗内容的控制技术手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李雄峰 爱奇艺公司支付中心技术经理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt; 10多年企业应用和互联网软件架构设计经验，涉及电子商务、电子政务、风控、支付等领域。现供职于爱奇艺公司，先后负责大数据仓库系统和支付系统的软件架构设计工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：支付系统微服务化实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;互联网公司的快速发展往往也伴随着软件系统的迅速演化。在建设初期，由于基础设施和技术能力限制，大部分系统倾向采用单体应用。但随着业务的发展和复杂度的增加，系统的可维护性和性能都很难满足线上需求。本次演讲以支付系统为例，介绍如何对单体应用进行拆分，落地实施微服务架构，在确保线上业务稳定运行的同时推动架构可控地演化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;以核心支付系统的改造为例，介绍：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 如何评估采用微服务架构来改进现有系统的必要性和收益；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 微服务架构改进的时机选择和路线图；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 微服务基础设施建设；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. SSH架构系统的微服务化改进最佳实践。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李天晨 58到家技术中心架构部高级Java工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt; 58到家后端架构部团队核心成员，有着丰富的架构经验。目前负责到家自研的消息队列服务DMQ(Daojia Message Queue)、分布式调用链跟踪系统DTracker、通用消息平台等底层平台服务，在中间件架构设计上有自己的独到见解。本质程序员一枚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：58到家电商业务场景下的消息队列架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;介绍适应58到家电商业务场景下的消息队列架构设计，根据真实的业务场景，各业务线开发痛点，合理选型技术架构，满足业务快速迭代发展。详细阐述对于电商交易支付类场景下消息100%到达率的架构设计，以及广播消息、消费者业务ack、延迟消息、消息有效期这些业务场景的功能实现，最后是对于将来顺序消息、事务消息功能的规划。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;电商业务的消息队列架构设计，满足消息100%可达，支持广播消息、消费者业务ack、延迟消息、消息有效期的业务场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李林锋 华为软件API开放平台架构师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;李林锋，2008年进入华为公司从事电信软件的设计和开发工作，有多年Java NIO、平台中间件设计和开发经验，精通Netty、Mina、分布式服务框架、云计算等，目前从事云平台和开放API相关的架构和设计工作，著有《分布式服务框架原理与实践》、《Netty权威指南》。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：微服务故障隔离技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;微服务分布式部署之后，涉及到序列化和反序列化、集群路由、网络读写等操作，故障在所难免。另外，在微服务中，可能会调用第三方服务，进行数据库操作、磁盘I/O操作等，这些对第三方服务的依赖，也会增加故障级联和扩散的风险。在实际项目中如何规避这些风险、如何更加有效的管理第三方依赖带来的可靠性奉献？本文将给出答案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;学习到微服务故障隔离的关键技术：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. RPC通信层的故障隔离；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 第三方依赖故障隔离；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 基于线程池的微服务优先级调度；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. 熔断机制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;5. 流量控制：静态、动态流控和并发控制；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;6. 优雅降级、异步回调机制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;陈清渠 携程基础业务部高级研发经理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;陈清渠，毕业于武汉大学，多年软件及互联网行业开发经验。14年加入携程，先后负责了订单查询服务重构，实时用户行为服务搭建等项目的架构和研发工作，目前负责携程订单中心团队。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：实时用户行为服务系统架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;用户实时行为对接了携程近20条业务线用户访问日志，通过kafka+storm的组合，每天在处理20亿+埋点数据的基础上保证秒级落地可查，支撑了多个产品，目前日均服务8千万以上请求。本次分享主要介绍我们在海量数据和高并发双重挑战下，如何从架构上和实现上保证实时性，稳定性和性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 了解实时计算的系统构成和架构；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 打造高性能服务的经验分享；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 从多个层面提高系统可用性经验分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;李嘉璇 百度研发工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;李嘉璇，百度研发工程师，有处理图像、社交文本数据情感分析的经验，参与过基于深度学习的自动驾驶二维感知系统hackathon竞赛，对研究深度学习框架TensorFlow的架构、源码分析及在不同领域的应用有浓厚兴趣。目前一本《TensorFlow入门到精通》正在出版，4月上市。独立制作和运营的竞品分析网站——追点网（www.tdrop.top），也是国内基于深度学习做产品的社交评论和新闻的竞品分析和舆情报告的网站。个人博客：blog.greatgeekgrace.com，活跃于国内各大技术社区，知乎编程问题回答者，热爱技术，热爱分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：TensorFlow在人脸年龄、情绪、性别、关键点识别系统中的架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;结合目前最流行的TensorFlow深度学习框架，讲解如何对人脸识别、人脸情绪识别、人像笑脸、人脸关键点等系统的架构设计。并结合人脸的特征提取，建立特征工程；最后应用在安防、支付等领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 帮助听众了解人脸识别系统的架构和组成；并打造高性能的人脸识别系统。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 百度人脸在人脸识别系统中的技术实战、特征提取以及坑是如何填的；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 理解人脸及图像相关的一些特征，及特征工程经验；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;4. 目前关于深度学习架构设计的资料，中文资料翻译的有限，社区非常活跃，但是总是呈现出会着恒会，不会者始终找不到入门方法的状态。本次希望分享深度学习的架构设计和经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(0, 122, 170);"&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;高亮亮 饿了么移动技术部iOS工程师&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;个人简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;高亮亮，饿了么移动技术部高级iOS工程师，负责饿了么商家版iOS App开发。对iOS架构和系统底层有深入研究，擅长移动性能分析，trouble shooting、iOS逆向等重难点工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲主题：新瓶旧酒——换个角度提升 APP 性能和质量的实践之路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;演讲简介：&lt;/span&gt;&lt;/strong&gt;&lt;span style="font-size: 14px;"&gt;结合当下火热的移动性能话题和 APM，围绕移动应用性能质量等方向，谈谈饿了么商家版如何避开传统解决方案，将Reflow &amp;amp; repaint，throttle &amp;amp; debounce、优雅降级等方案在客户端实现。通过类比借鉴，作为一个全新角度来思考质量提升问题，并灵活的运用到移动端，从而提升应用的性能，稳定性和可用性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size: 14px;"&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;1. 针对一线开发人员，贴合实际落地，由浅入深，通俗易懂;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;2. 通过借鉴其他领域概念，打破传统，提供非常规解决方案和思路;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;3. 普及其他领域概念，开拓思路，举一反三，挖掘更深层次的运用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="font-size: 14px;"&gt;更多精彩主题和议题信息敬请关注SDCC 2017·上海站官网，购票和注册地址点击底部【&lt;span style="font-size: 14px; color: rgb(171, 25, 66);"&gt;阅读原文&lt;/span&gt;】，截止3月5日是最后的八折阶段。&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>深度学习实践：使用Tensorflow实现快速风格迁移</title>
      <link>http://www.iwgc.cn/link/4712297</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&amp;nbsp;&lt;img src="http://wxrss.b0.upaiyun.com/148715137181qlNL.png"/&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;一、风格迁移简介&lt;/h2&gt;&lt;p&gt;风格迁移（Style Transfer）是深度学习众多应用中非常有趣的一种，如图，我们可以使用这种方法把一张图片的风格“迁移”到另一张图片上：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151371GyXTlj.jpg"/&gt;然而，原始的风格迁移（论文地址：&lt;a class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;arxiv.org/pdf/1508.0657&lt;/span&gt;&lt;span class="invisible"&gt;6v2.pdf&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;）的速度是非常慢的。在GPU上，生成一张图片都需要10分钟左右，而如果只使用CPU而不使用GPU运行程序，甚至需要几个小时。这个时间还会随着图片尺寸的增大而迅速增大。&lt;/p&gt;&lt;p&gt;这其中的原因在于，在原始的风格迁移过程中，&lt;strong&gt;把生成图片的过程当做一个“训练”的过程。&lt;/strong&gt;每生成一张图片，都相当于要训练一次模型，这中间可能会迭代几百几千次。如果你了解过一点机器学习的知识，就会知道，从头训练一个模型要比执行一个已经训练好的模型要费时太多。而这也正是原始的风格迁移速度缓慢的原因。&lt;/p&gt;&lt;h2&gt;二、快速风格迁移简介&lt;/h2&gt;&lt;p&gt;那有没有一种方法，可以不把生成图片当做一个“训练”的过程，而当成一个“执行”的过程呢？答案是肯定的。这就这篇快速风格迁移（fast neural style transfer）：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;Perceptual Losses for Real-Time Style Transfer and Super-Resolution&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;快速风格迁移的网络结构包含两个部分。一个是“生成网络”（原文中为Transformation Network），一个是“损失网络”（Loss Network）。生成网络接收一个图片当做输入，然后输出也是一张图片（即风格迁移后的结果）。如下图，左侧是生成网络，右侧为损失网络：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151371WOd9Bz.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;训练阶段：&lt;/strong&gt;首先选定一张风格图片。训练的目标是让生成网络可以有效生成图片。目标由损失网络定义。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;执行阶段：&lt;/strong&gt;给定一张图片，将其输入生成网络，输出这张图片风格迁移后的结果。&lt;/p&gt;&lt;p&gt;我们可以发现，&lt;strong&gt;在模型的“执行”阶段我们就可以完成风格图片的生成。&lt;/strong&gt;因此生成一张图片的速度非常块，在GPU上一般小于1秒，在CPU上运行也只需要几秒的时间。&lt;/p&gt;&lt;h2&gt;三、快速风格迁移的Tensorflow实现&lt;/h2&gt;&lt;p&gt;话不多说，直接上我的代码的Github地址：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;hzy46/fast-neural-style-tensorflow&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;还有变换效果如下。&lt;/p&gt;&lt;p&gt;原始图片：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372XPfaCA.jpg"/&gt;风格迁移后的图片：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372zsRMec.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151372ohGB31.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373BuTOge.jpg"/&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373CvUPhf.jpg"/&gt;&lt;strong&gt;以上图片在GPU(Titan Black)下生成约需要0.8s，CPU（i7-6850K）下生成用时约2.9s。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;关于快速风格迁移，其实之前在Github上已经有了Tensorflow的两个实现：&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;junrushao1994/fast-neural-style.tf&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;OlavHN/fast-neural-style&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是第一个项目只提供了几个训练好的模型，没有提供训练的代码，也没有提供具体的网络结构。所以实际用处不大。&lt;/p&gt;&lt;p&gt;而第二个模型做了完整的实现，可以进行模型的训练，但是训练出来的效果不是很好，在作者&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;自己的博客&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;中，给出了一个范例，可以看到生成的图片有很多噪声点：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151373unMI98.jpg"/&gt;&lt;/p&gt;&lt;p&gt;我的项目就是在&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;OlavHN/fast-neural-style&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;的基础上做了很多修改和调整。&lt;/p&gt;&lt;h2&gt;四、一些实现细节&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、与Tensorflow Slim结合&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在原来的实现中，作者使用了VGG19模型当做损失网络。而在原始的论文中，使用的是VGG16。为了保持一致性，我使用了Tensorflow Slim（地址：&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;tensorflow/models&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;）对损失网络重新进行了包装。&lt;/p&gt;&lt;p&gt;Slim是Tensorflow的一个扩展库，提供了很多与图像分类有关的函数，已经很多已经训练好的模型（如VGG、Inception系列以及ResNet系列）。&lt;/p&gt;&lt;p&gt;下图是Slim支持的模型：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374YQfbDB.jpg"/&gt;使用Slim替换掉原先的网络之后，&lt;strong&gt;在损失函数中，我们不仅可以使用VGG16，也可以方便地使用VGG19、ResNet等其他网络结构&lt;/strong&gt;。具体的实现请参考源码。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2、改进转置卷积的两个Trick&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;原先我们需要使用网络生成图像的时候，一般都是采用转置卷积直接对图像进行上采样。&lt;/p&gt;&lt;p&gt;&lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;这篇文章&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;指出了转置卷积的一些问题，认为转置卷积由于不合理的重合，使得生成的图片总是有“棋盘状的噪声点”，它提出使用先将图片放大，再做卷积的方式来代替转置卷积做上采样，可以提高生成图片的质量，下图为两种方法的对比：&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374f8xsUS.jpg"/&gt;&lt;/p&gt;&lt;p&gt;对应的Tensorflow的实现：&lt;/p&gt;&lt;pre&gt;&lt;code class="language-python"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;resize_conv2d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variable_scope&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'conv_transpose'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &amp;nbsp;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_shape&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_shape&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;new_height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;new_width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;x_resized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;new_height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_width&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResizeMethod&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NEAREST_NEIGHBOR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Variable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncated_normal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stddev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'weight'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conv2d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_resized&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strides&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上为第一个Trick。&lt;/p&gt;&lt;p&gt;第二个Trick是文章 &lt;a class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span style="text-decoration: underline;"&gt;&lt;span style="color: rgb(0, 102, 204);"&gt;Instance Normalization: The Missing Ingredient for Fast Stylization&lt;em class="icon-external"&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 中提到的，用 Instance Normalization来代替通常的Batch Normalization，可以改善风格迁移的质量。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3、注意使用Optimizer和Saver&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这是关于Tensorflow实现的一个小细节。&lt;/p&gt;&lt;p&gt;在Tensorflow中，Optimizer和Saver是默认去训练、保存模型中的所有变量的。但在这个项目中，整个网络分为生成网络和损失网络两部分。我们的目标是训练好生成网络，因此只需要去训练、保存&lt;strong&gt;生成网络中的变量&lt;/strong&gt;。在构造Optimizer和Saver的时候，要注意只传入生成网络中的变量。&lt;/p&gt;&lt;p&gt;找出需要训练的变量，传递给Optimizer：&lt;/p&gt;&lt;pre&gt;&lt;code class="language-python"&gt;&lt;span class="n"&gt;variable_to_train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trainable_variables&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FLAGS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loss_model&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="n"&gt;variable_to_train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;train_op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AdamOptimizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1e-3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;global_step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;global_step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;variable_to_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;五、总结&lt;/h2&gt;&lt;p&gt;总之是做了一个还算挺有趣的项目。代码不是特别多，如果只是用训练好的模型生成图片的话，使用CPU也可以在几秒内运行出结果，不需要去搭建GPU环境。建议有兴趣的同学可以自己玩一下。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151374b4tpQP.jpg"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】谷歌Cloud Spanner Beta测试启动，阿里云参与共建国家工程实验室</title>
      <link>http://www.iwgc.cn/link/4712298</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;阿里云参与共建国家工程实验室 人工智能继续深入工业制造领域&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，国家发改委公布大数据国家工程实验室名单，由阿里云参与的“工业大数据应用技术国家工程实验室”和“大数据系统软件国家工程实验室”均获批复认定，分别是工业大数据应用及大数据系统软件领域的唯一国家级工程实验室。前者由航天云网旗下北京航天数据股份有限公司和阿里云联合共建。后者由清华大学和北京理工大学牵头，阿里云支撑实验室研发全生命周期大数据系统软件及其开源创新平台体系。国家工程实验室承担着国家科技创新的重要任务，此次共有19个国家工程实验室获批，其中大数据领域11个，互联网+领域8个，寄托着在该领域实现世界一流创新的希望。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;甲骨文CEO：亚马逊云服务已过时 我们更先进&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;据CNBC报道，甲骨文再次对亚马逊在云计算领域的优势地位发出挑战，称自己正在获取更大市场份额。本周二，甲骨文首席执行官马克·赫德在于旧金山举行的高盛科技与互联网会议上表示，“坦率讲，亚马逊的基础设施已老旧过时。我们的更先进。”赫德称甲骨文传统数据库用户不会转投亚马逊的服务。他特别提到AWS数据库产品Aurora和Redshift，企业使用这些软件管理它们在亚马逊云中的数据。赫德估计，“极少”公司会从内部部署的数据库（他提到SQL）转移到AWS，部分原因是因为数据将被亚马逊捕获。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;a target="_blank" style="line-height: 1.6; box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none;"&gt;&lt;span style="font-size: 14px;"&gt;获3000万Pre-A轮融资，默安科技要用“欺骗式防御”主动出击黑客&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;2月15日，新一代云计算安全企业默安科技宣布获得3000万元Pre-A轮融资。本次融资由元璟资本领投，真格基金、盈动资本跟投。据悉，融资将用于拓展云计算安全、业务安全等新领域，以及提升公司市场和服务能力。默安科技CEO聂万泉表示融资后将进一步加大新型云计算安全产品的研发，更好地满足客户需要。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;英国最大数据中心KAO Data Campus获3300万英镑融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前，英国最大的数据中心KAO Data Campus宣布获得了由专注于数据中心行业的知名风头机构Downing LLP 和 Goldacre Ventures共同领投的新一轮风险投资，金额达3300万英镑。据了解，本轮所获融资KAO Data Campus将用于建设最新数据分中心，预计该中心将于今年4月建设完成，并于年底正式启用。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;英国云计算服务商Timico完成 6231 万美元融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，总部位于英国的云计算服务供应商Timico宣布完成了新一轮的股权投资，投资金额达5000万英镑(约合6231万美元)，本轮的投资方为本土知名投资机构 Lyceum Capital。据了解，Timico公司成立于2004年，除在诺丁汉郡纽瓦克的总部之外，还分别在伦敦和沃金汉两地设有办事处，主要为中端市场的企业客户提供更多的云计算相关的技术支持。本轮融资完成之后，公司将利用该笔资金进一步提升其技术能力。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;谷歌Cloud Spanner云端数据库服务Beta测试启动&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;谷歌今日宣布了其Cloud Spanner云端数据库服务的Beta测试启动，Cloud Spanner是一个云端的全球分布式数据库服务，能够为任务集中形应用服务。与Bigtable, Cloud SQL和Cloud Datastore这些谷歌云端服务不同，Cloud Spanner既能够提供传统的关系数据库服务，又能够提供NoSQL服务，而且具有伸缩易用性和保证事务一致性。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;从数据服务入手，“网红城堡”获2000万元天使轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;借助大数据分析切入网红服务市场的“网红城堡”已于去年12月获得来自天善资本与GGV的天使轮融资，金额 2000 万人民币。网红城堡”搭建了一套通过微博吸引力、微博持久力、电商系数等维度衡量网红微博表现力的数据模型。同时，通过任务系统、在线课程、评测工具、数据追踪等功能为网红提供基于数据驱动的定位、培训、运营推广、供应链对接合作等业务。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;关于大数据和隐私的“辩论”才刚刚开始&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;多年来，隐私和大数据之间的关系已经变得非常敏感，随着新兴技术产生大量数据，关于两者之间“辩论”才刚刚开始。日常生活中数据生成设备的数量不断增长，因此关于应将数据公开，以及何时应将个人数据视为私有的争论也在不断增加。SAP国家安全服务公司总裁兼首席执行官Mark Testoni说，“我们拥有所有信息，而且大部分情况下，我们还没有真正决定什么是私有或公有领域。”数据公开可以带来很多便利，但同时也存在一些安全问题。在接下来的几年里，这些问题将尤为突出。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;谷歌公司将在2017年继续扩大数据中心支出&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;日前据悉，谷歌公司的2016年资本支出与2015年比相比有所增长，主要是增加了建设数据中心的投资，而2017年谷歌公司的基础设施支出有望再上新高。谷歌公司2016年的资本支出约为109亿美元，而2015年为99亿美元，增长10％。并非所有的谷歌公司资本支出都用于数据中心建设与运营上，但却是大部分资金。在谷歌公司第四季度的财报电话会议上，其首席财务官RuthPorat表示，第四季度的资本支出反映了在“生产设备，设施和数据中心建设”的投资。资本支出达到峰值也符合谷歌公司去年3月公布的数据中心的投资情况，以支持其企业云服务，这一业务的增长已成为Google公司的首要任务，因为其计划赶超云计算行业巨头亚马逊和微软公司。&lt;/span&gt;&lt;/p&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="box-sizing: border-box; font-weight: 700; font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487151376nfEA1z.jpg"/&gt;&lt;/center&gt;&lt;blockquote style="box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51);"&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Wed, 15 Feb 2017 17:10:15 +0800</pubDate>
    </item>
    <item>
      <title>使用 Server-Side Swift 开发 RESTful API</title>
      <link>http://www.iwgc.cn/link/4697106</link>
      <description>&lt;div class="article-content"&gt;&lt;blockquote style=" margin-top: 1.2em; margin-bottom: 1.2em; padding-right: 1em; padding-left: 1em; max-width: 100%; border-left-width: 4px; border-left-color: rgb(221, 221, 221) ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p&gt;作者简介： 何轶琛，去哪儿网 iOS 开发工程师，四年多 iOS 应用开发经验，在去哪儿网实践了 Realm、Cocoapods、React Native 等一些好用、有用的技术，目前主要精力在 Swift 上。&lt;/p&gt;&lt;p&gt;责编：唐小引，技术之路，共同进步。欢迎技术投稿、给文章纠错，请发送邮件至tangxy@csdn.net。&lt;/p&gt;&lt;p&gt;声明： 本文为《程序员》原创文章，未经允许请勿转载，更多精彩文章请订阅2017 年《程序员》。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;【导语】Swift 自发布以来就备受众多 Apple 开发者关注，但由于 API 尚不稳定，系统没有内置 Framework 导致 App 包增大等问题，使得线上主力使用的公司还很少，不少客户端开发者都还没有机会使用 Swift 进行开发。等到 2015 年 12 月 Swift 开源并正式支持 Linux 系统，广大 Apple 开发者迎来了更广泛的开发场景，可以用它来进行服务端开发。不到一年时间各种 Server-Side Swift Web Framework 相继问世，其中以 Kitura、Perfect、Vapor、Zewo 最为成熟。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;文章正式开始前，我们先对当前几款主流框架进行了解与对比。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Kitura 是 IBM 推出的框架，使用 IBM Cloud Tools for Swift 管理组件依赖，并支持部署代码到 IBM 的云服务 Bluemix。另外还有一个在线 Swift 编码网站，可以看作是线上 GUI 版本的 Swift REPL，开发者可以直接在 Web 上编写代码并查看输出。Kitura 整个产品从代码编写到部署全部包揽，提供了完整的生态环境。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Perfect 拥有 GitHub 上最多的 Star，各种功能组件和数据库连接工具也最为齐全。近期推出的 Perfect Assistant 是运行在 macOS 上的管理工具，同样支持组件依赖管理，自动化代码部署（支持 AWS、Azure），并通过调用本地 Docker 的方式实现了在 macOS 上编译 Linux 产物的功能。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Vapor 以其友好的文档和 Pure Swift 代码实现著称，其 HTTP Parser 是使用 Swift 编写实现，而不像 Kitura 和 Perfect 是用 CHTTPParser 封装，这对最终的服务性能有很大影响。Vapor 还开发了命令行工具对 SPM 进行封装，好处是开发体验更好，但提高了学习成本。另外 Vapor 比较早就做了 ORM 工具 Fluent，整体感觉十分技术范、小清新。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Zewo 是一系列开源组件的集合平台，特点是使用 libmill 实现了类似 Go 的协程功能，模块化的设计也不同于其他的框架。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这些框架在各具特色的前提下都有高性能、易扩展等优点。正好部门内部有一个信息管理平台项目，需求很简单，只要有基本的增删改查就行，于是不用麻烦后端同学排期，可以自己来开发，也算是提前实践 Swift，积累经验。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;正式开发是在 2016 年 8 月，彼时 Swift 3 尚未发布，Beta 版本的 Toolchain 每周都在更新，框架也在积极跟进发布支持最新版本的 Toolchain。技术选型期间我先后尝试了 Kitura、Vapor 和 Perfect。Kitura 的整套产品耦合太紧密，用起来比较重，对于轻量级小项目并不合适。Vapor 一开始用起来很愉快，但写到数据库连接工具时一直无法连接成功，再加上当时还在 Beta 版本，问题不少也被弃用。最后，使用 Perfect 完成了项目研发。接下来，本文将着重介绍如何使用 Perfect 完成一套 RESTful API 的开发，希望能够对大家进行 Swift Server 端开发有所裨益。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在编写代码前，要先了解目前开源的 Swift 项目包括了 Swift、SPM 以及配套的编译调试工具，在核心库方面有 libdispatch、Foundation、XCTest 这三个项目。在客户端开发中，Foundation 是最常用的工具库，它提供了一系列国际化、系统无关的 API。服务端项目增加 Foundation 支持可以统一开发体验和复用客户端代码，尤其是和系统无关的 API 可以大大增加可移植性，本属于 Swift 3.0 的组成部分但至今并没有开发完成，原因在于 Foundation 中用到了一些 Objective-C Runtime 的代码，而这部分代码并不在开源范围之内。于是在开发中需要用到 Foundation 库时就会碰到不少问题。&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;span style="line-height: 1.6;"&gt;环境配置&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;macOS 上依然是 Xcode 搞定一切事情，Linux 上目前只支持两个版本的 Ubuntu，所以推荐使用 Docker 搭建 Swift 编译和执行环境，这样可以支持所有 Linux 系统，也方便在 Swift 快速迭代时及时更新 Toolchain。代码都用 SPM 管理，在实际使用中还是有些问题，比如不支持 MySQL 5.7，创建工程文件配置时漏掉了编译设置，寻找公共代码库路径在不同操作系统上没有适配等。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;span style="line-height: 1.6;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="line-height: 1.6;"&gt;开发中使用了两个第三方库 SwiftLog 和 MySQL-Swift。SwiftLog 支持自定义日志级别和增量写入的日志文件，并使用了喵神的 Rainbow 在 Linux 环境下输出彩色日志。MySQL-Swift 支持 MySQL 连接池复用，可以提高访问数据库的性能。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;部署环境使用 CentOS 作为宿主机，开启两个 Docker 实例分别运行 Perfect 和 MySQL，两个 Docker 实例通过 link 方式实现通信。使用 link 参数运行 Docker 实例，主 Docker 的 hosts 文件会增加从 Docker 的 host 信息，从而达到通过 Docker 别名进行通信的效果。初始化 MySQL 容器时可以将数据库文件路径设置到虚拟卷中，再使用 crontab 执行定期任务运行 AutoMySQLBackup 来备份数据。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;编码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(171, 25, 66);"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;先初始化工程，使用 swift package init 新建工程，此时会生成 Package.swift 配置文件和源代码、测试代码目录。在 Package.swift 中添加 Perfect、SwiftLog、MySQL-Swift 后执行 Swift Build 即可拉取所有依赖代码。此时的目录并不包含 Xcode 工程文件，需要再执行命令 swift package generate-xcodeproj 生成，工程中各个依赖库的配置都通过自身的 Package.swift 配置文件读取。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;SPM 不仅是去中心化的包管理器，它还可以编译出可执行文件，我们甚至能够直接在服务端编写代码并编译运行。如果说在使用 Objective-C 开发时用 Xcodebuild 开发自定义打包工作流，那么开发 Server-Side Swift 就需要使用 SPM 在服务端实现编译、打包等流程。虽然在服务端目前还有些兼容问题，但 SPM 作为 Swift 的组成部分，一直在快速改进与提高。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;然后，添加 API 路由，我们先添加路由配置，后面再将所有配置一起设置到 Server 对象上。Perfect 的路由 API 设计参考了 Express，只需要设置 HTTP 请求类型、路由地址和对应的处理函数即可，支持使用通配符与参数，用起来还算简洁。我们可以先设置基础 API 路径，再通过 Routes().add 方法添加自定义路由，这样所有的路由都被添加到指定 API 路径下。最后将路由对象输出一下，这样开启服务时会将所有注册的路由输出到日志。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func makeURLRoutes() -&amp;gt; Routes {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; routes = Routes() &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; apiRoutes = Routes(baseUri: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"/api"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; api = Routes()
 &amp;nbsp; &amp;nbsp;api.add(method: .get, uri: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"/staff/{id}"&lt;/span&gt;, handler: fetchStaffById)
 &amp;nbsp; &amp;nbsp;apiRoutes.add(routes: api)
 &amp;nbsp; &amp;nbsp;routes.add(routes: apiRoutes)
 &amp;nbsp; &amp;nbsp;SLogWarning(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"\(routes.navigator.description)"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; routes
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Swift 没有 define 关键字，但可以通过 typealias 自定义类型名称，比如 Perfect 里的路由处理回调函数就被定义为 public typealias RequestHandler = (HTTPRequest, HTTPResponse) -&amp;gt; ()。从定义可以看到，响应函数有两个参数，HTTPRequest 包含了客户端请求的所有信息，包括 HTTP headers 和 content data。HTTPResponse 包括 HTTP headers、body 以及 HTTP Status，这些属性可以在函数中赋值并返回给客户端。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接着来实现路由函数。先将请求参数拿到，将参数进行错误处理后调用数据库工具方法获取信息，并根据获取数据的成败做对应的处理，最后返回 JSON 格式的结果。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在路由处理函数最后都需要调用 response.completed()方法通知 Server 回调处理完成，由于函数有几个结束点，在参数错误或者获取数据的时候都可能抛出异常并提前结束函数，所以需要在好几个地方执行 response.completed()方法。Swift 和 Golang 一样拥有 defer 关键字，我们可以在函数中使用它来完成资源回收或这种需要多处调用的代码。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;defer {
 &amp;nbsp; &amp;nbsp;response.completed()
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;进行数据库请求和生成 JSON 返回值的操作都有可能抛出异常，这样在 do-catch 中会抛出两种类型的异常，我们可以使用 switch-as 语法针对不同类型的异常进行处理。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;do&lt;/span&gt; {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; staffData = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; StaffDataBaseUtil.sharedInstance.searchStaffByID(idString) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; response.setBody(json: jsonBody(errorCode: returnCode, data: [&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"staff"&lt;/span&gt;: staffData]))
} &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;catch&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; error { &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;switch&lt;/span&gt; error {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;case&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; error as QueryError: &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;// 数据库请求出错&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;default&lt;/span&gt;: &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;// 服务端出错&lt;/span&gt;
 &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;Perfect 并没有使用 SwiftyJSON 之类的第三方库，而是自己实现了很好用的 JSON 扩展，对常用的数据类型增加了 JSON 序列化和反序列化方法，Swift 的 Extension 在这里得到了充分的使用。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;extension Dictionary: JSONConvertible {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; color: rgb(153, 153, 136); font-style: italic; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/// Convert a Dictionary into JSON text.&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;public func jsonEncodedString() throws -&amp;gt; &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; s = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"{"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; first = &lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;true&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;for&lt;/span&gt; (k, v) &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt; self {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;guard &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; strKey = k as? &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;else&lt;/span&gt; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;throw&lt;/span&gt; JSONConversionError.invalidKey(k)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; !first {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;","&lt;/span&gt;)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;else&lt;/span&gt; {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;first = &lt;span class="" style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;false&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; strKey.jsonEncodedString())
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;":"&lt;/span&gt;)
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; jsonEncodedStringWorkAround(v))
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;s.append(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"}"&lt;/span&gt;) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; s
 &amp;nbsp; &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;数据获取需要进行数据库请求，我们使用 MySQL-Swift 作为数据库连接工具，为的是使用连接池复用连接，但也给自己挖了个坑。在 Mac 上开发时都没有问题，但在服务器端就编译失败，后来发现有一部分的代码还不支持 Linux，原来是时区的问题。在连接数据库时需要传入一个 config，包括数据库地址、端口、密码等，其中就有时区配置。在从数据库获取数据时，如果字段中有日期类型，就会将获取的绝对时间转换为对应时区的时间字符串。在日期类型数据的处理部分用到了 NSTimezone，但这一类型在 Linux 上没有实现，于是编译失败。修复的方式很简单，使用 CFTimezone 传递信息就好，但 CFTimezone 返回的类型是 CFString，于是又要针对 macOS 和 Linux 实现不同的 CFString 转换到 String 的代码。如果 Swift 有一套跨平台的 Foundation 就不会出现这个问题了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;MySQL-Swift 底层使用的是 CMySQL 库进行连接。根据 options 初始化数据库连接，将连接保存到连接池中，这样后续的数据库操作不需要再次重新连接数据库。再对每个连接对象添加是否正在使用的标记，如果当前连接池中的所有连接都在使用当中，则再次新增一个数据库连接对象进行操作。可以手动设置连接池的最大连接数，当连接池中的连接数到达最大连接数时，后续的请求将会抛出获取数据库连接失败异常。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;MySQL-Swift 将查询方法封装的十分优雅，工具类在初始化时候根据提前设置好的 config 生成连接池，再调用 pool.execute 方法，并传入查询执行的闭包就行。这里用到了高阶函数和范型，语法简洁又安全。使用的时候不需要关心数据库连接对象的创建和状态，只需要直接使用闭包里传进来的 Connection 连接对象进行查询即可。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;private init() {
 &amp;nbsp; &amp;nbsp;pool = ConnectionPool(options: DBConfigOption)
}&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; result: [Staff] = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; pool.execute { conn &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; conn.query(querySQL)
}&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;对于同名不同返回值的函数，Swift 会针对代码中返回值的类型推断进行分析，确定最终运行时调用哪一个函数。上面 conn.query 函数就会根据不同的返回值执行不同的函数，所以在编写上面代码的时候一定要显示的声明返回的是 Staff 数组，不然函数返回的结果就会不同。另外在 query 的实现中可以看到，最后的不同返回结果是从同一个函数返回的 tuple 中拿到的，这样的代码阅读起来很有效率。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;public func query&amp;lt;t: queryrowresulttype=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; ([T], QueryStatus) {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query: queryString)
}

public func query&amp;lt;t: queryrowresulttype=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; [T] { &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; (rows, _) = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query, args) as ([T], QueryStatus) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; rows
}

public func query(_ query: &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;, _ args: [QueryParameter] = []) throws -&amp;gt; QueryStatus { &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; (_, status) = &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; self.query(query, args) as ([EmptyRowResult], QueryStatus) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; status
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/t:&amp;gt;&amp;lt;/&lt;/span&gt;t:&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;拿到数据后可以将结果转换为自定义的数据类型。这里会将数据库查询结果解码为定义了默认值的结构体，并提供序列化方法给路由处理函数。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;static func decodeRow(r: QueryRowResult) throws -&amp;gt; Staff {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;try&lt;/span&gt; Staff(
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;id: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(0, 128, 128); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;0&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;name: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"name"&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;department: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"department"&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;timestamp: r &amp;lt;| &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"timestamp"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;)
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在开发完成后的测试中发现返回数据的时间戳总是差几个小时，但是直接查看数据库里的数据，时间戳又是正确的，于是一步步从获取数据到返回 response 调试看看哪里出的问题，最后发现是 Swift 时区没有自动设置为和系统相同，而一直是 UTC 时间，在生成时间戳文案的时候就出错了。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;所以在使用 Dateformatter 的时候需要手动设置时区，这也是 Foundation 的一个坑。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func resultDic() -&amp;gt; Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt; {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; dateFormatter = DateFormatter()
 &amp;nbsp; &amp;nbsp;dateFormatter.dateFormat = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"yyyy-MM-dd HH:mm:ss"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;dateFormatter.timeZone = TimeZone(identifier: &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Asia/Shanghai"&lt;/span&gt;) &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; dateString = dateFormatter.string(from: timestamp.date()) &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;.init(dictionaryLiteral:
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"id"&lt;/span&gt;, id),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"name"&lt;/span&gt;, name),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"department"&lt;/span&gt;, department),
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"timestamp"&lt;/span&gt;, dateString)
 &amp;nbsp; &amp;nbsp;)
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/string,&amp;gt;&amp;lt;/&lt;/span&gt;string,&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;在拿到数据后，可以将 HTTP Response 包装一下，在每个返回结果中都包括错误码，数据和时间戳这三个字段，并增加错误码对应的错误提示。这样不用在每个路由处理函数的最后都手动写一次。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;public func jsonBody(errorCode: ErrorCode, data: Dictionary&amp;lt;string, any=&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;""&lt;/span&gt;&amp;gt;?) -&amp;gt; [&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;: Any] {&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;var&lt;/span&gt; body = [&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;: Any]()
 &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"s"&lt;/span&gt;] = &amp;nbsp;[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"code"&lt;/span&gt;: errorCode.rawValue, &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"desc"&lt;/span&gt;: errorCode.description] &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;let&lt;/span&gt; jsonData = data {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"data"&lt;/span&gt;] = jsonData
 &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp;body[&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"t"&lt;/span&gt;] = UInt(&lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Date&lt;/span&gt;().timeIntervalSince1970) &amp;nbsp; &amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;return&lt;/span&gt; body
}&amp;lt;&lt;span class="" style="max-width: 100%; color: rgb(0, 153, 38); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;/string,&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;至此代码基本编写完成，为了方便调试，我们可以通过 Perfect 的 Filter 方法添加自定义日志，将每次的 HTTP 请求和返回的信息输出。这样我们不需要在每个路由处理函数中调用日志方法就可以输出所有请求的参数和最终返回的结果。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;func incomeMiddleware(request: HTTPRequest) {
 &amp;nbsp; &amp;nbsp;SLogInfo(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request URL: "&lt;/span&gt; + request.uri)
 &amp;nbsp; &amp;nbsp;SLogInfo(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request Method: "&lt;/span&gt; + request.method.description)
 &amp;nbsp; &amp;nbsp;SLogVerbose(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request Params: "&lt;/span&gt; + &lt;span class="" style="max-width: 100%; color: rgb(0, 134, 179); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;String&lt;/span&gt;(describing: request.params()))&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt; &amp;nbsp; &amp;nbsp;&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;for&lt;/span&gt; (name, detail) &lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;in&lt;/span&gt; request.headers {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SLogVerbose(&lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"Request HEADER: "&lt;/span&gt; + name.standardName.uppercased() + &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;" -&amp;gt; "&lt;/span&gt; + detail)
 &amp;nbsp; &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我使用的 SwiftLog 作为日志工具，没想到在部署测试的时候也出了问题，表现为开启服务的时候可以输出日志，一旦请求进来就崩溃，抛出 Segmentation fault。但是代码在开发机上运行正常，一路调试下来发现是 “(Date())” 的问题，这段代码第一次执行没问题，第二次执行就会导致崩溃。直接在服务端用 REPL 执行两次 pring(Date())也发生了相同的崩溃。推断应该是 Date 对象的 description 代码执行出错，于是自定义 Date 对象的 description 方法，避免调用自带的方法，问题解决。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;所有配置和路由函数开发完成后，开始设置 server 对象。Perfect 支持静态文件路由，可以设置静态文件的路径。这里推荐针对 macOS 设置静态文件路径单独设置，因为 Xcode 编译出的可执行文件并不在代码目录，因此在本地调试时候会出现找不到静态文件的问题。&lt;/p&gt;&lt;pre style="margin-top: 1.2em; margin-bottom: 1.2em; padding: 0px; max-width: 100%; color: rgb(62, 62, 62); font-size: 1em; widows: 1; font-family: Consolas, Inconsolata, Courier, monospace; line-height: 1.2em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;#&lt;span class="" style="max-width: 100%; font-weight: bold; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;if&lt;/span&gt; os(OSX)
server.documentRoot = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"~/webroot"&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;#elseif os(Linux)
server.documentRoot = &lt;span class="" style="max-width: 100%; color: rgb(221, 17, 68); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;"./webroot"&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;#endif&lt;/code&gt;&lt;/pre&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;代码开发完成后，使用 Docker 初始化 Swift 实例并拉取代码，使用 swift build -c release 生成可执行文件，将可执行文件和 libCHTTPParser.so、libCOpenSSL.so、libLinuxBridge.so 三个依赖库文件复制出来提交到目标 Docker 中即完成部署。目前 Swift 官方只支持 Ubuntu 系统，也有人尝试在 CentOS 上手动编译 Swift 源码，但由于缺少官方的全面测试所以不推荐在生产环境使用。&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;strong style="line-height: 25.6px; color: rgb(171, 25, 66);"&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Swift 作为服务端开发语言的新成员，有着不少的先天优势，比如智能的类型推导、强大的协议扩展、丰富好用的语法糖，这也是官方宣传的 Safe、Fast 和 Expressive 的具体体现。开源后的 Swift 吸引了更多的开发者参与其中，从 4.0 演进表也可以看到更多强力且有趣的功能包括反射、并发、稳定的 ABI 等。未来是美好的，现实是残酷的，以目前国内的 Swift 开发生态环境，在客户端尚且无法占据主流位置，更不用想挑战 Java、PHP、Python 等语言在服务端的地位。想要用 Swift 替代各大公司线上成熟的开发方案是不现实的，但可以从小做起，从辅助工具之类的角度着眼，先做出广泛使用的产品，逐步找到自己的定位，再扩展使用场景。私以为 Go 在这方面做的很好，Docker 的流行让更多人知道了 Go 这门语言且证明了其实力。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;目前看来 Swift 最需要解决的是 ABI 稳定性和跨平台兼容两大问题，对于 ABI 来说，之所以到 3.0 版本还没有稳定下来，是开发小组认为目前稳定 ABI 将无法去掉现有实现中错误的部分，且很可能带着补丁开发后续版本将成倍提高今后的开发难度。越早提交的代码留存率越低。这对于语言的开发是件好事，不用带着很多历史包袱开发新功能。但对于开发者来说这意味着在语言的新版本发布后不能方便的快速跟进，除非所有依赖的 Swift 代码库都及时跟进并发布基于新版本编译的代码库，这会大大降低使用 Swift 开发的积极性。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;另外 Server-Side Swift 目前只支持 Ubuntu 系统，Foundation 的移植也还在进行当中，并且各种兼容 Bug 频出，在开发过程中很容易遇到开发环境和部署环境运行效果不同的情景。好消息是针对后面的问题，Swift 开发团队成立了 Server APIs Work Group，工作组的目标就是提供服务端跨平台 API，消除平台相关代码差异，提供基础框架功能代替 C 库的引入，进一步降低服务端的开发门槛，提高客户端代码的可移植性。同时 Swift 3.1 的修改内容中明确说明了会改进 Swift on Linux 和 SPM 的质量，期待 2017 年春天发布的这个版本会给 Server-Side Swift 带来显著的改进。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065149e7wrTr.gif"/&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;/p&gt;&lt;section style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065149e7wrTR.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 17:11:40 +0800</pubDate>
    </item>
    <item>
      <title>携程是如何做用户画像的</title>
      <link>http://www.iwgc.cn/link/4697107</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;用户画像作为“大数据”的核心组成部分，在众多互联网公司中一直有其独特的地位。作为国内旅游OTA的领头羊，携程也有着完善的用户画像平台体系。目前用户画像广泛用于个性化推荐，猜你喜欢等；针对旅游市场，携程更将其应用于“房型排序”“机票排序”“客服投诉”等诸多特色领域。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本文将从目的，架构、组成等几方面，带你了解携程在该领域的实践。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(61, 167, 66); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;1.携程为什么做用户画像&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065151yrQLdb.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;首先，先分享一下携程用户画像的初衷。一般来说，推荐算法基于两个原理“根据人的喜好推荐对应的产品”“推荐和目标客人特征相似客人喜好的产品”。而这两条都离不开用户画像。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;根据用户信息、订单、行为等等推测出其喜好，再针对性的给出产品可以极大提升用户感受，能避免用户被无故打扰的不适感。同时针对不同画像的用户提供个性化的服务也是携程用户画像的出发点之一。&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(61, 167, 66); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;2.携程用户画像的架构&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(61, 167, 66); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;2.1.携程用户画像的产品架构&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065152EwVRih.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如上图所示，携程用户画像的产品架构大体可以总结为&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;注册&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;采集&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;计算&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;存储/查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;监控&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;所有的用户画像都会在”UserProfile平台”中进行注册，由专人审核，审核通过的画像才可以在“数据仓库”中流转；之后会通过用户信息、订单、行为等等进行信息采集，采集的目标是明确的、海量的、无序的。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;信息收集的下一步是画像的计算，携程有专人制定计算公式、算法、模型，而计算分为批量（非实时）和流式（实时）两种，经过严密的计算，画像进入“画像仓库”中；而根据不同的使用场景，我们又会提供实时和批量两种查询API供各调用方使用，实时的服务侧重高可用，批量服务侧重高吞吐；最后所有的画像都在监控平台中得到有效的监控和评估，保证画像的准确性。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;2.2.携程用户画像的技术架构&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065152ngFA20.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;携程发展到今天规模，更强调松耦合、高内聚，实行BU化的管理模式。而用户画像是一种跨BU的模型，故从技术架构层面，携程用户画像体系如上图所示。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;各BU都可以贡献有价值的画像，而基础部门也会根据BU的需要不断制作新的画像。画像经过开源且经我们二次开发的DataX和Storm进入携程跨BU的UserProfile数据仓库。在仓库之上，我们会有Redis缓存层以保证数据的高可用，同时有实时和借助elasticsearch两种方式的API，供调用方使用。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;该架构有如下关键点：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;有异步和实时两种通道满足不同场景、不同画像的需要，事实类画像一般采用实时计算方式，而复合类画像一般采用异步方式。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;携程强调专人专用，每个人做自己最适合的事。故整个UserProfile是多个团队合作完成的，其中包括但不限于各BU的开发、BI，基础的开发、BI等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;所有API都是可降级、可熔断的，可以根据需要切数据流量。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;由于用户画像极为敏感，出于数据安全的考虑，我们查询服务有严格的权限控制方案，所有信息必须经过授权才可以访问。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;出于对用户画像准确性负责的目的，我们有专门的UserProfile数据可视化平台监控数据的一致性、可用性、正确性。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上述是用户画像的总体描述，下面我将详细分享各个细节。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065152ExWRjh.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如上图所示，用户画像的注册在一个典型的Mis系统中完成，UserProfile数据的提供方在这里申请，由专人审核。申请时，必须填写画像的含义、计算方式、可能的值等。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065152SLa6xw.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; "&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(61, 167, 66); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;3.携程用户画像的组成&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(61, 167, 66); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;3.1.信息采集&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;基础信息的采集是数据流转的开始，我们会收集UserInfo（比如用户个人信息、用户出行人信息、用户积分信息）、UBT（用户在APP、网站、合作站点的行为信息）、用户订单信息、爬虫信息、手机APP信息等。而上述每个基础信息的采集又是一个专门领域。比如下图展示了用户订单信息采集流程。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065153g9yuVU.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;3.2.画像计算&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;基础信息是海量的、无序的，不经加工没有太大的价值。故用户画像的计算是数据流转的关键所在。我们的BI团队会制定严密的公式和模型，根据场景的需要，制定规则和参数，对采集信息做异步计算。这样的计算由于耗时较长，一般我们会采用T+N的方式异步更新，根据画像的不同，数据新鲜度的要求亦不同。动态和组合标签大多采用异步方式计算更新。Hive、DataX等开源工具被使用在这个步骤中。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;而有些画像是事实或对新鲜度要求比较高的，故我们会采用Kafka+Storm的流式方案去实时更新计算。比如下图，UBT（用户行为数据）使用消息通道Hermes对接Kafka+Storm为UserProfile的实时计算提供了有力的支持。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065153ldCy0Y.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;3.3.信息存储&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;用户画像的数据是海量的，被称作最典型的”大数据”，故Sharding分布式存储、分片技术、缓存技术被必然的引入进来。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;携程的用户画像仓库一共有160个数据分片，分布在4个物理数据集群中，同时采用跨IDC热备、一主多备、SSD等主流软硬件技术，保证数据的高可用、高安全。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;由于用户画像的的使用场景非常多、调用量也异常庞大，这就要求用户画像的查询服务一定要做到高可用。故我们采用自降级、可熔断、可切流量等方案，在仓库前端增加缓存。如下图所示，数据仓库和缓存的存储目的不同，故是异构的。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065153tmLH87.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;3.4.高可用查询&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;响应时间和TPS是衡量服务可用性的关键指标，携程要求所有API响应时间低于250ms(包括网络和框架埋点消耗)，而我们用户画像实时服务采用自降级、可熔断、自短路等技术，服务平均响应时间控制在8ms（包括网络和框架埋点消耗），99%响应时间控制在11ms。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065154meDz0Z.png"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;大部分场景都是通过单个用户获取用户画像，但部分营销场景则需要满足特定画像的用户群体，比如获取年龄大于30岁、消费能力强、有亲子偏好的女性。这种情况下会返回大量用户，此时就需要借助批量查询工具。经过多次技术选型，我们决定采用elasticsearch作为批查询的平台，封装成API后很好的支持上述场景。&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; box-sizing: border-box; font-weight: 700; font-size: 14px; word-wrap: break-word !important;"&gt;3.5.监控和跟踪&lt;/span&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;在数据流转的最后，数据的准确性是衡量用户画像价值的关键指标。基于高质量信息优于大数量信息的基调，我们设置了多层监控平台。从多个维度衡量数据的准确性。比如就用户消费能力这个画像，我们从用户等级、用户酒店星级、用户机票两舱等多个维度进行验证和斧正。同时我们还要监控数据的环比和同比表现，出现较大标准差、方差波动的数据，我们会重新评估算法。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/14870651541TieGE.jpg"/&gt;&lt;/center&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; min-height: 1em ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;上述所有环节组成了携程跨BU用户画像平台。当然技术日新月异，我们也在不断更新和局部创新，或许明年又会有很多新的技术被引入到我们用户画像中，希望我的分享对你有所帮助。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本文由携程技术中心投递，ID：ctriptech。作者：周源，携程技术中心基础业务研发部高级研发经理，从事软件开发10余年。2012年加入携程，先后参与支付、营销、客服、用户中心的设计和研发。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065154WPe9Bz.gif"/&gt;&lt;/p&gt;&lt;p style="font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;/p&gt;&lt;section style="font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1487065154e7wrTR.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 17:11:40 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】雅虎开源 TensorFlowOnSpark，LibRec 2.0.0 正式版发布</title>
      <link>http://www.iwgc.cn/link/4697108</link>
      <description>&lt;div class="article-content"&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Cloudaily网罗新鲜要闻，每日为你呈现&lt;span style="text-decoration: none; font-size: 14px; box-sizing: border-box; font-weight: 700;"&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;SAAS营销推广服务平台「瑞恩传媒」获数千万元A轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，瑞恩传媒正式对外宣布，公司已完成数千万人民币A轮融资，投资方为奥瑞金股份旗下的鸿金投资，在此之前瑞恩传媒曾在2015年8月获得清融信领投的千万级天使投资。瑞恩传媒是一家成立于2010年的智能跨屏数字广告技术企业服务平台，通过为企业提供基于互联网大数据精准营销及媒体整合营销服务，满足企业市场营销多元及个性化需求，旨在通过立体化整合互联网媒介资源，提供全方位网络广告营销解决方案。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;阿里云扩建香港数据中心，海外业务规模增速超300%&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;阿里云在香港宣布，其位于香港的数据中心完成扩建。扩建后，该数据中心可提供的计算能力规模翻倍，可满足亚太地区不断增长的云计算资源需求。据悉，阿里云于2014年在香港设立数据中心，而后受强劲的市场需求带动，于2015年对该数据中心进行过一次扩建。阿里云副总裁喻思成此前表示，阿里云在海外市场的份额有显著增长，同比增速约有300%以上，“全球IT市场都在向云转型，我们看到市场有极大的潜力。”&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;黑龙江省将创新“互联网+展会”发展模式 打造大数据会展服务平台&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;13日，2017年黑龙江省贸促工作会议在哈尔滨召开。记者从会议上获悉，黑龙江省将创新“互联网+展会”发展模式，打造大数据会展服务平台。会议对2017年工作进行了安排和部署。会议指出，要积极参与“龙江丝路带”建设，创新服务手段，探索新的发展路径。创新“互联网+服务”业务模式，整合优化业务流程，结合伙伴信息系统，形成业务大数据。深化机构和国际商会改革发展，激发内生动力。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;雅虎开源 TensorFlowOnSpark，TensorFlow 结合 Spark&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;近日，Yahoo 开源了 TensorFlowOnSpark，这是一个大数据集群的分布式深度学习，将 TensorFlow 带到 Apache Spark 集群上。Yahoo 在博客上表示，深度学习（DL）近年来发展迅速，为了从大量的数据中挖掘价值，需要部署分布式深度学习。现有的深度学习框架，往往需要设立单独的深度学习数据组。这强迫我们为同一个机器学习流水线创建多个程序（见下图）。维护多个独立的数据组，要求我们在它们之间传输海量数据集——这导致不必要的系统复杂性和端到端的学习延迟。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;LibRec 2.0.0 正式版发布： 基于机器学习的大数据推荐系统&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;LibRec 是领先的推荐系统Java开源算法工具库，覆盖了70余个各类型推荐算法，有效解决评分预测和物品推荐两大关键的推荐问题。推荐系统是机器学习和大数据技术的经典实际应用，旨在提供高效准确的个性化物品推荐，是现代Web应用的重要组件。项目结构清晰，代码风格良好，测试充分，注释与手册完善。目前项目使用GPL3.0协议开源在github中，欢迎大家试用。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;2017全球最具创新力公司榜单：阿里巴巴、腾讯、小米、华为上榜&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;2月13日Fast Company发布了2017全球最具创新力榜单，在最受关注的2017全球最具创新力公司榜单中，第一名被美国亚马逊公司夺得，谷歌公司屈居亚军，Uber位列第三，苹果第四位，传统的巨头中微软排名第31。而来自中国的五家公司则占据了全球最具创新力公司榜单的第11名至第15名，分别是阿里巴巴、腾讯、小米、步步高、华为。这里面小米的上榜理由是有趣的硬件设计，包括小米MIX和小米Note2新机发布等。在最具创新力的中国公司排名中，前三名是阿里巴巴、腾讯、小米，第四名是步步高，华为占据第五名，然后是大连万达、携程以及滴滴。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;SAP沾光数字转型红利 中国企业云市场2016年规模超500亿&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;作为全球最大的管理软件开发商之一，SAP在2013-2014年间，通过收购电商解决方案提供商hybris、旅游和支付软件提供商Concur等企业，大力发展云业务。2014财年SAP云业务年度销售额首次突破10亿欧元大关。2016年，SAP扩展了与中国电信旗下的中国通信服务股份有限公司的合作，并与阿里云建立了战略联盟。2月8日，SAP全球高级副总裁、SAP大中华区总裁纪秉盟表示“在SAP我们认为云代表着整个公司未来发展的希望和机会。因为实际上在我们看来对于所有的计算而言，云都是未来唯一发展的方向。”当天还宣布，SAP大中华区的本地数据中心现已正式启用，将向中国客户提供了四款基于云的解决方案。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;自动化数据分析服务平台“Datablau蓝图明册”获数百万元天使轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;Datablau蓝图明册宣布完成数百万元天使轮融资，投资方是跨境投资机构美国中经合集团。Datablau蓝图明册致力于让企业内部数据可见、可识、可控、可融，更易挖掘价值。它帮助企业进行敏捷数据分析，建立数据模型，解决从原始的数据到业务视图的问题，加速数据分析的过程，降低企业的运营成本。&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;"&gt;&lt;span style="font-size: 14px;"&gt;发展大数据是互联网时代必然选择&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;随着信息化的推进，数据已经成为一种重要的资源。工信部提出，未来，大数据将在工业生产全流程中进行应用，一方面大力提升企业内部运行管理效率，另一方面，发展基于大数据的个性化定制，提升制造过程智能化和柔性化程度。工信部日前印发《大数据产业发展规划2016-2020年》，特别提出加快推进大数据产业应用能力，到2020年，大数据相关产品和服务业务收入突破1万亿元，年均复合增长率保持30%左右。&lt;/span&gt;&lt;/p&gt;&lt;p style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/14870651561UjeGE.jpg"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p style="box-sizing: border-box;"&gt;&lt;span style="font-size: 14px; text-decoration: none;"&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br style="box-sizing: border-box;"&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description>
      <pubDate>Tue, 14 Feb 2017 17:11:40 +0800</pubDate>
    </item>
    <item>
      <title>平安云构建解密</title>
      <link>http://www.iwgc.cn/link/4680347</link>
      <description>&lt;div class="article-content"&gt;&lt;p&gt;&lt;span style=" font-size: 14px; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; "&gt;平安云诞生于平安集团的科技大本营，多年的金融IT经验积累使得平安云对金融行业架构规范，金融业务系统流量特征及安全合规性等均有独到的见解。从13年底立项以来，平安金融云一直尽可能走开源和自研结合的路线，自主研发了IaaS层的全套产品线，为金融行业客户提供可靠、弹性、高效、集约的基础架构层服务。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;目前金融云平台已涵盖平安集团90% 以上的业务公司，支撑60% 的业务系统投产，并延伸至外部直销银行及金融机构，承载过亿的互联网金融用户。平安金融云将持续推动集团3.0“大金融资产+ 大医疗健康”战略更快发展，打造金融平台业务，占领数据、生态阵地，为集团互联网、业务云、生态圈的爆发式增长保驾护航。在“2016年金融信息化10件大事”评选中，平安云排名12，在参选的金融云平台里排名第一。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;所有的云服务中，都会涉及到三项台柱技术领域：计算、存储、网络。本文将介绍平安云构建过程中在这三大技术所做的实践，希望对尝试搭建云服务的读者有借鉴意义。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976585piHC42.jpg"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图1 平安云平台级总体架构&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如图1，平安云后台实现计算、存储、网络的资源管理、以及对用户的交付服务。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;计算服务&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;当下的计算机领域呈现出人云亦云的现象，但最出名的还是以AWS、Azure、阿里云为代表的云计算服务，这说明计算是云里面最重要的服务，从3A的营收占比来看，也的确是这么回事。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;以AWS为例，最初负责主机运维的工作人员出于提高资源利用率和额外创收考虑，提议将每年为黑色星期五准备的大规模资源在平日时间段以计算服务的形式出售，由此，云以计算服务开的头。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;平安云在构建过程中实际上也是重复了这一过程，计算云化技术的决策选型是创始团队要攻克的第一关，而绝则取决于现实：一方面要支持日益持重的KVM虚拟化，另一方面需兼容过去已大量投产的VMware虚拟化。这两个目标具备很高的实线价值——即支持业务无感知从传统VMware环境切换到云管理的VMware，又使得一些创新的互联网应用在没有包袱的背景下自由使用KVM。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;基于以上考虑，我们主要调研了OpenStack与CloudStack，其余的方案实现功能相似，社区热度相差太大而不予考虑。最终我们出于以下因素选择了CloudStack。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;成熟度：决策期间，当时OpenStack刚开始发展，虽然社区火热但成熟度较低，难以满足早日平台搭建落地的现实目标；CloudStack曾是cloud.com的商用版本，成熟度相对较好，并且已有多个成熟的客户案例可借鉴；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;普及性：金融系统内业务系统通常以Java为开发语言，CloudStack上手容易&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;企业特性：CloudStack内部架构逻辑更符合企业应用系统设计，相对于分布式组件化的OpenStack，部署CloudStack的方式更适合当时的平安集团IT特性；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;技术局限性：团队成员熟悉计算和存储，网络方面的需求没有考虑太深&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;CloudStack的架构比较小巧紧凑，容易部署，但也有不尽人意的方面，其缺点主要在于对网络功能的支持不够丰富、灵活。这里我们有独特的做法：CloudStack相当于完成OpenStack Nova的功能，只用来进行计算虚拟化资源管理。为了达到对网络功能的支持效果，我们对CloudStack做了二次开发，增加了一个和OpenStack Neutron对接的Plugin，使Neutron能够感知到虚拟机的生命周期。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976585FyXSki.jpg"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图2 计算服务CloudStack架构图&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如图2，CloudStack的Network功能被极度的弱化，工作主要是管理计算所需的IP资源、VLAN等，编排物理网络的工作交给了Neutron。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;存储服务&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;存储和计算不分家，平安云存储服务根据技术和场景的演变解决方案也变得丰富多样：&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本地盘和高性能本地盘：提供高IO，同时缩小存储故障域；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;SAN和NAS：传统方案，支持计算HA；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;本地盘高可用和VSAN等超融合方案：本地盘方案的升级，在高IO同时提供HA；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Ceph提供块存储和对象存储：块存储作为SAN和NAS的替代方案，对象存储可以提供用户数据备份服务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976586h9yuWU.jpg"/&gt;&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图3 块存储服务架构图&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;如图3，块存储服务的交付实际上是比较简单的，通过CloudStack对接到每个Hypervisor的CS-Agent或者vCenter，将VM的磁盘IO和后端的Ceph、NAS、本地盘、SAN等存储资源池挂接。存储资源池配给通常比较充足，资源监控和管理通过额外的运维系统完成。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976586slKG76.jpg"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图4 使用Ceph提供块、文件、对象存储服务&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Ceph是目前最流行的软件定义存储的开源解决方案，在云环境的存储服务中提供了非常好的可定制性和可扩展性。作为统一存储，Ceph在最底层原生的RADOS对象存储的基础上通过模块化的方式分别提供的块存储（RBD）, 对象存储（RGW）和文件存储&lt;/span&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;（CephFS）。为了把原生的开源Ceph存储应用到不同的业务场景，我们在性能优化和部署，配置，故障修复方面做了大量的研究和实践。基于Ceph开源社区良好的发展趋势，Ceph将会是一个很好的兼顾性能、成本、扩展性的云存储解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;网络服务&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;相对于计算与存储，网络是一门单独的领域。通常懂计算的都会了解一些存储，懂存储的也会知道一些计算，但是都会对网络感到陌生，原因也很简单，计算中数据落地涉及到存储，存储也有Server Storage，操作对象基本上是PC Server、Linux，而网络人员操作对象则是各种厂家的Switch、Firewall、Router和LB，操作对象不同，且都是非常成熟的领域，因此知识、技能很难与计算、存储融合。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;网络在云中最核心的作用有2个：&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;提供计算和存储互联的高速公路，这个是物理网络实现的功能，不管是云还是传统基础架构，网络都实现了这些需求；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;提供租户的虚拟网络，通常是在物理网络中通过虚拟化实现的，这是云独有的需求，在网络界术语中，在物理网络中为每个租户提供虚拟网络的技术称为网络虚拟化（Network Virtualization）简称NV，是当今网络界最热的要点，不同云服务商的NV方案大相径庭。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;大多数熟知的云都会最初把NV做到Linux内部，而不会交给专门的网络去实现，这也是对上述理论的验证。NV在云计算发展过程中，也是最为缓慢的，但可以看到各大公有云都在使用SDN和NFV来补齐这部分短板。平安云的起步较晚，可以利用后发优势，从一开始就考虑物理网络上实现NV，原因比较简单，物理网络设备是连接大量服务器的专用设备，物理网络设备供应商不会对NV视而不见，截止至今日，物理网络设备NV技术已经相对成熟，将NV从主机剥离出来，也有利于降低主机技术集成复杂度，提升运维效率，平安云网络的优势主要是通过对方案的主导性对物理网络设备厂家研发力量进行整合，而不是一味在主机上单干。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976586WPeaBA.jpg"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图5 平安云网络服务模型&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;平安云把网络虚拟化分为Fabric服务、NF（网络功能）、增值服务3部分：&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;Fabric，实现虚拟网络中的租户Switch和Router功能，网络人士称之为L2和L3功能，租户可以在Fabric服务中管理子网、租户路由表等功能，从而实现Fabric内租户计算节点实现互访，控制边界路由等功能，该服务在网络中属于低频操作类，租户只有在创建时需要关心，因此这部分也是租户比较陌生的；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;NF，实现虚拟网络的租户VPN、访问控制、NAT和LB 等功能，对应网络人士熟知的L3、L4和L7功能，这些服务在网络中属于中高频操作类，租户比较熟悉；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;增值服务，比如CDN、大流量高防、域名管理、互联网流量分析、互联网质量探测、安全专线等，这些服务涵盖低中高频类，租户比较熟悉。&amp;nbsp;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;为了让这三项服务能够高效、科学地编排，平安云使用了可扩展性强的Neutron，并依托Neutron构建了统一编排平台Network Service Platform（NSP），同时对Fabric、NF和增值服务进行管理。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976586hazuWU.jpg"/&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;图6 基于Neutron的NSP平台架构&lt;/span&gt;&lt;/center&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;NSP平台可以将来自不同厂家的网络设备、第三方网络服务都通过容易扩展的Service Plugin来对接，而核心NSP维护的是抽象网络服务数据，编排对接Portal和CloudStack都使用这一层抽象的网络模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; color: rgb(64, 118, 0); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;除了网络之外，计算和存储都依托比较成熟的方案搭建，平安云收获最宝贵的是架构治理和业务入云的经验，这种务实的战略是平安云能够在过去2年中迅速成长的关键。“架构自主、但不做大的修改，以用为先”，对于很多企业来说，也是可以借鉴的。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;网络比较特殊，在很多云计算团队中，网络都是一个比较边缘化的领域，因为日常面对的硬件和服务器实在是过于不同，Neutron作为计算领域的专家提出的模型，并不一定是真实网络的抽象，各个网络设备供应商在面对OpenStack浪潮中，更多地是遵从Neutron，而并没有发展Neutron，有幸平安云在项目早期就很重视网络服务，得以组建开发团队基于Neutron做了很多务实的拓展。使NSP能够在不到1年的时间就能够完成开发并且上线。&lt;/span&gt;&lt;/p&gt;&lt;p style=" max-width: 100%; min-height: 1em; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=" max-width: 100%; color: rgb(62, 62, 62) ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;p style="max-width: 100%; min-height: 1em; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; font-size: 14px; color: rgb(136, 136, 136); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;作者简介：丘子隽，云平台事业部云网络服务组(责编／魏伟)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style="max-width: 100%; min-height: 1em; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976586xqPKca.gif"/&gt;&lt;span style="max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role="outer" label="Powered by 135editor.com" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; font-family: 微软雅黑; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" data-tools="135编辑器" data-id="87560" style="max-width: 100%; box-sizing: border-box; border: 0px none; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; min-height: 1em; text-align: center; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section style="max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: 0.5em; margin-bottom: 0.5em; max-width: 100%; box-sizing: border-box; text-align: center; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; border: 1px solid rgb(204, 204, 204); box-shadow: rgb(204, 204, 204) 1px 1px 5px; display: inline-block; word-wrap: break-word !important;"&gt;&lt;img src="http://wxrss.b0.upaiyun.com/1486976587hG50sq.jpg"/&gt;&lt;section class="" style="margin-top: -0.6em; padding: 10px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; display: inline-block; width: 238px; vertical-align: top; word-wrap: break-word !important;"&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(202, 198, 198); letter-spacing: 2px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; line-height: 24px; word-wrap: break-word !important;"&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="" powered-by="xiumi.us" style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="margin-top: -5px; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;section class="" style="max-width: 100%; box-sizing: border-box; color: rgb(133, 118, 106); font-size: 15px; letter-spacing: 3px; word-wrap: break-word !important;"&gt;&lt;p style="max-width: 100%; box-sizing: border-box; min-height: 1em; word-wrap: break-word !important;"&gt;&lt;strong style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&amp;nbsp;&lt;strong style="max-width: 100%; color: rgb(202, 198, 198); letter-spacing: 2px; line-height: 25.6px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 19.2px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;品读之后，&lt;/span&gt;&lt;span style="max-width: 100%; color: rgb(160, 160, 160); font-size: 12px; line-height: 1.6; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;</description>
      <pubDate>Mon, 13 Feb 2017 16:59:29 +0800</pubDate>
    </item>
  </channel>
</rss>
