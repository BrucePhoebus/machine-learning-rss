<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>PC VR 游戏的 CPU 性能分析与优化</title>
      <link>http://www.iwgc.cn/link/979ceb26f1d0beca9cef85fc47a76d27bfcb1168</link>
      <description>
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;作者：&lt;/strong&gt;王文斓，英特尔软件与服务事业群合作伙伴关系部的资深应用工程师。毕业于台湾大学电机工程学系和通信工程学研究所。&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;责编：&lt;/strong&gt;屠敏，技术之路，共同进步。欢迎技术投稿、给文章纠错，请发送邮件至&lt;span&gt;tumin@csdn.net&lt;/span&gt;。&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;声明：&lt;/strong&gt;本文为&lt;span&gt;《程序员》&lt;/span&gt;原创文章，未经允许不得转载，更多精彩文章请订阅 &lt;span&gt;2017 年《程序员》&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;伴随着全新VR体验所带来的双目渲染、高分辨率和低延时等要求，对CPU和GPU都造成了极大的计算压力，一旦VR应用出现性能问题，非常容易造成用户眩晕并带来极差的用户体验，因此性能问题对于VR体验的好坏格外重要。本文将集中介绍VR需要高计算量的原因, 以及分享如何利用工具查找VR应用的性能问题和CPU瓶颈所在。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;自从三大头显厂商Oculus、HTC和Sony在2016年发布了虚拟现实（VR）头显&lt;span&gt;产品后，由于能够带来卓越的沉浸式体验，VR越来越受到市场的关注和重视，而VR也被认为会取代智能手机成为下一代的计算平台。然而，尽管虚拟现实能给用户带来身临其境般的沉浸式体验，但相比传统应用，其具有双目渲染、低延迟、高分辨率以及高帧率等严苛要求，因此极大地增加了CPU和GPU的计算负载。鉴于此，性能问题对于虚拟现实应用尤为重要，因为VR体验如果没有经过优化，容易出现掉帧等问题，让用户使用时发生眩晕的情况。在本文中，我们将介绍一种适用于所有游戏引擎及虚拟现实运行时（VR runtime）的通用分析方法，分析基于PC的VR游戏面临的性能问题。我们以腾讯的一款PCVR游戏《猎影计划》为例展示如何利用这套方法进行分析。在此之前我们先来了解一下VR游戏对性能要求较传统游戏高的四大原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VR游戏和传统游戏在硬件性能需求上的区别&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;相较于传统游戏，VR游戏由于存在高帧率、双目渲染及容易产生眩晕等特性，导致对于硬件计算能力的需求显著上升。下面从四个方面比较一下VR游戏和传统游戏的区别：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;像素填充率&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以一个1080p 60fps游戏为例，像素填充率为124Mpixels/sec。如果是支持高端VR头盔（Oculus Rift、HTC Vive）的游戏，像素填充率为233Mpixels/sec（分辨率2160x1200，帧率90fps）。但是中间需要一个较大的渲染目标，避免图像经过反形变校正后产生用户可见并且没被渲染到的区域，导致视角（FOV）降低。根据SteamVR的建议，需要放大的比率为1.4倍，所以实际的像素填充率为457M pixels/sec（分辨率3024x1680，帧率90fps），我们可以通过stencil mesh把最终不会被用户看到的区域剔除掉以减少需要渲染的像素，经过优化后的像素填充率为378M pixels/sec，但仍然是传统1080p 60fps游戏的3倍像素填充率。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;双目渲染&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;从游戏渲染管线的角度来看，传统游戏中每一帧的渲染流程大致如下，其中蓝色的部分是CPU的工作，绿色的部分是GPU的工作。但由于视差的关系，VR游戏需要对左右眼看到的画面分别渲染不同的图像，所以下面的渲染管线也要对左右眼各做一次，从而增加了计算需求（在VR中两眼的视差较小，可以利用GBuffer或提交渲染指令后用view matrix变换等方法降低实际计算）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/ec7abf30f72eaba75416ad1d26cd0d7ad730692d"/&gt;&lt;/p&gt;&lt;p&gt;图1 传统游戏渲染流程&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;用户体验&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;对于传统游戏来说，平均帧率达标往往就代表了一个流畅的游戏体验。然而对于VR游戏来说，即使平均帧率达标，但只要出现了连续掉帧，哪怕只有非常少数的情况下才发生，都会破坏了整个游戏体验。这是由于连续掉帧会使用户产生眩晕，一旦产生眩晕的感觉，即使后续的画面不掉帧，用户已经感觉到不适，游戏体验已经打了折扣。所以在游戏设计的时候，需要确保场景在最差的情况下也能达标（高端头显下为90fps），否则会影响游戏体验。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;另外，由于在VR场景中用户可以跟可移动区域内的对象作近距离观察和交互，所以必须开启抗锯齿以保证画面的清晰度。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;延迟&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在传统游戏里从控制输入到画面输出的延迟往往达到约100ms的等级[1]，FPS类别的游戏对延迟要求较高，但一般也在约40ms的等级。而VR里MTP延迟（motion-to-photon latency，从用户运动开始到相应画面显示到屏幕上所花的时间）低于20ms是基本要求，研究发现对于部分比较敏感的用户，延迟需要达到15ms甚至7ms以下[2]。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;低延迟的要求除了使VR游戏必须运行在高帧率外，同时也降低了硬件的运行效率，导致同样的工作量需要更强的硬件来驱动，原因正是低延迟要求使VR游戏的渲染管线必须和传统游戏不一样，而其中CPU对VR性能的影响扮演了重要的角色。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VR游戏和传统游戏在渲染管线上的区别&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;我们先来看看VR渲染管线和传统渲染管线的区别。如图2所示为传统游戏的渲染管线，其中CPU和GPU是并行处理的，以实现最高的硬件利用效率。但此方案并不适用于VR，因为VR需要较低和稳定的渲染延迟，传统游戏的渲染管线无法满足此项要求。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以图2为例，第N+2帧的渲染延迟会远高于VR对延迟的最低要求，因为GPU必须先完成第N+1帧的工作，再来处理第N+2帧的工作，因而使得第N+2帧产生了较高的延迟。此外，由于运行情况&amp;nbsp;&lt;/p&gt;&lt;p&gt;不同，我们可以发现第N帧、第N+1帧和第N+2帧的渲染延迟也会有所差异，这对VR的体验也是不利的，因为一直变动的延迟会让用户产生晕动症（simulation sickness）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/97a06debbb2805c1480db2069f7a1bfafa9b9c43"/&gt;&lt;/p&gt;&lt;p&gt;图 2 传统游戏的渲染管线&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;因此，VR的渲染管线实际上如图3所示，这样能确保每帧可以达到最低的延迟。在图3中，CPU和GPU的并行计算被打破了，这样虽然降低了效率，但可确保每帧实现较低和稳定的渲染延迟。在这种情况下，CPU很容易成为VR的性能瓶颈，因为GPU必须等待CPU完成预渲染（绘制调用准备、动态阴影初始化、遮挡剔除等）才能开始工作。所以CPU优化有助于减少GPU的闲置时间，提高性能。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/e6d2f187ad51dffbb89d53c7fe3c540b1b41390f"/&gt;&lt;/p&gt;&lt;p&gt;图 3 VR游戏的渲染管线&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;《猎影计划》VR游戏背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;《猎影计划》是腾讯旗下利用Unreal Engine 4开发的一款基于PC的DirectX 11 FPS虚拟现实游戏，支持Oculus Rift和HTC Vive。为了使《猎影计划》在英特尔处理器上实现最佳的游戏体验，我们与腾讯紧密合作，努力提升该游戏的性能与用户体验。测试结果显示，在本文所述的开发阶段，经优化后帧率得到了显着提升，从早期测试时跑在Oculus Rift DK2（分辨率1920x1080）上的每秒36.4fps提升至本次测试时跑在HTC Vive（分辨率2160x1200）上的每秒71.4fps。以下为各阶段使用的引擎和VR运行时版本：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;初始开发环境：Oculus v0.8 x64运行时和Unreal 4.10.2；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;本次测试的开发环境：SteamVR v1463169981和Unreal 4.11.2。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;之所以在开发阶段会使用到不同的VR运行时的原因在于，《猎影计划》最初是基于Oculus Rift DK2开发的，稍后才迁移至HTC Vive。而测试显示采用不同的VR运行时在性能方面没有显着的差异，因为SteamVR和Oculus运行时采用了相同的VR渲染管线（如图3所示）。在此情况下，渲染性能主要由游戏引擎决定。这点可在图6和图15中得到验证，SteamVR和Oculus运行时在每帧的GPU渲染结束后才插入GPU任务（用于镜头畸变校正），而且仅消耗了少量GPU时间（约1ms）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如图4所示为优化工作前后的游戏截图，优化之后绘制调用次数减少至原来的1/5，每帧的 GPU执行时间平均从15.1ms缩短至9.6ms，如图3和4所示：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/308884de743c7ba315103e1ea08a5e3c55a6ad5a"/&gt;&lt;/p&gt;&lt;p&gt;图4 优化前（左）后（右）的游戏截图&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;测试平台的规格：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;英特尔酷睿i7-6820HK处理器（4核，8线程）2.7GHz&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NVIDIA GeForce GTX980 16GB GDDR5&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;图形驱动程序版本：364.72&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;16GB DDR4 RAM&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Windows10 RTM Build 10586.164&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;初步分析性能问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;为了更好地了解《猎影计划》的性能瓶颈，我们先综合分析了该游戏的基本性能指标，详情见表1。表中数据通过几种不同的工具收集，包括GPU-Z、TypePerf和Unreal Frontend等。将这些数据与系统空闲时的数据比较可得出以下几点结论：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;游戏运行时的帧率低（36.4fps）而且GPU利用率也低（GTX980上为49.64%）。如果能够提高GPU利用率，帧率也会提高。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;大量的绘制调用。DirectX 11中的渲染为单线程渲染，虽然微软提出deferred rendering context[3]可以用另一线程对渲染指令进行缓存以实现多线程渲染，但结果差强人意[4]。所以相对于DirectX 12，DirectX 11渲染线程具有相对较高的绘制调用开销。由于该游戏是在DirectX 11上开发的，并且为了达到低延迟，VR的渲染管线打破了CPU和GPU的并行计算，因此如果游戏的渲染线程工作较重，很容易会出现CPU瓶颈导致帧率显着降低。在这种情况下，较少的绘制调用有助于缓解渲染线程瓶颈。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;由表中可以看出，CPU利用率似乎不是问题，因为其平均值只有13.58%。但从下文更进一步的分析可以看出，《猎影计划》实际上存在CPU性能瓶颈，而平均CPU利用率高低并不能说明游戏是否存在CPU性能瓶颈。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/e9731209b2856ca8317b7413a32b6c80e286f6e1"/&gt;&lt;/p&gt;&lt;p&gt;表1 优化前游戏的基本性能指标&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面我们会利用GPUView和Windows评估和部署工具包（Windows Assessment and Deployment Kit，Windows ADK）[5]中的Windows性能分析器（Windows Performance Analyzer，WPA）对《猎影计划》的性能瓶颈进行分析。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;深入探查性能问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;GPUView[6]工具可用于调查图形应用、CPU线程、图形驱动程序、Windows图形内核等性能和相互之间的交互情况。该工具还可以在时间轴上显示程序是否存在CPU或GPU性能瓶颈。而Windows性能分析器可用于跟踪Windows 事件（Event Tracing for Windows，ETW），并生成相应事件的数据和图表；WPA同时具备灵活的用户界面（UI），通过简单操作即可查看调用堆栈、CPU 热点、上下文切换热点等，它还可以用来定位引发性能问题的函数。GPUView和Windows性能分析器都可以用于分析由Windows性能记录器（Windows Performance Recorder，WPR）采集到的事件追踪日志（Event Trace Log，ETL）。Windows性能记录器可通过用户界面或命令行运行，其内建的配置文件可用来选择要记录的事件。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;对于VR应用，最好先确定其计算是否受限于CPU、GPU或二者皆是，以便将优化工作的重点集中在对性能影响最大的瓶颈，最大限度提升性能。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;图5为优化前《猎影计划》在GPUView中的时间线视图，其中包括GPU工作队列、CPU上下文队列和CPU线程。根据图表我们可以看出：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;帧率大约为37fps。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;GPU负载大约为50%。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;此版本容易使用户眩晕，因为运行帧率远低于90fps。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如GPU工作队列所示，只有两个进程向GPU提交了任务：Oculus VR运行时和游戏本身。Oculus VR运行时在帧渲染的最后阶段插入后处理工作，包括畸变校正、色彩校正和时间扭曲等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;从图中可以看出《猎影计划》同时存在CPU和GPU瓶颈。&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;在CPU瓶颈方面，GPU有大约50%的时间都处于空闲状态，主要原因是受到了一些CPU线程的影响而导致GPU工作没法及时被提交，只有这些线程中的CPU任务完成后GPU任务才能被执行。这种情况下如果对CPU任务进行优化，将能够极大地提升GPU的利用率，使GPU能执行更多的任务，从而提高帧率。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在GPU瓶颈方面，从图中我们可以看出，即使所有GPU空闲时间都能够被消除，GPU仍然需要大于11.1ms的时间才能完成一帧的渲染（这里约为14.7ms），因此如果不对GPU进行优化，此游戏&amp;nbsp;&lt;span&gt;的帧率不可能达到Oculus Rift CV1和HTC Vive等VR头显要求的90fps。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/cb2c8913805809dbf1c510e72797f8dbc2642d1b"/&gt;&lt;/p&gt;&lt;p&gt;图 5 GPUView分析《猎影计划》时间线视图&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;改善帧率的几点建议：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;物理和AI等非紧急的CPU任务可以延后处理，使图形渲染工作能够尽早被提交，以缩短CPU瓶颈时间。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;有效应用多线程技术可增加CPU并行性，减少游戏中的CPU瓶颈时间。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;尽量减少或优化容易导致CPU瓶颈的渲染线程任务，如绘制调用、遮挡剔除等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;提前提交下一帧的CPU任务以提高GPU利用率。尽管MTP延迟会略有增加，但性能与效率会显着提高。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;DirectX 11具有高绘制调用和驱动程序开销。绘制调用过多时渲染线程会造成严重的CPU瓶颈。如果可以的话考虑迁移至DirectX 12。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优化GPU工作（如过度绘制、带宽、纹理填充率等），因为单帧的GPU处理时间大于11.1ms，所以会发生丢帧。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;为了更深入探查CPU的性能问题，我们结合Windows性能分析器来分析从GPUView中发现的CPU瓶颈（通过分析同一个ETL文件），以下介绍分析和优化的主要流程（Windows性能分析器也可用于发现CPU上下文切换的性能热点，对该主题有兴趣的读者可以参考&lt;span&gt;这里&lt;/span&gt;了解更多详情）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;首先我们需要在GPUView中定位出VR游戏存在性能问题的区间。在GPU完成一帧的渲染后，当前画面会通过显示桌面内容（Present）函数被提交到显示缓存，两个Present函数的执行所相隔的时间段为一帧的周期，如图6所示（26.78ms，相当于37.34fps）。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/6c85f768b58b8797b3c9e7b9a9e2eb0638f65e5b"/&gt;&lt;/p&gt;&lt;p&gt;图 6： GPUView分析《猎影计划》时间线视图（单帧）注意导致GPU闲置的CPU线程&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;注意在GPU工作队列中有不少时间GPU是闲置的（例如一开头的7.37ms），这实际上是由CPU线程瓶颈所造成，即红框所圈起来的部分。原因在于绘制调用准备、遮挡剔除等CPU任务必须在GPU渲染命令提交之前完成。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如果使用Windows性能分析器分析GPUView所示的CPU瓶颈，我们就能找出导致GPU无法马上执行工作的对应CPU热点函数。图7-11显示Windows性能分析器在GPUView所示的同一区间下，各CPU线程的利用率和的调用堆栈。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/7c57ef4200f05ca847aea3d086c70934bd7ec1d5"/&gt;&lt;/p&gt;&lt;p&gt;图 7 Windows性能分析器分析《猎影计划》时间线视图，与图6为同一时间段&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接下来让我们详细分析每个CPU线程的瓶颈。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/ace2fec2a6e286c2c3588ecb6dffb57fa02a61b0"/&gt;&lt;/p&gt;&lt;p&gt;图 8： 渲染线程T1864的调用堆栈&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;由图8的调用堆栈可以看出，渲染线程中最主要的三个瓶颈是：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;静态网格的基本信道渲染（50%）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;动态阴影初始化（17%）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;计算视图可视性（17%）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以上瓶颈是由于渲染线程中存在太多的绘制调用、状态变换和阴影图渲染所造成。优化渲染线程性能的几点建议如下：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在Unity中应用批处理或在Unreal中应用actor融合以减少静态网格绘制。将相近对象组合在一起，并使用细节层次（Level Of Detail，LOD）。合并材质以及将不同的纹理融入较大的纹理集都有助于提升性能。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在Unity中使用双宽渲染（Double WideRendering）或在Unreal中使用实例化立体渲染（Instanced Stereo Rendering），减少双目渲染的绘制调用提交开销。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;减少或关闭实时阴影。因为接收动态阴影的对象将不会进行批处理，从而造成绘制调用问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;减少使用会导致对象被多次渲染的特效（反射，逐像素光照，透明或多材质对象）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/32db012a0c3e09831e29c6d5208e1b00e1c1a97c"/&gt;&lt;/p&gt;&lt;p&gt;图 9 游戏线程T8292的调用堆栈&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;图9显示游戏线程最主要的三个瓶颈是：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;设置动画评估并行处理的前置工作（36.4%）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;重绘视口(view port)（21.2%）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;处理鼠标移动事件（21.2%）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;以上三大问题可以通过减少视口数量，以及优化CPU并行动画评估的开销来解决，另外需要检查CPU方面的鼠标控制使用情况。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;工作线程（T8288，T4672，T8308）：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/11b03a5cdbfa7c4b9759cafd74e75aee1c66eaed"/&gt;&lt;/p&gt;&lt;p&gt;图 10 工作线程T8288的调用堆栈&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/86dd829b5efbe758b53a9524d84d56e8cd430f65"/&gt;&lt;/p&gt;&lt;p&gt;图 11 工作线程T4672的调用堆栈&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/10bebb8de3414206d4472775c01d2b9a71300336"/&gt;&lt;/p&gt;&lt;p&gt;图 12 工作线程T8308的调用堆栈&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;这些工作线程的瓶颈主要集中在物理模拟，比如布料模拟、动画和粒子系统更新。表2列出了在GPU闲置（等待执行）时的CPU热点。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/b95028b7a7f8127de91bc8834f86f7c853626409"/&gt;&lt;/p&gt;&lt;p&gt;表 2 优化前GPU闲置时的CPU热点&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;优化&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在实施了包括细节层次、实体化立体渲染、动态阴影消除、延迟CPU任务以及优化物理等措施后，《猎影计划》的运行帧率从Oculus Rift DK2（1920x1080）上的36.4fps提升至HTC Vive（2160x1200）上的71.4fps；同时由于CPU瓶颈减少，GPU的利用率从54.7%提升至74.3%。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如图13和图14所示，分别为《猎影计划》优化前后的GPU利用率，如GPU工作队列所示。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/72dae5de1971c4097288ac01c42daca5cab07e8e"/&gt;&lt;/p&gt;&lt;p&gt;图 13 优化前《猎影计划》的GPU利用率&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/31e046730d0b1d006d915ce3091d9dcdd91d2996"/&gt;&lt;/p&gt;&lt;p&gt;图 14 优化后《猎影计划》的GPU利用率&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/01bdb7559f055187e3cc6342cd130d76d19eca9b"/&gt;&lt;/p&gt;&lt;p&gt;图 15 优化后GPUView分析《猎影计划》时间线视图&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;图15所示为优化后《猎影计划》的GPUView视图。从图中可见优化后CPU瓶颈时间从7.37ms降至2.62ms，所用的优化措施包括：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;提前运行渲染线程（一种通过产生额外的MTP延迟来减少CPU瓶颈的方法）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优化绘制调用，包括采用细节层次、实体化立体渲染和移除动态阴影；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;延迟处理逻辑线程和工作线程的任务。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;如图16所示为优化后CPU瓶颈期的渲染线程调用堆栈，即图15的红框标记起来的部分。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/1f970584917a17522e2f5c21764bb7ac16c6a555"/&gt;&lt;/p&gt;&lt;p&gt;图 16 渲染线程T10404的调用堆栈&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;表3列出了优化后GPU闲置(等待执行)时的所有CPU热点，注意相对于表2，许多热点和线程已从CPU瓶颈中被移除。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/961855e32afbee4b97f8abc4e9b9277d193c5f62"/&gt;&lt;/p&gt;&lt;p&gt;表 3 优化后GPU闲置时的CPU热点&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;更多的优化措施，比如actor融合或者精简材质，都可以优化渲染线程中的静态网络渲染，进一步提高帧率。假若能对CPU任务进行充分的优化，单帧的处理时间能进一步减少2.62ms（单帧的CPU瓶颈时间），达到87.8fps。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/8c66c54125f80bc08c0c2b81526ea7be9e7fff58"/&gt;&lt;/p&gt;&lt;p&gt;表 4 优化前后游戏的基本性能指标&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;利用多种工具分析VR应用可以帮助我们了解该应用的性能表现和瓶颈所在，这对于优化VR性能非常重要，因为单凭性能指标可能无法真正反映问题所在。本文讨论的方法与工具可用于分析使用任何游戏引擎及VR运行时开发的PC VR应用，确定应用是否存在CPU或GPU瓶颈。由于绘制调用准备、物理模拟、光照或阴影等因素的影响，有时候CPU对VR应用性能的影响比GPU更大。通过分析多个存在性能问题的VR游戏，我们发现其中许多都存在CPU瓶颈，这意味着优化CPU可以提升GPU利用率、性能及用户体验。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;参考链接&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[1]&lt;span&gt;http://www.anandtech.com/show/2803&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[2]&lt;span&gt;http://blogs.valvesoftware.com/abrash/latencythe-sine-qua-non-of-ar-and-vr/&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;[3]&lt;span&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/ff476891(v=vs.85).aspx&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[4]&lt;span&gt;https://www.pcper.com/reviews/Editorial/What-Exactly-Draw-Call-and-What-Can-It-Do&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[5]&lt;span&gt;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[6]&lt;span&gt;http://graphics.stanford.edu/~mdfisher/GPUView.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/0a43c6b186afce3ef7bcf4fab33c93a05abf12b7"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 07 Mar 2017 16:33:31 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】Rancher 1.5 发布，首个区块链供应链金融平台诞生</title>
      <link>http://www.iwgc.cn/link/69af46a819a1359c265c0eb7a6f417de3911a387</link>
      <description>
&lt;p&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Apache Ignite 1.9.0 发布，内存数据组织平台&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Apache Ignite 内存数组组织框架是一个高性能、集成和分布式的内存计算和事务平台，用于大规模的数据集处理。Ignite 为应用和不同的数据源之间提供一个高性能、分布式内存中数据组织管理的框架。Apache Ignite 1.9.0 部分更新内容：Ignite:新增 DML 数据流模式；为 Ignite Kubernetes Pods 添加 Discovery SPI 实现；SQL: Query 可利用多个线程；SQL: 改进的分布式 SQL 支持；基准简化和自动化；修复构建期间的许可证生成；ignite-spark 模块升级到 Spark 2.0。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Rancher 1.5 发布，基于 Docker 的操作系统&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Rancher 1.5全面发布！新版本带来了几个显著变化：Catalog模板的模板支持；支持拦截所有API请求；支持每个环境配置两个附加网络策略；添加了两个webhook驱动程序；具有标记主机的功能；元数据服务第1阶段改进；Swarm使用Portainer.io作为默认UI。这个版本会自动升级网络服务基础架构服务，如果你的环境里没有主机的话，那么当你添加主机时，自动升级会延迟。所以在添加主机之前或添加主机后，一定要立即升级网络服务堆栈。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2017年贵阳大数据交易所力争交易额突破3亿&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;3月6日，从贵阳大数据交易所获悉，贵州省近日发布了2017年大数据十大工程，其中拟定了贵阳大数据交易所年度发展目标：交易会员达到2000家，交易规模累计3亿元人民币以上。作为中国首个国家级大数据综合试验区，贵州大数据产业发展上已实现了一系列首创之举。截至2016年9月1日，贵阳大数据交易所交易额累积突破1亿元，交易框架协议接近3亿元，已发展华为、阿里巴巴、京东等企业会员500多家，可交易数据产品接近4000个。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首个区块链供应链金融平台诞生&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;点融网和富士康集团旗下金融平台富金通今日宣布，结合点融的金融科技技术和富金通在供应链金融领域的经验，双方共同推出了一个名为&amp;ldquo;Chained Finance&amp;rdquo;的区块链金融平台，在业内首次借助区块链技术破解供应链金融和中小企业融资难题。目前，这一平台已在电子制造业的供应链上成功试运行，并通过区块链技术在线上成功发放多笔借款。未来，这一平台将主要面向电子制造业、汽车业和服装业等三大行业。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Here与宝马合作，致力于数字驾驶服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;据外媒报道，HERE于2017年3月3日宣布，宝马成为采用HERE开放定位平台（Here Open Location Platform）的首家汽车制造商，双方将共同致力于开发并推出新的数字驾驶服务。为了更好地利用下一代HERE平台，宝马可能会凭借旗下智能网联车辆和HERE数据生态系统（data ecosystem）收集的海量数据，提供差异化的定位服务。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;伟仕佳杰与青云QingCloud达成战略合作 打造专业企业级云服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;日前，亚太区最大的科技产品解决方案与供应链服务平台伟仕佳杰（00856.HK）与企业级基础云服务商青云QingCloud达成战略合作，共同推进青云QingCloud的产品与服务在亚太地区的发展，携手为用户打造更加专业的企业级IT解决方案。在此次合作中，伟仕佳杰作为青云QingCloud亚太地区的战略合作伙伴，将创建专业的销售、渠道、解决方案、实施等团队，为QingCloud产品与服务的拓展提供各类资源支持，为行业用户提供更加专业的云服务。与此同时，青云QingCloud将为伟仕佳杰提供全面的技术支持，以及最佳行业实践经验。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;亚马逊全球云服务AWS收购Thinkbox&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;据Techcrunch报道，亚马逊全球云服务AWS在提供基础的云计算服务外，还打算为用户提供一些实用性工具。它所选择的Thinkbox主要为视频和其他媒体产业提供设计和内容创作的解决方案。目前Thinkbox已有的服务包括渲染管理系统、几何体缓存工具等等。亚马逊此前还收购了Harvest.ai用以增强安全服务，以及Biba这一移动电话会议初创企业。收购Thinkbox可能意味着亚马逊不再满足于仅仅帮助企业传播内容，同时也想助力其创造内容。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;IBM重磅宣布全球首个商业用途量子计算云服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;3月6日，IBM正式宣布将在今年年内推出全球首个商业&amp;ldquo;通用&amp;rdquo;量子计算服务，并将之命名为IBM Q。该系统将能够通过互联网访问，但需要收取费用。IBM方面称，这将是发展未来量子计算机市场的关键，该系统可以处理传统计算机难以企及的复杂计算，同时会加速药品开发以及科学新发现。此外，IBM还提供了SDK（软件开发工具）和API（应用程序编程接口），这样用普通语言所编写的代码也可以被无缝导出量子计算机。在传统计算机性能逐渐达到上限、制造更小芯片日益困难的今天，量子计算机为高端数据计算提供了新方式。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;云计算成中国对外软实力 两会委员提议加速中国云出海&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&amp;ldquo;在过去相当长的一段时间里，中国对外输出的都是廉价的日用品。近年来随着智能手机、高铁等产品出海，情况才有所改善。&amp;rdquo;全国政协委员吴晶在两会期间表示，中国&amp;ldquo;云&amp;rdquo;的出海，有助于打造&amp;ldquo;中国智造&amp;rdquo;新名片，与中国企业出海形成相互借力，树立中国高科技产品的品牌影响力。中国&amp;ldquo;云&amp;rdquo;绽放的地区，不仅有阿联酋、新加坡等地，而且还包括了工业化程度远高于中国的日本、德国等地。&amp;ldquo;利用海外数据中心搭建云计算平台，以在线公共服务的方式为海外客户提供强大的计算能力，意味着中国自研掌握了技术含量极高的云计算系统，并可根据市场需求批量部署海外市场，并能提供本地化的云计算运营及服务。&amp;rdquo; 吴晶说。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;关注以下公众号，获取更多精彩内容吧！&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/3f4953a6927683be44a457cfbd765c346dbf491c"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
      <pubDate>Tue, 07 Mar 2017 16:33:31 +0800</pubDate>
    </item>
    <item>
      <title>解析阿里云分布式调度系统伏羲</title>
      <link>http://www.iwgc.cn/link/bc24d242b55df22f7be87f6194173cb3db6a5a21</link>
      <description>
&lt;p&gt;&lt;span&gt;本文涉及阿里云分布式调度团队在分布式调度系统的设计、实现、优化等方面的实践以及由此总结的分布式系统设计的一般性原则，具体包括分布式调度的任务调度、资源调度、容错机制、规模挑战、安全与性能隔离以及未来发展方向六部分。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;云计算并不是无中生有的概念，它将普通的单台PC计算能力通过分布式调度软件连接起来。其最核心的问题是如何把一百台、一千台、一万台机器高效地组织起来，灵活进行任务调度和管理，从而可以像使用台式机一样使用云计算。在云计算中，最核心的模块是分布式调度，它好比云计算的中央处理器。目前，业界已存在多种分布式调度实现方案，如伏羲、Hadoop MapReduce、YARN、Mesos等系统。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;阿里云伏羲&lt;/h3&gt;&lt;p&gt;伏羲系统在前人的基础上进行了一系列改造，首先与YARN和Mesos系统类似，将资源的调度和任务调度分离，形成两层架构，使其具备以下优势：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;规模：两层架构易于横向扩展，资源管理和调度模块仅负责资源的整体分配，不负责具体任务调度，可以轻松扩展集群节点规模；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;容错：当某个任务运行失败不会影响其他任务的执行；同时资源调度失败也不影响任务调度；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;扩展性：不同的计算任务可以采用不同的参数配置和调度策略，同时支持资源抢占；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;调度效率：计算framework决定资源的生命周期，可以复用资源，提高资源交互效率。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这套系统目前已经在阿里集团进行了大范围的应用，能支持单集群5000节点、并发运行10000作业、30分钟完成100T数据terasort，性能是Yahoo在Sort Benchmark的世界纪录的两倍。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;伏羲的系统架构&lt;/h3&gt;&lt;p&gt;伏羲的系统架构如图1所示，整个集群包括一台Fuxi Master以及多台Tubo。其中Fuxi Master是集群的中控角色，负责资源的管理和调度；Tubo是每台机器上都有的一个Agent，负责管理本台机器上的用户进程；同时集群中还有一个叫Package Manager的角色，因为用户的可执行程序以及一些配置需要事先打成一个压缩包并上传到Package Manager上，Package Manager专门负责集群中包的分发。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/4ec50db541572c234f257aa6c61790160ca1edc0"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图1 伏羲的系统架构&lt;/center&gt;&lt;p&gt;&lt;span&gt;集群部署完后，用户通过Client端的工具向Fuxi Master提交计算任务；Fuxi Master接收到任务后首先通知某一个Tubo启动这个计算任务所对应的APP Master；APP Master启动之后，它获知了自己的计算任务，包括数据分布在哪里、有多少的任务需要计算等等信息；接着APP Master会向Fuxi Master提交资源申请，表明它需要多少计算资源；Fuxi Master经过资源调度以后，将资源的分配结果下发给APP Master；APP Master在这个资源的基础之上进行它的任务调度，来决定哪些机器上运行哪些计算任务，并且将这个计算任务发送给对应机器上的Tubo进程；Tubo接受到命令之后就会从Package Manager中下载对应的可执行程序并解压；然后启动用户的可执行程序，加载用户的配置（图1中的APP Worker）；APP Worker根据配置中的信息读取文件存储系统中的数据，然后进行计算并且将计算结果发往下一个APP Worker。其中，数据的切片称之为Instance或者叫计算实例。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Fuxi Master与Tubo这套结构解决了分布式调度中的资源调度，每个计算任务的APP Master以及一组APP Worker组合起来解决任务调度的问题。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;任务调度&lt;/h3&gt;&lt;p&gt;伏羲在进行任务调度时，主要涉及两个角色：计算框架所需的APP Master以及若干个APP Worker。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/3283712737ae61474d4c049848d088c44529f28f"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图2 伏羲在任务调度时涉及的主要角色&lt;/center&gt;&lt;p&gt;&lt;span&gt;APP Master首先向Fuxi Master申请/释放资源；拿到Fuxi Master分配的资源以后会调度相应的APP Worker到集群中的节点上，并分配Instance（数据切片）到APP Worker；APP Master同时还要负责APP Worker之间的数据传递以及最终汇总生成Job Status；同时为了达到容错效果，APP Master还要负责管理APP Worker的生命周期，例如当发生故障之后它要负责重启APP Worker。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;而APP Worker的职责相对比较简单，首先它需要接收App Master发来的Instance，并执行用户计算逻辑；其次它需要不断地向APP Master报告它的执行进度等运行状态；其最为主要的任务是负责读取输入数据，将计算结果写到输出文件；此处的Instance是指输入数据的切片。伏羲任务调度系统的技术要点主要包括数据的Locality、数据的Shuffle以及Instance重试和Backup Instance三点。&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据Locality&lt;/span&gt;&lt;/p&gt;&lt;p&gt;数据Locality是指调度时要考虑数据的亲近性，也就是说APP Worker在处理数据时，尽量从本地的磁盘读取数据，输出也尽量写到本地磁盘，避免远程的读写。要实现这一目标，在任务调度时，尽量让Instance（数据分片）数据最多的节点上的AppWorker来处理该Instance。&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据Shuffle&lt;/span&gt;&lt;/p&gt;&lt;p&gt;数据Shuffle指的是APP Worker之间的数据传递。在实际运行中，APP Worker之间是有多种传递形态的，如一对一、一对N、M对N等模式。如果用户去处理不同形态的传输模式，势必会带来较大的代价。伏羲分布式调度系统将数据传递的过程封装成streamline lib，用户无需关心数据传递的细节。首先Map进行运算，将结果直接交给streamline，streamline底层会根据不同的配置将数据传给下游计算任务的streamline；然后streamline将接到的数据交给上层的计算任务。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Instance重试和backup instance&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在Instance的运行过程中可能有多种原因导致Instance失败，比如APP Worker进程重启或运行时机器、磁盘发生故障，种种原因都可能导致一个Instance在运行时最终失败；另外APP Master还会监控Instance的运行速度，如果发现Instance运行非常慢（容易造成长尾），会在另外的APP Worker上同时运行该Instance，也就是同时有两个APP Worker处理同一份数据，APP Master会选取最先结束的结果为最终结果。判断一个Instance运行缓慢的依据有：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;该Instance运行时间超过其他Instance的平均运行时间；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;该Instance数据处理速度低于其他Instance平均值；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;目前已完成的Instance比例，防止在整体任务运行初期发生误判。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;资源调度&lt;/h3&gt;&lt;p&gt;资源调度要考虑几个目标：一是集群资源利用率最大化；二是每个任务的资源等待时间最小化；三是能分组控制资源配额；四是能支持临时紧急任务。在飞天分布式系统中，Fuxi Master与Tubo两者配合完成资源调度。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/d61b8b1139c7f5766d53ee172eef7f551581af56"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图3 飞天分布式系统中的资源调度&lt;/center&gt;&lt;p&gt;&lt;span&gt;在飞天分布式系统中，Fuxi Master与Tubo两者配合完成资源调度。Tubo是每个节点都有的，用于收集每个机器的硬件资源（CPU、Memory、Disk、Net），并发送给FuxiMaster；FuxiMaster是中控节点，负责整个集群的资源调度。当启动计算任务时，会生成APP Master，它根据自己的需要向Fuxi Master申请资源，当计算完成不再需要时，归还该资源。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;飞天分布式调度常用的分配资源策略包括优先级和抢占、公平调度、配额。在实际应用场景中，不同策略可配合起来使用。&lt;/p&gt;&lt;p&gt;&lt;span&gt;策略之优先级和抢占&lt;/span&gt;&lt;/p&gt;&lt;p&gt;每个Job在提交时会带一个priority值（整数值），该值越小优先级越高；相同优先级按提交时间，先提交的优先级高；FuxiMaster在调度时，资源优先分配给高优先级的Job，剩余的资源继续分配给次高优先级Job。&lt;/p&gt;&lt;p&gt;如果临时有高优先级的紧急任务加入，FuxiMaster会从当前正在运行的任务中，从最低优先级任务开始强制收回资源，以分配给紧急任务，此过程称为&amp;ldquo;抢占&amp;rdquo;。抢占递归进行，直到被抢任务优先级不高于紧急任务，也就是不能抢占比自己优先级高的任务。&lt;/p&gt;&lt;p&gt;&lt;span&gt;策略之公平调度&lt;/span&gt;&lt;/p&gt;&lt;p&gt;公平调度策略是指当有资源时Fuxi Master依次轮询地将部分资源分配给各个Job，它避免了较大Job抢占全部资源导致其他Job饿死现象发生。公平调度首先按优先级分组，同一优先级组内的平均分配，如果有剩余资源再去下一个优先级组进行分配，依此类推。&lt;/p&gt;&lt;p&gt;&lt;span&gt;配额&lt;/span&gt;&lt;/p&gt;&lt;p&gt;配额是资源分配时的第三个策略，通常是按照不同的业务进行区分，多个任务组成一个组，例如淘宝、支付宝等；集群管理员会设立每一个组的资源上限，意味着这个组最多能使用这么多CPU、Memory、磁盘等，该上限值称为Quota；每个组的Job所分配的资源总和不会超过该组内的Quota，当然如果每一个组内没有用完的Quota是可以分享给其他组的，会按照Quota的比例进行均分。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;容错机制&lt;/h3&gt;&lt;p&gt;在大规模进程集群中故障是常态，这些常态会来自硬件，比如主板、电源、内存条；也可能来自软件，比如进程有Bug导致进程Crash，机器故障导致性能慢。因此，分布式调度必须具有容错机制，以保证正在运行的任务不受影响，并对用户透明，能够从故障中恢复过来，保障系统的高可用。下面将从任务调度的Failover和资源调度的Failover两个方面介绍。&lt;/p&gt;&lt;p&gt;&lt;span&gt;AppMaster进程重启后的任务调度Failover&lt;/span&gt;&lt;/p&gt;&lt;p&gt;每个计算任务有自己的APP Master，如果APP Master进程发生了重启，那其重启之后的任务调度如何进行Failover呢？这里采用了Snapshot机制，它将Instance的运行进度保存下来，当APP Master重启之后会自动加载Snapshot以获取之前每个Instance的执行进度，然后继续运行Instance；当APP Master进程重启之后，从APP Worker汇报的状态中重建出之前的调度结果，继续运行Instance。&lt;/p&gt;&lt;p&gt;&lt;span&gt;FuxiMaster进程重启后的资源调度Failover&lt;/span&gt;&lt;/p&gt;&lt;p&gt;另一种情况是Fuxi Master发生了Failover。Fuxi Master Failover起来之后需要重建内部状态，该状态通常分为两种：一是Hard State，主要是之前提交的Application配置信息，如不同的Job配置参数等，它们来自于Fuxi Master写的Snapshot；另一类是Soft State，Fuxi Master会收集来自各个Tubo以及APP Master的信息重建出自己的状态，这些信息包括机器列表、每个APP Master的资源请求以及之前的资源分配结果。&lt;/p&gt;&lt;p&gt;Fuxi Master进程重启之后的资源调度过程如图4所示，首先会从Checkpoint中读取出所有Job的配置信息；同时会收集所有的Tubo以及APP Master上报上来的关于资源分配的结果，如CPU多少、Memory多少等等。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/8f91426b5f5b55fdc74f1ccdc27d3f8d6c12706b"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图4 Fuxi Master进程重启之后的资源调度过程&lt;/center&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;规模挑战&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;分布式系统设计主要目标之一就是横向扩展（scale-out），目前阿里云飞天在2013年时已支撑单个集群5000个节点、并发1万个任务。在做横向扩展设计时，需要注意两个要点：一是多线程异步；二是增量的资源调度。&lt;/p&gt;&lt;p&gt;&lt;span&gt;多线程异步&lt;/span&gt;&lt;/p&gt;&lt;p&gt;多线程异步是编写分布式程序一个非常重要而且常用的技术手段。在网络通信模块中，每个APP Master都需要跟Fuxi Master进行资源通信，同时也需要跟多个Tubo进行通信以启动它们的APP Worker。APP Master处理网络通信的过程称之为RPC，RPC通信时必须采用线程池来处理。如图5中采用四个线程池来处理这些消息。由于Fuxi Master是一个中控节点，而Tubo的数量非常众多，如果将这些消息都在同一个线程池中处理，则Fuxi Master的消息有可能会被大量的Tubo消息阻塞（对头阻塞问题）。为了解决该问题，在伏羲系统当中设立了一个独立的线程池来处理Fuxi Master的消息；另外一个线程池来处理Tubo的消息，将线程池进行分开，也称之为泳道；独立的泳道能有效解决Fuxi Master的消息被对头阻塞的问题。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/65d07c194ddb7ff75698e533284eb3ecb0b69509"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图5 RPC通信时采用的四个线程池&lt;/center&gt;&lt;p&gt;&lt;span&gt;增量的资源调度&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;伏羲解决规模问题的另一个技术点是增量。目前，伏羲采用增量的消息通信和资源调度，下面通过具体例子，来介绍伏羲所采用的增量资源调度的协议。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/09b3dc98b34bf33b25d74185033ed625f1f85240"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图6 伏羲所采用的增量资源调度的协议示例&lt;/center&gt;&lt;p&gt;&lt;span&gt;图6左侧是中控节点Fuxi Master；右边为某一个APP Master，如果说APP Master需要1000份资源，最直接的一种实现方式是将&amp;ldquo;我要1000个资源&amp;rdquo;这样的消息直接发送给Fuxi Master；Fuxi Master在接到消息之后可能当前的剩余资源只有200份，它将会&amp;ldquo;我分配给你200&amp;rdquo;这样的消息发送给APP Master；那APP Master还会继续发送消息&amp;ldquo;我还要剩余的800&amp;rdquo;，Fuxi Master回复&amp;ldquo;此时没有资源，我分配0个给你&amp;rdquo;；则APP Master在下一次通信的时候需要继续发送&amp;ldquo;我还要剩余的800&amp;rdquo;&amp;hellip;&amp;hellip;依此类推，可能某一个时刻Fuxi Master还能分一点资源下来。这就是最直观的全量消息通信，每一次APP Master提出请求时都要指明它总共需要多少。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;而在伏羲的实现当中为了减小通信量和不必要的开销，采用了增量的语义。首先APP Master发送一个请求&amp;ldquo;我要1000个资源&amp;rdquo;，Fuxi Master收到之后将当时空闲的200个资源返回给APP Master；之后APP Master无需再提交请求说我还需要800，因为Fuxi Master会将这1000个请求记录下来等到某一时刻又有更多的资源，比如150个资源释放，它直接将150个分配结果发送给APP Master即可。这期间APP Master无需再发多余的网络通信。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;安全与性能隔离&lt;/h3&gt;&lt;p&gt;在分布式系统当中通常有多个用户在执行自己的计算任务，多个任务之间需要互相隔离、互相不影响。飞天伏羲实现了全链路的访问控制，采用了两种访问控制进行安全的验证，一种是Capability，指通信双方基于私钥进行解密并验证的一种方式；还有一种称为Token的方式，这种方式需要通信的双方临时生成基于私钥加密的口令，在通信时进行验证。&lt;/p&gt;&lt;p&gt;两种方式最大区别在于口令生成的时机，Capability方式是在通信之前就已经加密好；而Token是需要在通信时临时生成。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/b30d2f00a9845028ebd8708e9b756c67ea3e9e37"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图7 访问控制的两种安全验证方式&lt;/center&gt;&lt;p&gt;&lt;span&gt;两种方式使用于不同的场景，如图7所示FuxiMaster与Tubo通信采用的是Capability方式，因为这两个角色在集群部署时就已启动，可以事先进行加密生成好Capability；FuxiMaster与APP之间是采用Token的方式，这是因为APP与FuxiMaster进行通信时，当每个任务执行完计算之后会退出；在进程与进程之间，伏羲采用了沙箱的方式将不同的进程进行隔离开、互不干扰。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;除了安全的隔离之外，还需要考虑性能的隔离。目前伏羲采用的几种技术手段：Cgroup（Linux LXC）、Docker container、VM等。这几种技术的隔离性、资源配额/度量、移动性、安全性的比较如图8所示，不再一一叙述。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/3747121b7935a10fa63d6d15352ef129dae7479f"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;图8 性能隔离的技术手段对比表&lt;/center&gt;&lt;p&gt;&lt;span&gt;伏羲目前采用的隔离技术是基于Docker和LXC混合部署的方式，之所以抛弃虚拟机的方式，是因为其性能损耗太多。当运行计算任务时，如果完全放在虚拟机当中，它的IO以及CPU时间片会受到很大的影响，会降低任务的执行效率。在目前阿里的生产环境中，实践发现基于Docker和LXC的隔离技术已经可以很好地满足需求。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;分布式调度的发展方向&lt;/h3&gt;&lt;p&gt;随着计算能力和数据量的持续增长，分布式调度未来可能朝向以下几个方向发展：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;在线服务与离线任务混跑。云计算最终的目的是降低IT成本，最大限度地利用单台PC的CPU处理能力，所以未来的趋势一定是在线服务与离线任务能够在同一物理集群上运行从而实现削峰填谷效果、最大化提高集群利用率。但是由于两种任务的特点不同，在线运用对于响应时间要求很高，而离线运用则对调度的吞吐率要求比较高，因此混跑会带来性能隔离与资源利用率之间的矛盾。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;实时计算的发展，Map Reduce是一个很伟大的框架，但其是为数据量一定的批处理而设计的。随着云计算越来越普及，很多计算形态需要实时拿到计算结果，并且其输入数据可能是不间断的。目前，伏羲也已经开发出了实时的计算框架&amp;mdash;&amp;mdash;OnlineJob，它可以提供更快的执行速度。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;更大的规模，目前已能够支撑5000台的节点，随着计算量越来越大，客户的需求越来越多，需要进一步优化伏羲系统，能够支撑起1万、5万、10万等更大规模单集群，同时能够支撑更多的并发任务。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;作者：陶阳宇，花名举水，阿里云高级技术专家，飞天分布式系统早期核心开发人员，开发和优化过伏羲系统中多个功能模块，参加了飞天5K、世界排序大赛等多个技术攻坚项目。在分布式计算、高并发系统的设计和开发方面有较丰富的经验。&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span&gt;责编：郭芮（guorui@csdn.net），关注大数据领域。&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span&gt;本文为&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;" target="_blank"&gt;《程序员》&lt;/a&gt;原创文章，未经允许不得转载，更多精彩文章请&lt;a style="box-sizing: border-box; color: rgb(35, 82, 124); outline: 0px; background-color: transparent;" target="_blank"&gt;订阅《程序员》&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/13bcabb65529a29ce2bb9d23997abb79319e9040"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src="http://img03.iwgc.cn/mpimg/5cca52de53b86bb96669c080b483289d010266b7"/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
</description>
      <pubDate>Mon, 06 Mar 2017 16:14:37 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】全球云市场趋于稳定，谷歌云数据库服务带来规模和数据一致性</title>
      <link>http://www.iwgc.cn/link/fb06443ced56c3fdb1cf7262432fcd426fa4808e</link>
      <description>
&lt;p&gt;&lt;span&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;健康大数据平台悄然崛起 妙健康或成隐形冠军&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;3月4日，乐心医疗股价收于136元，在狂飙突进3个多月后，其市值达到80.24亿。在大健康产业日益升温的近两年，一家与乐心等众多硬件厂商合作的大数据平台型公司妙健康正在悄然崛起，背靠十几亿中国人消费升级的巨大需求，其成长前景不可限量。&amp;ldquo;我们目前的用户规模是1000万，今年底计划做到三四千万的规模，美国有一家同类型的公司Validic目前估值4亿美元，我相信中国市场更有机会诞生出世界级的公司。&amp;rdquo;妙健康CEO孔飞说。随着中国老龄化问题的日益凸显，以及&amp;ldquo;健康中国&amp;rdquo;战略的推出，巨头纷纷布局医疗市场。&amp;ldquo;要做健康管理必须有数据，从医院获取信息是不可能的，但我们从智能穿戴设备上获取消费者的数据是可行的，而且是各个厂家的设备打通之后的数据，这个门槛的壁垒是绝大多数后来者都难以逾越的。&amp;rdquo;孔飞说。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;李克强：加快大数据、云计算、物联网应用&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;十二届全国人大五次会议5日上午9时在人民大会堂开幕，李克强总理作政府工作报告。李克强表示，大力改造提升传统产业。深入实施《中国制造2025》，加快大数据、云计算、物联网应用，以新技术新业态新模式，推动传统产业生产、管理和营销模式变革。把发展智能制造作为主攻方向，推进国家智能制造示范区、制造业创新中心建设，深入实施工业强基、重大装备专项工程，大力发展先进制造业，推动中国制造向中高端迈进。完善制造强国建设政策体系，以多种方式支持技术改造，促进传统产业焕发新的蓬勃生机。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;中国联通发布教育信息化产品&amp;ldquo;沃素养&amp;rdquo;，想用大数据测评素质教育&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;近日，中国联通推出了针对学生核心素养发展为导向的教育信息化产品&amp;ldquo;沃素养&amp;rdquo;。据悉，该产品由中国联通负责教育板块的互联网技术团队研发，分三大版本：幼教版、基教版、和高教职教版。涵盖四个子系统：智慧校园、核心素养管理系统、核心素养测评系统和素养护照。中国联通计划在2017年重点围绕&amp;ldquo;沃素养&amp;rdquo;产品线深入布局教育信息化市场。据了解，中国联通自2013年与教育部签署战略合作框架协议以来，全面支持教育信息化&amp;ldquo;三通两平台&amp;rdquo;建设与应用，在集团和省市县级公司层面与教育部及各地教育主管机构已达成多项深度合作。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;网络安全服务商Radware收购Seculert，用于提升数据中心安全性&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;日前，全球领先的网络安全和应用交付解决方案提供商Radware公司成功收购了云端SaaS防护措施提供商Seculert，Seculert的SaaS安全服务为企业网络提供防护，并保护企业免受数据泄露侵害。此次收购使Radware攻击缓解系统具有更强的机器学习技术和大数据分析工具，可以实现高级威胁分析，从而大大增强Radware攻击缓解系统的能力。利用大数据平台，通过高级基于行为分析技术和使用大规模处理的机器学习学习技术，收购Seculert还将进一步强化Radware解决方案的组合功能。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;大数据风口&amp;ldquo;争夺战&amp;rdquo;：挖掘为王，驱动经济新变革&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&amp;ldquo;相对于采集、储存，数据挖掘是大数据走向应用创造价值的关键。贵州在拼命开放数据的同时，也在全力进行数据挖掘，就是要尽快&amp;rsquo;逼出&amp;rsquo;大数据的价值，让大数据战略释放出大红利。&amp;rdquo;2017中国国际大数据挖掘大赛组委会一位负责人如此表示。这一围绕数据挖掘的全球赛事，2日在贵州宣布启动。作为我国首个大数据试验区，贵州是全球大数据浪潮的缩影。浪潮之下，中国西部、美国硅谷有了合拍动作&amp;mdash;&amp;mdash;挖掘数据。伴随数据资源的开放，挖掘工具的进步，商业前景的清晰，数据挖掘成为新一轮市场热点，愈发受到资本的追捧。追捧背后，是一堆毫无交集的数据，经过一番交融荟萃，催生出全新应用和商业模式，孕育出新产业和新的经济增长点，传统经济活动被颠覆&amp;hellip;&amp;hellip;以数据挖掘为核心的大数据价值输出新时代，正在趋近。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;全球云市场趋于稳定 今年预计增长18%&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;2006年谷歌提出了云计算这个技术名词，经过十余年的发展，已经成为企业转型与发展的重要方式。长期以来，企业对云计算技术一直处于探索阶段，而根据最新报告显示，全球云计算市场将逐渐趋于稳定，并保持稳定增长。在整个云计算市场中2017年IaaS市场增速将最为明显。根据Gartner预测，全球公有云服务市场将从2016年的2092亿美元增至2017年的2468亿美元，增幅高达18%。最高增速将来自云系统基础架构服务（基础架构即服务，IaaS），预计将在2017年增长36.8%，达到346亿美元。云应用服务（软件即服务，SaaS）预计将增长20.1%，达到463亿美元，说明云计算市场仍然处于快速增长期。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;思科扩展Docker合作 开发容器网络软件&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;思科和Docker于昨天宣布扩大合作伙伴关系，进一步集成来自Docker的容器管理软件与基础设施。思科还发布了1.0版本的开源容器网络项目Contiv。思科硬件与Docker软件的集成通过新的思科验证设计(CVD)进行编码。 一个CVD包括预先集成以支持Docker 数据中心的思科UCS部署，该部署是一个容器管理平台，包括Docker运行引擎、可信注册表和通用控制平面。思科另一个CVD包括其FlexPod超融合基础设施、NetApp存储和对Docker软件的支持。同时，思科还发布了1.0版本的Contiv。它是一种用于Docker容器的&amp;ldquo;统一网络结构&amp;rdquo;，可以跨越多种类型的基础设施，无论是虚拟化服务器还是裸机服务器，还是公有云或私有云。Contiv支持多个网络后端，包括思科以应用为中心的基础架构(ACI)以及软件定义网络平台。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;数据智能公司桃树科技获A轮融资&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;近日，桃树科技对外宣布完成A轮融资，由光信资本领投，创新工场、线性资本和界石投资跟投。这家成立不到一年的公司，已经获得三笔融资。光信资本认为，不管是从消费侧还是供给侧来看，人工智能进入新的爆发周期，更多的资本、人才、商业模式将蜂拥而至。随着企业在经营过程中大量数据的积累，像桃树科技这样以人工智能为手段并能切实为客户解决实际问题的公司将进入新的生长周期，为更多企业带来商业价值。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;马化腾两会建议 发展数字经济落实网络强国战略&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;数字经济的崛起，是中国由网络大国走向网络强国必然要经历的过程。全国人大代表、腾讯公司董事会主席兼首席执行官马化腾认为，移动互联、云计算、大数据等技术已经与传统金融、医疗、教育、交通、专业服务等行业深度融合。我们应顺应这一历史潮流，充分发挥我国作为世界互联网最大单一市场的优势，做大做强数字经济，推动网络强国战略落地。二届全国人大五次会议将于3月5日在北京开幕。在今年的全国两会上，马化腾带来了六个建议，其中包括《关于大力发展数字经济推进网络强国战略的建议》。&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;&lt;a style="box-sizing: border-box; color: rgb(51, 122, 183); font-size: 14px; text-decoration: none; background-color: transparent;" target="_blank"&gt;&lt;span&gt;谷歌公司推出的云数据库服务带来规模和数据一致性&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;谷歌公司的Cloud Spanner可能已经广泛采用多年，但这可能代表着在全球范围内通过公共云中的大量数据集保持一致性迈出的一大步。谷歌公司已经在全球范围内推出可扩展的数据库服务，计划超越其云计算竞争对手，但这可能将在未来实现。Cloud Spanner是当前处于测试阶段的完全托管服务，它将事务关系数据库的一致性与通常与NoSQL数据库相关联的分布式水平扩展相结合。新的谷歌云端数据库服务旨在通过全球规模和高可用性简化管理，避免在复杂系统中出现数据损坏的威胁。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="http://img05.iwgc.cn/mpimg/842c29a5bbcd5e42b484209a02b766be58de0b5c"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
      <pubDate>Mon, 06 Mar 2017 16:14:37 +0800</pubDate>
    </item>
    <item>
      <title>图数据库——大数据时代的高铁</title>
      <link>http://www.iwgc.cn/link/b87c4e69e22c712b05b053ec9cf1aa8afd4cb5ab</link>
      <description>
&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); background: rgb(247, 247, 247); color: rgb(51, 51, 51) ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;作者：&lt;/span&gt;董小珊，姚臻&amp;nbsp;&lt;br&gt;&lt;span&gt;责编：&lt;/span&gt;仲培艺（&lt;a style="box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183);" target="_blank"&gt;zhongpy@csdn.net&lt;/a&gt;）&amp;nbsp;&lt;br&gt;&lt;span&gt;本文为&lt;a style="box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183);" target="_blank"&gt;《程序员》&lt;/a&gt;原创文章，未经允许不得转载，更多精彩文章请&lt;a style="box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183);" target="_blank"&gt;订阅《程序员》&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果把传统关系型数据库比做火车的话，那么到现在大数据时代，图数据库可比做高铁。它已成为NoSQL中关注度最高，发展趋势最明显的数据库。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简介&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;在众多不同的数据模型里，关系数据模型自20世纪80年代就处于统治地位，而且出现了不少巨头，如Oracle、MySQL和MSSQL，它们也被称为关系数据库管理系统（RDBMS）。然而，随着关系数据库使用范围的不断扩大，也暴露出一些它始终无法解决问题，其中最主要的是数据建模中的一些缺陷和问题，以及在大数据量和多服务器之上进行水平伸缩的限制。同时，互联网发展也产生了一些新的趋势变化：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;用户、系统和传感器产生的数据量呈指数增长，其增长速度因大部分数据量集中在Amazon、Google和其他云服务的分布式系统上而进一步加快；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据内部依赖和复杂度的增加，这一问题因互联网、Web2.0、社交网络，以及对大量不同系统的数据源开放和标准化的访问而加剧。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;而在应对这些趋势时，关系数据库产生了更多的不适应性，从而导致大量解决这些问题中某些特定方面的不同技术出现，它们可以与现有RDBMS相互配合或代替它们&amp;mdash;&amp;mdash;亦被称为混合持久化（Polyglot Persistence）。数据库替代品并不是新鲜事物，它们已经以对象数据库（OODBMS）、层次数据库（如LDAP）等形式存在很长时间了。但是，过去几年间，出现了大量新项目，它们被统称为NoSQL数据库（NoSQL-databases）。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;NoSQL数据库&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;NoSQL（Not Only SQL，不限于SQL）是一类范围非常广泛的持久化解决方案，它们不遵循关系数据库模型，也不使用SQL作为查询语言。其数据存储可以不需要固定的表格模式，也经常会避免使用SQL的JOIN操作，一般有水平可扩展的特征。&amp;nbsp;&lt;br&gt;简言之，NoSQL数据库可以按照它们的数据模型分成4类：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;键-值存储库（Key-Value-stores）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;BigTable实现（BigTable-implementations）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文档库（Document-stores）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;图形数据库（Graph Database）&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在NoSQL四种分类中，图数据库从最近十年的表现来看已经成为关注度最高，也是发展趋势最明显的数据库类型。图1就是db-engines.com对最近三年来所有数据库种类发展趋势的分析结果。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/052196a608b36cb9ccbd97ed240f3fc7e15c104c"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图1 db-engines.com对最近三年来所有数据库种类发展趋势的分析&lt;/span&gt;&lt;/center&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图数据库&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;图数据库源起欧拉和图理论，也可称为面向/基于图的数据库，对应的英文是Graph Database。图数据库的基本含义是以&amp;ldquo;图&amp;rdquo;这种数据结构存储和查询数据，而不是存储图片的数据库。它的数据模型主要是以节点和关系（边）来体现，也可处理键值对。它的优点是快速解决复杂的关系问题。&lt;/p&gt;&lt;p&gt;图具有如下特征：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;包含节点和边；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;节点上有属性（键值对）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;边有名字和方向，并总是有一个开始节点和一个结束节点；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;边也可以有属性。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;说得正式一些，图可以说是顶点和边的集合，或者说更简单一点儿，图就是一些节点和关联这些节点的联系（relationship）的集合。图将实体表现为节点，实体与其他实体连接的方式表现为联系。我们可以用这个通用的、富有表现力的结构来建模各种场景，从宇宙火箭的建造到道路系统，从食物的供应链及原产地追踪到人们的病历，甚至更多其他的场景。&lt;/p&gt;&lt;p&gt;通常，在图计算中，基本的数据结构表达就是：&amp;nbsp;&lt;br&gt;G=(V, E)&amp;nbsp;&lt;br&gt;V=vertex（节点）&amp;nbsp;&lt;br&gt;E=edge（边）&amp;nbsp;&lt;br&gt;如图2所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/447ffc09b527cf195df687a70daccf75ae6b0f82"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图2 简单的图数据库模型&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;当然，图模型也可以更复杂，例如图模型可以是一个被标记和标向的属性多重图（multigraph）。被标记的图每条边都有一个标签，它被用来作为那条边的类型。有向图允许边有一个固定的方向，从末或源节点到首或目标节点。&lt;br&gt;&lt;/p&gt;&lt;p&gt;属性图允许每个节点和边有一组可变的属性列表，其中的属性是关联某个名字的值，简化了图形结构。多重图允许两个节点之间存在多条边，这意味着两个节点可以由不同边连接多次，即使两条边有相同的尾、头和标记。如图3所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/e6d9f203566bc40c5b08ec10c379d74bf67c4e7c"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图3 较为复杂的图模型&lt;/span&gt;&lt;/center&gt;&lt;center&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/center&gt;&lt;center style="text-align: justify;"&gt;&lt;span&gt;图数据库存储一些顶点和边与表中的数据。他们用最有效的方法来寻找数据项之间、模式之间的关系，或多个数据项之间的相互作用。&lt;/span&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;一张图里数据记录在节点，或包括的属性里面，最简单的图是单节点的，一个记录，记录了一些属性。一个节点可以从单属性开始，成长为成千上亿，虽然会有一点麻烦。从某种意义上讲，将数据用关系连接起来分布到不同节点上才是有意义的。&lt;/p&gt;&lt;p&gt;图计算是在实际应用中比较常见的计算类别，当数据规模大到一定程度时，如何对其进行高效计算即成为迫切需要解决的问题。大规模图数据，例如支付宝的关联图，仅好友关系已经形成超过1600亿节点、4000亿边的巨型图，要处理如此规模的图数据，传统的单机处理方式显然已经无能为力，必须采用由大规模机器集群构成的并行图数据库。&lt;/p&gt;&lt;p&gt;在处理图数据时，其内部存储结构往往采用邻接矩阵或邻接表的方式，图4就是这两种存储方式的简单例子。在大规模并行图数据库场景下，邻接表的方式更加常用，大部分图数据库和处理框架都采用了这一存储结构。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/dc1acb88c81eaef19de1219e1818ca97dab75f29"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图4 大规模并行图数据库场景下的图数据库存储结构&lt;/span&gt;&lt;/center&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图数据库架构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;在研究图数据库技术时，有两个特性需要多加考虑。&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;底层存储&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;一些图数据库使用原生图存储，这类存储是优化过的，并且是专门为了存储和管理图而设计的。不过并不是所有图数据库使用的都是原生图存储，也有一些会将图数据序列化，然后保存到关系型数据库或面向对象数据库，或是其他通用数据存储中。&lt;/p&gt;&lt;p&gt;原生图存储的好处是，它是专门为性能和扩展性设计建造的。但相对的，非原生图存储通常建立在非常成熟的非图后端（如MySQL）之上，运维团队对它们的特性烂熟于心。原生图处理虽然在遍历查询时性能优势很大，但代价是一些非遍历类查询会比较困难，而且还要占用巨大的内存。&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;处理引擎&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;图计算引擎技术使我们可以在大数据集上使用全局图算法。图计算引擎主要用于识别数据中的集群，或是回答类似于&amp;ldquo;在一个社交网络中，平均每个人有多少联系？&amp;rdquo;这样的问题。&lt;/p&gt;&lt;p&gt;图5展示了一个通用的图计算引擎部署架构。该架构包括一个带有OLTP属性的记录系统（SOR）数据库（如MySQL、Oracle或Neo4j），它给应用程序提供服务，请求并响应应用程序在运行中发送过来的查询。每隔一段时间，一个抽取、转换和加载（ETL）作业就会将记录系统数据库的数据转入图计算引擎，供离线查询和分析。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/d7a639cb74001682bb26a48d7a7cc8fe32c443eb"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图5 一个典型的图计算引擎部署架构&lt;/span&gt;&lt;/center&gt;&lt;center&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;图计算引擎多种多样。最出名的是有内存的、单机的图计算引擎Cassovary和分布式的图计算引擎Pegasus和Giraph。大部分分布式图计算引擎基于Google发布的Pregel白皮书，其中讲述了Google如何使用图计算引擎来计算网页排名。&lt;/p&gt;&lt;p&gt;一个成熟的图数据库架构应该至少具备图的存储引擎和图的处理引擎，同时应该有查询语言和运维模块，商业化产品还应该有高可用HA模块甚至容灾备份机制。一个典型的图数据库架构如图6所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/7aada4a997c723d06b6010e3094775c55711be5f"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图6 一个成熟的图数据库设计架构&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;各模块功能说明如下：&lt;br&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;查询和计算：最终用户用于在此语言基础之上进行图的遍历和查询，最终返回运行结果，如能提供RESTful API则能给开发者提供不少便利之处。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;操作和运维：用于系统实时监控，例如系统配置、安装、升级、运行时监控，甚至包括可视化界面等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据加载：包括离线数据加载和在线数据加载，既可以是批量的数据加载，也可以是流数据加载方式。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;图数据库核心：主要包括图存储和图处理引擎这两个核心。图处理引擎负责实时数&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;据更新和执行图运算；图存储负责将关系型数据及其他非结构化数据转换成图的存储格式；HA服务负责处理处理数据容错、数据一致性以及服务不间断等功能。&lt;/p&gt;&lt;p&gt;在图数据库和对外的接口上，图数据库应该也具有完备的对外数据接口和完善的可视化输出界面，如图7所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/334ea99578465d8d7bb5d6de7287f376f4193367"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图7 一个完整的图数据库对外接口及部署模式&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;图数据库不仅可以导入传统关系型数据库中的结构化数据，也可以是文本数据、社交数据、机器日志数据、实时流数据等。&lt;/p&gt;&lt;p&gt;同时，计算结果可以通过标准的可视化界面展现出来，商业化的图数据库产品还应该能将图数据库中的数据进一步导出至第三方数据分析平台做进一步的数据分析。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图数据库的应用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;我们可以将图领域划分成以下两部分：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;用于联机事务图的持久化技术（通常直接实时地从应用程序中访问）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这类技术被称为图数据库，它们和&amp;ldquo;通常的&amp;rdquo;关系型数据库世界中的联机事务处理（Online Transactional Processing，OLTP）数据库是一样的。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;用于离线图分析的技术（通常都是按照一系列步骤执行）。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这类技术被称为图计算引擎。它们可以和其他大数据分析技术看做一类，如数据挖掘和联机分析处理（Online Analytical Processing，OLAP）。&lt;/p&gt;&lt;p&gt;图数据库一般用于事务（OLTP）系统中。图数据库支持对图数据模型的增、删、改、查（CRUD）方法。相应地，它们也对事务性能进行了优化，在设计时通常需要考虑事务完整性和操作可用性。&lt;/p&gt;&lt;p&gt;目前图数据库的巨大用途得到了认可，它跟不同领域的很多问题都有关联。最常用的图论算法包括各种类型的最短路径计算、测地线（Geodesic Path）、集中度测量（如PageRank、特征向量集中度、亲密度、关系度、HITS等）。那么，什么样的应用场景可以很好地利用图数据库？&lt;/p&gt;&lt;p&gt;目前，业内已经有了相对比较成熟的基于图数据库的解决方案，大致可以分为以下几类。&lt;/p&gt;&lt;p&gt;&lt;span&gt;金融行业应用&lt;/span&gt;&lt;/p&gt;&lt;p&gt;反欺诈多维关联分析场景&lt;/p&gt;&lt;p&gt;通过图分析可以清楚地知道洗钱网络及相关嫌疑，例如对用户所使用的帐号、发生交易时的IP地址、MAC地址、手机IMEI号等进行关联分析。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/9ddc29a602acb1c01c1e9eb90717191f6abb89ea"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图8 在图数据库中一个典型的反洗钱模型&lt;/span&gt;&lt;/center&gt;&lt;center&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;反欺诈多维关联分析场景&lt;/p&gt;&lt;p&gt;反欺诈已经是金融行业一个核心应用，通过图数据库可以对不同的个体、团体做关联分析，从人物在指定时间内的行为，例如去过地方的IP地址、曾经使用过的MAC地址（包括手机端、PC端、WIFI等）、社交网络的关联度分析，同一时间点是否曾经在同一地理位置附近出现过，银行账号之间是否有历史交易信息等。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/a4da65a690e35b2c75692b3446999bef87803f2f"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图9 在图数据库中一个典型的金融反欺诈关联分析模型&lt;/span&gt;&lt;/center&gt;&lt;center&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;社交网络图谱&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在社交网络中，公司、员工、技能的信息，这些都是节点，它们之间的关系和朋友之间的关系都是边，在这里面图数据库可以做一些非常复杂的公司之间关系的查询。比如说公司到员工、员工到其他公司，从中找类似的公司、相似的公司，都可以在这个系统内完成。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/92b38c80729a0fc5b6aa96e9f32751be845896bd"/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图10 在图数据库中典型的社交关系网络模型&lt;/span&gt;&lt;/center&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业关系图谱&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;图数据库可以对各种企业进行信息图谱的建立，包括最基本的工商信息，包括何时注册、谁注册、注册资本、在何处办公、经营范围、高管架构。围绕企业的经营范围，继续细化去查询企业究竟有哪些产品或服务，例如通过企业名称查询到企业的自媒体，从而给予其更多关注和了解。另外也包括对企业的产品和服务的数据关联，查看该企业有没有令人信服的自主知识产权和相关资质来支撑业务的开展。&lt;/p&gt;&lt;p&gt;企业在日常经营中，与客户、合作伙伴、渠道方、投资者都会打交道，这也决定了企业对社会各个领域都广有涉猎，呈现面错综复杂，因此可以通过企业数据图谱来查询，层层挖掘信息。基于图数据的企业信息查询可以真正了解企业的方方面面，而不再是传统单一的工商信息查询。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/bd03e8ada670891445a6b0ee5aab63f8185c1b9e"/&gt;&lt;br&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;图11 在图数据库中一个典型的企业知识图谱模型&lt;/span&gt;&lt;/center&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图数据库的优缺点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;数十年来，开发者试图使用关系型数据库处理关联的、半结构化的数据集。关系型数据库设计之初是为了处理纸质表格以及表格化结构，它们试图对这种实际中的特殊联系进行建模。然而讽刺的是，关系型数据库在处理联系上做得却并不好。&lt;/p&gt;&lt;p&gt;关系数据库是强大的主流数据库，经过40年的发展和改进，已经非常可靠、强大并且很实用，可以保存大量的数据。如果你想查询关系型数据库里的单一结构或对应数据信息的话，在任何时间内都可以查询关于项目的信息，或者你想查询许多项目在相同类型中的总额或平均值，也将会很快得到答案。&lt;/p&gt;&lt;p&gt;关系型数据库不擅长什么呢？当你寻找数据项、关系模式或多个数据项之间的关系时，它们常会以失败告终。&lt;/p&gt;&lt;p&gt;关系确实存在于关系型数据库自身的术语中，但只是作为连接表的手段。我们经常需要对连接实体的联系进行语义区分，同时限制它们的使用，但是关联关系什么也做不了。更糟糕的是，随着数据成倍地增加，数据集的宏观结构将愈发复杂和不规整，关系模型将造成大量表连接、稀疏行和非空检查逻辑。关系世界中连通性的增强都将转化为JOIN操作的增加，这会阻碍性能，并使已有的数据库难以响应变化的业务需求。&amp;nbsp;&lt;br&gt;而图数据库天生的特点决定了其在关联关系上具有完全的优势，特别是在我们这个社交网络得到极大发展的互联网时代。例如我们希望知道谁LOVES（爱着）谁（无论爱是否是单相思的），也想知道谁是谁的COLLEAGUE_OF（同事），谁是所有人的BOSS_OF（老板）。我们想知道谁没有市场了，因为他们和别人是MARRIED_TO（结婚）联系。我们甚至可以通过数据库在其他社交网络中发现不善交际的元素，用DISLIKES（不喜欢）联系来表示即可。通过我们所掌握的这个图，就可以看看图数据库在处理关联数据时的性能优势了。&lt;/p&gt;&lt;p&gt;例如在下面这个例子中，我们希望在一个社交网络里找到最大深度为5的朋友的朋友。假设随机选择两个人，是否存在一条路径，使得关联他们的关系长度最多为5？对于一个包含100万人，每人约有50个朋友的社交网络，我们就以典型的开源图数据库Neo4j参与测试，结果明显表明，图数据库是用于关联数据的最佳选择，如表1所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/ce62b130545f7dd6733d404909c4b3f032eb6f71"/&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;span&gt;表1 图数据库与关系型数据库执行时间对比&lt;/span&gt;&lt;/center&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;br&gt;&lt;/center&gt;&lt;p&gt;在深度为2时（即朋友的朋友），假设在一个在线系统中使用，无论关系型数据库还是图数据库，在执行时间方面都表现得足够好。虽然Neo4j的查询时间为关系数据库的2/3，但终端用户很难注意到两者间毫秒级的时间差异。当深度为3时（即朋友的朋友的朋友），很明显关系型数据库无法在合理的时间内实现查询：一个在线系统无法接受30s的查询时间。相比之下，Neo4j的响应时间则保持相对平坦：执行查询仅需要不到1s，这对在线系统来说足够快了。&lt;/p&gt;&lt;p&gt;在深度为4时，关系型数据库表现出很严重的延迟，使其无法应用于在线系统。Neo4j所花时间也有所增加，但其时延在在线系统的可接受范围内。最后，在深度为5时，关系型数据库所花时间过长以至于没有完成查询。相比之下，Neo4j则在2 s左右的时间就返回了结果。在深度为5时，事实证明几乎整个网络都是我们的朋友，因此在很多实际用例中，我们可能需要修剪结果，并进行时间控制。&lt;/p&gt;&lt;p&gt;将社交网络替换为任何其他领域时，你会发现图数据库在性能、建模和维护方面都能获得类似的好处。无论是音乐还是数据中心管理，无论是生物信息还是足球统计，无论是网络传感器还是时序交易，图都能对这些数据提供强有力而深入的理解。&lt;/p&gt;&lt;p&gt;而关系型数据库对于超出合理规模的集合操作普遍表现得不太好。当我们试图从图中挖掘路径信息时，操作慢了下来。我们并非想要贬低关系型数据库，它在所擅长的方面有很好的技术能力，但在管理关联数据时却无能为力。任何超出寻找直接朋友或是寻找朋友的朋友这样的浅遍历查询，都将因为涉及的索引数量而使查找变得缓慢。而图数据库由于使用的是图遍历技术，所需要计算的数据量远小于关系型数据库，所以非常迅速。&lt;/p&gt;&lt;p&gt;不过，图数据库也并非完美，它虽然弥补了很多关系型数据库的缺陷，但是也有一些不适用的地方，例如以下领域：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;记录大量基于事件的数据（例如日志条目或传感器数据）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对大规模分布式数据进行处理，类似于Hadoop；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;二进制数据存储；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;适合于保存在关系型数据库中的结构化数据。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;虽然图数据库也能够处理&amp;ldquo;大数据&amp;rdquo;，但它毕竟不是Hadoop、HBase或Cassandra，通常不会在图数据库中直接处理海量数据（以PB为单位）的分析。但如果你乐于提供关于某个实体及其相邻数据的关系（比如可以提供一个Web页面或某个API返回其结果），那么它是一种良好的选择。无论是简单的CRUD访问，或是复杂的、深度嵌套的资源视图都能够胜任。&lt;/p&gt;&lt;p&gt;综上所述，虽然关系型数据库对于保存结构化数据来说依然是最佳的选择，但图数据库更适合于管理半结构化数据、非结构化数据以及图形数据。如果数据模型中包含大量的关联数据，并且希望使用一种直观、有趣并且快速的数据库进行开发，那么可以考虑尝试图数据库。&lt;/p&gt;&lt;p&gt;在实际的生产环境下，一个真正成熟、有效的分析环境是应该包括关系型数据库和图数据库的，根据不同的应用场景相互结合起来进行有效分析。&lt;/p&gt;&lt;p&gt;整体而言，图数据库还有很多问题未解决，许多技术还需发展，比如超级节点问题和分布式大图的存储。可以预见的是，随着互联网数据的膨胀，图数据库将迎来发展契机，基于图的各种计算和数据挖掘岗位也会越来越热。&lt;/p&gt;&lt;p&gt;&lt;span&gt;致谢&lt;/span&gt;&amp;nbsp;&lt;br&gt;本文的部分内容参考了Ian Robinson所著的《图数据库》（第一版），在此表示感谢。&lt;/p&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); background: rgb(247, 247, 247); color: rgb(51, 51, 51) ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;作者简介：&lt;/span&gt;&amp;nbsp;董小珊，20年IT从业经验，曾供职于HP、F5、Citrix。熟知行业应用，对企业级用户的咨询、管理、挖掘，有着丰富的经验。2016年作为联合创始人创办深圳安联信息技术有限公司，专注于图数据库的咨询与市场。&amp;nbsp;&lt;br&gt;姚臻，大数据分析专家，尤其是专注于图数据库领域，对Neo4J、InfiniteGraph、GraphSQL等不同的开源技术和闭源产品都有比较深入的研究。&lt;/p&gt;&lt;/blockquote&gt;&lt;hr style=" box-sizing: content-box; height: 0px; margin-top: 20px; margin-bottom: 20px; border-right: 0px; border-bottom: 0px; border-left: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "/&gt;&lt;p&gt;订阅程序员（含iOS、Android及印刷版）请访问&amp;nbsp;&lt;a style="box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183);" target="_blank"&gt;http://dingyue.programmer.com.cn&lt;/a&gt;&amp;nbsp;&lt;br&gt;&lt;img src="http://img03.iwgc.cn/mpimg/5e954cb3a8fe1d04fbbacc97475cfa00caf05de9"/&gt;&lt;/p&gt;&lt;p&gt;订阅咨询：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;在线咨询（QQ）：2251809102&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;电话咨询：010-64351436&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;更多消息，欢迎关注&amp;ldquo;&lt;a style="box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183);" target="_blank"&gt;程序员编辑部&lt;/a&gt;&amp;rdquo;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
</description>
      <pubDate>Fri, 03 Mar 2017 14:12:53 +0800</pubDate>
    </item>
    <item>
      <title>技术人的充电时刻，24个精彩研发案例在等你</title>
      <link>http://www.iwgc.cn/link/a6569d00b656e46105de7d008de8db74fae60c13</link>
      <description>
&lt;p&gt;&lt;span&gt;在互联网大潮下，2017年的就业环境越发恶劣，技术人如何去适应技术变革和学习新技术，以及如何快速增强自身的技术实力成为亟需解决的问题。如果你在看完一本技术图书后还是疑惑不解，处于目前项目遇到困难时无人请教的尴尬境地，亦不清楚业界同行在使用什么技术以及用得如何&amp;hellip;&amp;hellip;你或许需要别人醍醐灌顶的几句话，优秀的技术人才思考和解决问题的方式，甚而他们在面对成长瓶颈时的晋升之道。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;成长固然没有绝对的公式可循，但可以通过别人处事之道来启发自己，而技术人也理应时刻为自己充电，从而有效地为自己的发展保驾护航。由CSDN主办的内容型技术峰会中国软件开发者大会（SDCC）将于2017年3月17日-19日进驻上海，包含三大主题技术峰会：互联网运维开发实战峰会、数据库核心技术与应用实战峰会、互联网应用架构实战峰会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大会介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作为S中国软件开发者大会系列技术峰会的一部分，SDCC 2017&amp;middot;上海站秉承干货实料（案例）的内容原则，这三场峰会将邀请业内顶尖的架构师和技术专家，共同探讨运维工具研发与实践、运维自动化系统的构建、大数据与运维、云上的运维案例分析、虚拟化技术、应用性能检测与管理、游戏行业的运维、云数据库实战、新一代数据库平台、产品选型、性能调优、大数据应用实战实践、高可用/高并发系统架构设计、新技术应用、 移动应用架构、微服务、智能硬件架构等领域的话题与技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在本次大会上，你会看到如下重量级嘉宾和议题：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/9f4b7316876e8549f06332405243d24ef050f729"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/a96c588bca8f424ebacb1e0b778578d64d4e854b"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/edac3cce29fa57866c45ef49d506e80ad9a165c5"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（注：可点开图片查看高清版）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业界声音&amp;amp;嘉宾寄语：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;陈敏敏 苏宁云商大数据中心技术总监&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;CSDN的社区和《程序员》影响了无数程序员，旗下的SDCC技术峰会同样继承了&amp;ldquo;老字号&amp;rdquo;，以品质和内容为根本，让参会的同学满载而归，结交到更多的朋友，感谢SDCC，提供这样一个好平台，让我们技术人互相交流，共同进步。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;陈一方 大众点评交易平台技术团队负责人&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;非常荣幸受邀参加了SDCC 2016&amp;middot;上海站互联网应用架构峰会，见识了主办方CSDN的专业，认识了很多业内牛人，体验到了参会的技术同学的热情，参与了当天大部分会议，会上处处是干货、实践，线下也有非常多的互动，在微信群里大家都很活跃，希望这个高含金量的技术大会一直办下去，越办越好，也期待深圳站的圆满成功。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;刘睿民 柏睿数据董事长兼CTO：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;有幸作为讲师参加CSDN举办的多次数据库会议，在数据库这个专业领域CSDN作为主办方确实积累了相当多的资源。通过之前的会议，结交了很多朋友，收获丰厚。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;卢亿雷 AdMaster技术副总裁：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;SDCC大会带给了我们一场丰富多彩的技术盛宴，挑选的分享主题都有很强的针对性和实用性，全部是干货满满，不管是对参会者还对讲师都受益匪浅，特别是分布式数据库和架构场都是业界最前沿、最实用的分享。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;SDCC 2017&amp;middot;上海站的参会者须知：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;本次三大峰会都将于上午9：30开始，让出行更加的从容；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每场的演讲时长为50分钟，你将有更多的QA交流时间；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;有三大出版社提供技术图书支持，放出百本高评价书籍；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每一位现场提问者都将获得图书等礼品，为爱学习者点赞；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;你可以听完所有的演讲topic，无需赶场，精彩不再错过；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;推出峰会单独售票机制，你可以选择感兴趣的技术主题；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;大会官网：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;http://bss.csdn.net/m/topic/sdcc_2017/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;截止3月5日前门票八折优惠中，5人以上团购立减1500元，更多热门议题详情和听众收益请访问大会官网。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/9bdeda7384d07f48757a48352d86b5bb3db8c151"/&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 03 Mar 2017 14:12:53 +0800</pubDate>
    </item>
    <item>
      <title>一年不见，我回来了</title>
      <link>http://www.iwgc.cn/link/332ab370f18c123f0cdf0ff4e831a9d24bc1641a</link>
      <description>
&lt;p&gt;&lt;span&gt;&lt;strong&gt;壹 &amp;middot; 如今&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;hr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;一年不见，你还好么&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/7b3140938c8e332fd324664c27295f787490c20d"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;听说这一年&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你也参加了这样那样的会议&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你说&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;没有干货，听得困了&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/dfc6aef3602ea4f5b79efd38ef94b4d969f1e203"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结果打盹十分钟，醒来世界都变了&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;有时感觉台上广告讲的不错&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/ec318c7302552bbd2be0b7ce17d71fdcaf27b7dd"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;内心有点复杂&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;想问问这时的你&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;是不是也会想我&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;想起我们曾经纯粹干货交流&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;那质朴而又单纯&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;美好的岁月&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;贰 &amp;middot; 回忆&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一年不见，你还记得吗&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;span&gt;2012&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/5a1b55ae8ee879f858d48acbac1877c2e15842d8"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;喜欢你包容我的样子&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/68f6a8a43a92a07a9cad25511d48347ce306e9e6"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的微笑，是给我最大的温柔&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;span&gt;2013&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/2d1ba8238c7bd9c7b7a1c4b02a537c40dcea8789"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你巧笑盼兮&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/48617ec54efbbd3d133421e93a3b97b733ac00b6"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的热情让我觉得一切辛苦都是值得&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;2014&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/e9a2f108a46370428c48c50860822df8cbdefc19"/&gt;&lt;br&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们依旧深爱着彼此&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/fda594b154764c39737de0472d417c05621c1ee5"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你认真的样子是我灵魂最深处的记忆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;2015&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/ff088c0beb26a181ce4c283a4f53b30709d34343"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的名字是我嘴角上扬的原因&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/57388ca7255686b6863c7ca27f1a752a78c9e867"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的专注带走我的呼吸心跳&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;2016&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;我缺席了&lt;/span&gt;&lt;br&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;但我每时每刻在想你&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/d144adabc799f99d32f2395e02ac7efb1d4b065c"/&gt;&lt;span&gt;想你的眼神&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/04067dd1d06d190f025b9a435c83e6814e9af500"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想和你耳鬓厮磨&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/99a810399be67eb930ac3b4d9cff661edf2e6911"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想和你笑&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/7c714f84e7d4e56bc56e764316bce75a7bfb84cb"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想陪你闹&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/fd88addd7ef362f7dc50de329c63a372deceb417"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;叁 &amp;middot; 约定&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;今年，我回来了&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;我们是否可以不见不散&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/80333368fb3615bcaa7f3d3d1a0e0117bb765881"/&gt;&lt;br&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;时隔一年，2017年中华数据库与运维大会将于06月03日在上海宝丰联大酒店举行，届时来自全国各行各业的IT从业人员将欢聚上海，探讨与交流数据库和运维的经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本届大会邀请了国内富有实战经验的资深专家分享技术与前瞻性的话题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/5d01ec30d37db8754b459934fa4aeb34e0fd2faa"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;现在报名限时免费哦！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/dedc21b60d7162f12688a02233d718ff6b6cd3c2"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/664ffbfe4b592063c4825674880a699fa0726110"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;点击文章最下方阅读原文报名哦~&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/9e6ba6f02db9025e1347f15d036fbee165ce92d6"/&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;&lt;br&gt;中华数据库行业协会&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;span&gt;中华数据库行业协会由来自北京、杭州、上海、深圳等地的技术精英们联合组织成立。协会致力于数据库开源领域的各项资源的有效整合与分享，为开源社区作出相关的贡献，为业界提供一个纯技术交流的优质平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;搜索微信号&amp;ldquo;&lt;span&gt;&lt;strong&gt;&lt;span&gt;zhdba2014&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&amp;rdquo;，或&lt;span&gt;&lt;strong&gt;&lt;span&gt;扫描二维码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;，关注中华数据库行业协会，分享中华数据库行业协会最新动态及更多的互联网信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;img src="http://img04.iwgc.cn/mpimg/574881608036b0ac4a05f08b46efd7db89f0dd7c"/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 03 Mar 2017 14:12:53 +0800</pubDate>
    </item>
    <item>
      <title>解读对比13个深度学习框架后的选择——专访TensorFlow贡献者黄文坚</title>
      <link>http://www.iwgc.cn/link/4b59986dc0bd080974158278b5b75d2bb770e43d</link>
      <description>
&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;【AI创新者】&lt;/span&gt;是CSDN人工智能频道精心打造的专栏，本期主人公是&lt;span&gt;《TensorFlow实战》作者、&lt;/span&gt;PPmoney大数据算法总监黄文坚。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;自Google AlphaGo以4:1总比分战胜韩国名将李世石后，深度学习开始被人们广泛关注。2月16日，Google发布了TensorFlow1.0版本，该版本的发布是深度学习框架发展中里程碑的一步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://img03.iwgc.cn/mpimg/58fd2d9016de7c361547e490b94f56da3f64e379"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PPmoney大数据算法总监黄文坚&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了帮助机器学习、分布式计算领域的学生、从业者，特别是正在学习深度学习技术，立志从事AI相关行业的朋友快速上手TensorFlow，PPmoney黄文坚和Uptake唐源共同撰写了《TensorFlow实战》一书。日前，&lt;strong&gt;黄文坚接受CSDN记者专访，介绍了他在深度学习领域的实践经验和成长心得，以及完成《TensorFlow实战》一书背后的原因和故事。&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;同时，黄文坚老师即将在CSDN开课：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;a style="color: rgb(61, 167, 130); max-width: 100%; box-sizing: border-box; font-size: 14px; text-indent: 28px; word-wrap: break-word !important;" target="_blank"&gt;&lt;strong&gt;&lt;span&gt;《使用TensorFlow创建可自动玩游戏的DQN模型》&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;本次课程集中讲解Deep-Q Network及其TensorFlow的实现，欢迎扫描文末二维码报名学习、交流。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以下为采访实录：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;article class="" data-author="Wxeditor" style="margin: 5px auto; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;span&gt;深度学习实践分享&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;CSDN：您在什么样的情况下第一次使用深度学习？其效果是否让您满意？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;第一次接触深度学习和神经网络是在读研的时候，当时是要做一个图片二维码，就是把QR Code黑白块藏到一张图片中，手机通过扫描图片然后解出这个码。其实从图片上人眼是看不出任何差别的，通过特殊的频率编码将信息存储在图片中，通过神经网络来进行解码，使用这个几层深的神经网络模型做分类,即对每一个module进行解调制，然后将它的输出结果连到LDPC纠错码进行整体解码，最后再把网址信息恢复出来，当时的效果还是挺满意的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是我在读研究生时候的主要工作，后来也通过这个拿到了MobiCom的一个奖项，学校为此申请了几个专利，也就是从那个时候开始，了解到深度学习的强大，尤其是在图片分类这块应用是非常强的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：从阿里到明略再到PPmoney，您一直在和数据打交道，其中有哪些业务使用了深度学习技术？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;在阿里，负责天猫的个性化搜索，主要是针对不同用户，搜同一个关键词时，其页面展示的结果不同，使用户最感兴趣的排在前面。当时是使用了阿里内部的一个深度学习框架实现的，取得了一个不错的效果；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在明略，主要是服务一些大型的企业客户，比如银行、券商、保险公司、制造业公司和政府机构等。以某制造业龙头企业为例，当时是在那个企业有一个高端机械设备的故障率预测项目，我们有很多时间序列信息，也就是来自机械设备的信号接收装置。它是每隔0.01秒甚至更短的时间就会产生一个信号，根据这些时间信号来预测未来可能出现的故障情况，这在当时也取得了很高的准确率；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在PPmoney，主要业务是金融风控、量化策略以及P2P理财产的推荐。在金融风控方面，因为我们有大量的客户数据，这些数据可以用来判断客户是否容易逾期，甚至是否是一个欺诈客户或者不良客户，通过预测可以降低我们平台系统的风险。此前是运用了大量特征工程的方法，但后面使用深度学习后，我们对这些特征就不用进行大量的手工处理，直接交给深度学模型即可，从而得到比其他模型更好的结果；在量化策略方面，像金融、股票、期货这种数据天然就是以时间序列排序的，所以这种应用CNN或者RNN深度学习处理特别好。而平时我们做交易会有一些技术指标，而这些是人工提取出来的，但使用深度学习后，让这个模型自己根据历史的数据总结出最有价值的特征，从而减少人工操作的部分，虽然可解释性不强，但实际的效果会非常好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;article class="" data-author="Wxeditor" style="margin: 5px auto; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;span&gt;关于&amp;ldquo;TensorFlow实战&amp;rdquo;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;CSDN：各种深度学习开源工具让DL变得更简单，但TensorFlow是在2015年才开源，在此之前，您尝试过哪些DL框架？如何看待它们的优缺点？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;h3 style="margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); white-space: normal; widows: 1; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;在这本书中详细比较了十个最为常见的深度学习框架，而在使用TensorFlow之前，早期主要有Theano、Keras、Caffe、Torch等这几个开源框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时学术界应用较多的是Theano，同时Theano也是和TensorFlow最像的深度学习框架，可以说TensorFlow是它的一个升级版。它们都支持符号计算和自动求导，但在Theano里限制比较多，如它的编译速度特别慢，它的整个代码包括CUDA的代码，都是写在Python文件里，CUDA代码是以字符串的形式存在Python文件中，使用起来不是特别方便，同时运行速度也比较慢，这也限制了Theano在大规模的工业应用上的应用；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Keras当时是构建在Theano上的一个上层封装，现在他也支持构建在TensorFlow上，它是一个极简的深度学习框架，可能只用几行或者十几行就能实现一个非常复杂的神经网络。当然，它的缺点也很明显，就是它的底层当时是基于Theano，所以运行速度、功能会有一定限制，同时也不能支持多GPU或者分布式；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Caffe当时应该是最火的开源框架，它主要是使用一个二进制文件，通过执行训练或者预测命令。而它的网络是通过写一个Protobuf格式的文件来定义的，所以它调试参数或者调试网络结构时不是很方便，但它的训练速度确是几个框架中最快的，而且针对卷积神经网络优化做的特别好。而缺点就是刚刚提到的，当要进行大量的实验时，不是特别方便，因为它的配置文件和它的二进制程序不太适合在Python中反复修改和调试；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于Torch，这个是Facebook的开源框架，历史比较悠久，最开始是使用Lua语言编写，平时执行的效率非常高，可能会比Python高几十倍。但该框架的问题在于应用的语言比较小众，使用的人相对比较少，学习成本较高以及语言内部的配套组件相对较少等。而在Python中，有Pandas、NumPy、XGBoost、Scikit-learn等配套组件，应用起来特别方便。但Torch使用的Lua中就缺少这些东西，所以使用起来不是很方便，同时它框架本身跟Keras比较像，Keras借鉴了Torch，在定义网络的时非常简洁。但如果从来没有使用过Python或者没有使用过Keras的人，尝试一下这个框架也是可以的，最近Torch也推出了Python的版本叫PyTorch，从某些角度上解决了它语言本身的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：您写《TensorFlow实战》这本书的初衷和动力是什么？这本书适合的阅读对象是谁？读者有哪些收益？他们需要一些知识基础吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;当时是在一个技术分享活动结束后，电子工业出版社有位编辑联系我，咨询我是否有兴趣写一本这样书。其实我听后还是非常感兴趣的，因为TensorFlow也才刚火起来不久，正好国内使用的人还不多，希望通过一本入门同时包含一些经典网络实现的书籍，能让大家更熟悉这个开发框架，用它能做出更多有用的模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这本书适合阅读的对象应该是对深度学习有一定了解，同时对Python编程比较熟悉的人士。不需要对深度学习理解特别深，因为在书中对各个神经网络的原理和结构也有很多的解释，读者需要了解什么是神经网络和机器学习的一些基础概念，比如说训练集、测试集、准确率评价等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而读者的收益主要包含两个方面，一方面如果读者对深度学习不是太熟悉和了解，在本书中能够学到各个类型的神经网络，比如说自编码器、多层感知机、卷机神经网络、循环神经网络、深度强化学习等等；另一方面读者可以使用TensorFlow来实现一些经典模型或者网络。书中会通过实际的例子，也就是具体实现什么模型，顺带讲解TensorFlow的代码和API接口，整个初衷还是通过实现一些经典的模型，以此构成整本书的发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：写作过程中有哪些有趣的事可以分享给大家？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;开始写作时并没有觉得工作量这么大，但在写的过程中发现需要花费的时间还是非常多的。在讲解一些网络实现时也查阅了大量的相关论文，从中也学到了很多东西。希望能把这些内容分享给读者，因为深度学习是一个发展非常迅速的领域，基本每年都会有很多新的东西出来，可能在最新的一些论文中，大家都开始使用TensorFlow来实现，在此之前都是运用Caffe，这也是学习TensorFlow的一个优势，即能最快地跟上一些最新的技术发布，如果有新的论文研究成果开源，其绝大多数也是使用TensorFlow来实现的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：书中有哪些重点内容是尤其推荐的？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;《TensorFlow实战》的第六章介绍TensorFlow实现经典卷积神经网络，中间有详细讲解AlexNet、VGG、Inception和ResNet这四个经典的深度学习网络，推荐大家重点阅读。因为从中可以看到卷积网络中各个应用和实现起来的技巧。&amp;nbsp;&lt;br&gt;第八章介绍深度强化学习，这块能做出很多有意思的东西。比如可以实现自动玩游戏的程序，通过游戏的视频画面像素直接学习如何来进行游戏。在此我们也列举了实例，是个简单的游戏，实际上是可以推广到非常复杂的模型。像之前DeepMind推出的程序是可以在太空中自动来玩打飞机的游戏，这个游戏叫Atari。在本书中并没有实现那么复杂的网络，但整体的框架和Atari是类似的，读者可以通过它来进行其他游戏的尝试。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：对开发者选择深度学习平台有什么建议？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;对大部分开发者而言选择深度学习框架有三点特别重要，首先这个框架是不是主流的，如果是主流的就会在上面有很多的开源实现，从而查找资料、文档，问问题也会比较方便，这也是最重要的一点。而且它会比较稳定，使用中遇到的问题多半可以得到快速修复；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其次使用它开发起来的效果，简单来说就是写的速度快不快。TensorFlow的设计是比较偏底层的，但它上层有很多比较方便的封装，比如说TFLearn、TFSlim、Keras。有了这些上层封装后，我们就能快速的进行一些简单模型的开发。如果要对底层网络结构进行一些细节上的修改，我们就可以使用最底层的API接口；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后是该平台的运行速度，TensorFlow在刚刚推出时，它的运行速度还不是很快，后来则是凭借谷歌强大的工业实力，尤其是Google强大的技术团队，大约有200人从事该平台的开发，所以它在性能上的进步非常大，现在基本上已经达到主流分布式深度学习平台的执行效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近Google发布了TensorFlow1.0版本，并且还特意提到对Inception v3分布式网络性能的提升。此前多块显卡或者多机器的效率不高，而现在使用8块显卡可以达到7.3倍的提速，64块显卡更是达到56倍的速度提升，所以它并行计算的效率还是非常高的。所以综合比较来说，还是推荐TensorFlow，毕竟它在主流性、开发的便捷性上，还有执行速度上都有不错的表现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;article class="" data-author="Wxeditor" style="margin: 5px auto; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;span&gt;人工智能未来预测&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/section&gt;&lt;/article&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h3 style="margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; color: rgb(62, 62, 62); white-space: normal; widows: 1; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;CSDN：目前深度学习相关的论文和工业界实践都很多，其中有哪些最新进展让您印象深刻？&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;&amp;nbsp;AlphaGo无疑给人们留下了深刻印象，主要是深度强化学习，对强化学习过程的一些细节有所改进，但是对网络本身的内容以及结构改进和优化并不多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外一个特别火的就是GAN这系列，GAN已经能做非常有意思的事情，比如给它大量的语言和图片进行数据训练，它可以完成事务的描述，比如我说一只红色的鸟，它就能自动把这只红色的鸟绘制出来，从无到有就是根据它从大量数据中的学习，以及掌握到的知识和经验实现的。拓展开来，以后可能不仅是图片，可能说一个内容概述，它就能把一段完整的话写出来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近一个能给给素描自动上色的人工智能程序，其效果也是非常惊艳的它把一个铅笔素描或者一幅黑白画，传至网络上，并自动配上一个比较合适的颜色。我也亲自在该网站测试了一次，虽然说可能还达不到人类的程度，但此效果已经非常理想了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：有人认为AlphaGo能赢李世石一局就不错了，但现在AlphaGo的升级版Master已经横扫各大国手，出现这个&amp;rdquo;意外&amp;rdquo;的决定性因素有哪些？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;起初，围棋是一个非常复杂的一个游戏，它有361个点，所以其状态数是3的361次方，其中除去一些非法的情况，总的状态数还是超过了整个宇宙原子的数量。因为变化实在太多，所以注定是无法穷举的。与国际象棋不同，现在只要计算能力够强，我们便可以暴力地搜索所有最优解，但在围棋上肯定是做不到的，所以之前业界普遍认为围棋是一个人工智能无法超越或者无法挑战的项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但AlphaGo做的确实非常好，它是使用了几个技术组合，就包括策略网络、估值网络、蒙地卡罗搜索树、快速走子这四部分。通过大量学习人类高手的对局以及自我对战，从中可以学到人类直觉上的一些战略。比如它对棋的厚薄会有一些判断，会对外势和实地会有一些考量，所以能以4:1战胜李世石。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;之后AlphaGo的升级版Master则是完全抛弃了使用人类高手对战训练的一个网络，它是完全从0开始，自我对战，可能一开始是随机走子，到后面一步一步迭代，训练到现在这个水平。中间可能会抛弃掉很多人类棋手常见的错误，毕竟人类高手下的每步棋也不是最优解，即便学了大量的对局还是存在这个问题。但从0开始自己学习其效果可能会更好，这也是这次棋力提升的一个重大原因之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然它可能还有使用到更深的网络，更好的训练方式，但是这里不管它是使用什么算法，它的底层肯定还是配置在TensorFlow这个集群上训练，所以也间接说明TensorFlow这个分布式计算或者它的科研能力还是非常强的，可以供给DeepMind研发出这样强的一个AI。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：对于AI在行业成熟应用有哪些启示？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;&amp;nbsp;AlphaGo一般来说不算一个成熟的应用，但它是一个特别好的宣传，成熟的应用目前更多还是在普通的判别模型或者是生成模型上。强化学习的话，目前比较稳定又有实际经济价值的点不是很多。像之前使用传统机器学习的地方，例如搜索推荐、广告，包括医学诊断，这块会大量应用深度学习，并且深度学习确实取得了远超其他传统模型的效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而在一些离钱近的方向，包括金融领域、风控、量化交易模型，在这块应用的规模比较大。在其他领域，像医疗诊断、自动驾驶亦或管理家庭生活，如Facebook CEO马克&amp;middot;扎克伯格前段时间就开发了一个叫Jarvis的AI程序，主要就是管理家庭生活中的一些操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总的来讲，并不是看上去最有轰动效果的实际价值就越大，很多时候可能是一些底层看不到的，比如说你今天被推荐了什么东西这类传统的推荐技术，这部分会慢慢开始使用深度学习，然后来替代之前一些老旧的机器学习模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：Chatbot是当前一个热点，DL powered assistant在数据积累和利用比较好的金融领域会首先成熟吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;&amp;nbsp;Chatbot目前来说挺有用，比如智能客服这类，会有直接的商业价值，但其中深度学习应用的点不是很多，更多是对规则和大量模板的匹配。而随机闲聊是可以用DL做出比较好的效果，例如让它回答的答案特别准确，但目前还没有实际的价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而DL powered assistant目前还处于早期阶段，当然有一些比较好的宣传，如国外有一家名为Kensho的AI企业，设计了一款针对金融领域的AI程序，目前看上去还没那么智能，很难给出决策或者建设性的意见。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但平时我们可以先从一些小的角度来思考问题，如深度学习能做得事情大概有三种，其一就是判别式，包括分类和回归；其二是生成式，包括生成语言和生成图像；其三是深度强化学习，可以对我们一系列的决策提供策略上的支持。如果不在这三个领域内，目前而言还是比较困难，理想中的人工智能还是比较遥远。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：有人说DL概念已经到了转折点，有人说GAN其实在以前就已经有类似的应用，计算、大数据和模型带来的深度学习红利是否已经见底？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;深度学习当前正好处在发展中期的阶段，神经网络这个概念很早就被提出来，可能是在几十年前，当时的确轰动了一段时间，但受制于计算资源等问题之后便消沉了。而这次崛起一个方面是NVIDIA的GPU对深度学习提供了强大的计算资源，另外一个是我们积累了大量数据，其实深度学习对于数据量还有计算能力的要求是非常高的，一旦满足这两个条件就会获得非常好的效果，所以目前我并不认为深度学习概念已经到了转折点，而是处于加速上升的阶段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但需要注意的是，有些报道中会把深度学习描述的无所不能，其实目前还是达不到的，现在我们能做的就是前面提到的那三个点，即判别式、生成式以及强化学习。这三个点还在持续的发展中，并且效果会越来越好，此后会有更多应用被人想到并付之行动最后被实施起来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而GAN在此之前确实有一个跟它类似的概念，但两种方法从原理上是完全不一样的，所以GAN是一个全新概念。之后在并行计算和数据规模积累上，我相信会持续给深度学习带来额外的红利，如NVIDIA的GPU每年都会有50%左右的性能提升，之后可能会有专门针对深度学习的芯片和硬件被研发出来，包括Google在底层也在大规模使用它的TPU（Tensor Processing Unit），计算资源肯定会被不断提升，也会支持我们训练更加复杂的神经网络。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而大数据是最近这几年，其积累的数据量呈爆炸式增长，因为有特别多的东西可以被数字化，也包括物联网等。很多不为人们所知的Sensor回默默记录大量的数据，而这些数据未来又会给我们训练模型提供很好的帮助。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CSDN：对未来深度学习平台发展有哪些预测？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;黄文坚：&lt;/span&gt;目前每家大公司都已经推出了自己的深度学习平台，如Google有TensorFlow；Facebook有Torch，可能接下来还会有Caffe2；Amazon有DSSTNE深度学习框架，最近它也接纳了MXNet作为AWS上最为推荐的深度学习框架；微软有CNTK；IBM最近也推出了一个名为Big DL的框架，是一个纯粹在CPU上计算的分布式深度学习框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基本上每家企业都有自己的DL平台，主要是为参与其标准的制订。如果哪家企业推出的框架，无论是在使用人数还是在应用面方面都有出色的表现，到后面的话语权也可能会最大，而且在框架上的一些应用，可以更灵活的进行操控，所以有实力的企业肯定会投入特别大的支持和资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但总体而言，我还是比较看好Google的TensorFlow，目前它最大的问题就是开发效率，Google已经还把Keras框架并到其中，作为它默认支持的一个辅助开发工具。现在我们就不用再使用几百行代码来实现一个复杂的网络，只需几十行代码就能搞定。当你需要在底层上进行一些微调，或者细节上做一些改进时，你同样可以使用最底层的接口，来实现一些当前不是特别流行或特别主流的方法，对于研究者而言也是非常方便的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外Google除了TensorFlow还推出了很多相关工具，比如它推出了tensorflow serving的服务框架，当我们训练好模型后，需要将它部署到服务器中提供预测服务，又或者是其他类型的计算服务。而其他几个框架部署还是比较复杂的，但TensorFlow提供了这个框架，就能实现特别高性能的部署服务。同时它还支持安卓和iOS以及嵌入式，所以应用面会特别广。现在已经可以在手机上，使用手机的CPU来计算运算深度学习的一些网络。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同时Google在这方面的投入应该也是最大的，目前有远超其他公司的研发人员，在全职做这一套工具，同时在GitHub上的Start数量也是遥遥领先其他框架，目前可能是有46000颗星，可能从第二名到第十名加起来也没有TensorFlow多，所以这是一个非常明显的优势。&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;欢迎人工智能相关的技术投稿、约稿、行业分析、热点新闻、编译等，请发送邮件至&lt;/span&gt;&lt;a style="color: rgb(0, 122, 170); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important; background-color: transparent;" target="_blank"&gt;&lt;strong&gt;&lt;span&gt;baiyan@csdn.net&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;article class="" data-author="Wxeditor" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;article class="" data-author="Wxeditor" style="margin: 5px auto; max-width: 100%; border: 0px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;span&gt;扫描下方二维码报名在线直播课&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/article&gt;&lt;/article&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;img src="http://img04.iwgc.cn/mpimg/dafd138c8bac067939230c994a941868d07fabeb"/&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 02 Mar 2017 16:26:39 +0800</pubDate>
    </item>
    <item>
      <title>学会“投机取巧”——Redis之父九条忠告，如何成为“一打十”的程序员</title>
      <link>http://www.iwgc.cn/link/513f1465bca50f0c672e1b4303aecfee2642fbfe</link>
      <description>
&lt;blockquote style="margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; color: rgb(51, 51, 51); word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;据维基百科记载：&amp;ldquo;&lt;span&gt;Redis&lt;/span&gt;是一个使用ANSI C编写的开源、支持网络、基于内存、可选持久性的键值对存储数据库。根据&lt;a style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;" target="_blank"&gt;月度排行网站DB-Engines.com的数据&lt;/a&gt;显示，Redis是最流行的键值对存储数据库。&amp;rdquo;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Redis 之父 Salvatore Sanfilippo&lt;/span&gt;，一名意大利程序员，大家更习惯称呼他 Antirez。本文为Salvatore所写，CSDN编译，具体讲述了其心目中成就一名&amp;ldquo;野兽级&amp;rdquo;程序员的可贵品质。&lt;/p&gt;&lt;p&gt;附一篇CSDN于2011年发布的&lt;a style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;" target="_blank"&gt;Salvatore访谈文章&lt;/a&gt;&lt;span&gt;（http://www.csdn.net/article/2011-01-18/290347）&lt;/span&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src="http://img05.iwgc.cn/mpimg/77fd60b71bae99a51aae978373f0c5e8039558da"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Salvatore Sanfilippo （图片来自&lt;/span&gt;&lt;a style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;" target="_blank"&gt;&lt;span&gt;Usesthis&lt;/span&gt;&lt;/a&gt;&lt;span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;坊间流传着&amp;ldquo;十倍程序员&amp;rdquo;的传说，所谓&amp;ldquo;十倍程序员&amp;rdquo;是指在同样时间内可以做&amp;ldquo;普通&amp;rdquo;程序员十倍的工作的程序员，而所谓&amp;ldquo;普通&amp;rdquo;是指那些擅长自己的领域，但不具有&amp;ldquo;十倍程序员&amp;rdquo;那样特殊魔力的程序员。更准确地说，普通程序员就是指那些具有平均编程效率的专业程序员。&lt;/p&gt;&lt;p&gt;在程序员群体中，对于&amp;ldquo;十倍程序员&amp;rdquo;的存在持有极度分化的观点：一些人认为这样的人绝不存在，另一些人则认为不仅存在，而且甚至存在&amp;ldquo;百倍程序员&amp;rdquo;。&lt;/p&gt;&lt;p&gt;如果你认为编程是一项线性工作（产出与劳动时间成正比的工作），那么显然&amp;ldquo;十倍程序员&amp;rdquo;是一种不合理的存在。一个跑步运动员不可能比对手跑得快十倍，一个建筑工人也不可能在同等时间建造十倍于别人的东西。然而，编程实际上是一项特殊的&amp;ldquo;设计&amp;rdquo;工作。此处设计不单指架构师的工作。即便不是项目的整体设计，当工程师具体实现它的时候，依然需要低层的实现策略的设计。&lt;/p&gt;&lt;p&gt;在我看来，程序的设计和实现不是一项线性工作。经验、代码能力、知识、对不重要事项的辨识能力都是不易量化的能力，这些能力的结合在程序开发中发挥重要作用，使程序员更高效。特别是当一个程序员需要全程参与到项目的设计与实现时，这些能力的优势更加明显。&lt;/p&gt;&lt;p&gt;越是以结果为导向的任务越能激发高效程序员的能力。因为在结果导向的任务中，高效的程序员能够找到自己的方式，用更少的投入达到同样的效果。他们可以从顶层改变目标的实现路径，有时甚至直接去掉不必要的模块，来减少工作量而不影响目标的达成。而相对要求严格的项目，则会使这种效应减弱，因为程序员不得不受到诸如&amp;ldquo;使用某某工具&amp;rdquo;，&amp;ldquo;通过某某算法&amp;rdquo;的限制。虽然如此，高效程序员在这种多限制的情况下仍有其优势：他们可以发掘细节处优化实现的办法。&lt;/p&gt;&lt;p&gt;在我二十年的编程生涯中，始终观察我身边的程序员，无论我的同事、学徒，还是Redis或者其他项目的贡献者，以指导他们高效地达到既定目标。很多人说我是个很&amp;ldquo;快&amp;rdquo;的程序员。鉴于我不是个工作狂，所以我想以我为例来说明如何高效编程。&lt;/p&gt;&lt;p&gt;以下是我认为影响程序员工作效率的最主要因素：&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;strong&gt;&lt;span&gt;纯编程能力：不写一行多余代码&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;程序员的纯编程能力是程序员水平的最直接表现。在解决实际问题时候，程序员经常会被要求实现项目的某一个子模块，一个函数或者一个算法等等。令人惊讶的是，我发现在这个过程中，很少有人能够做到用最少的命令高效地完成任务。我甚至发现在很多团队中，竟然存在会忘记使用排序算法的不称职的程序员，这让他们甚至无法胜过虽然缺乏实践经验但理论完备的毕业生。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;经验：踩在前人的肩膀上&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;所谓经验，我指的是重复出现的任务的成熟解决方案。一个有经验的程序员知道如何处理各种任务。这可以避免重复设计，更重要的是可以避免设计错误，设计错误是程序员效率的最大敌人。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;专注：高效利用时间&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;对于任何事情，时间的有效利用都至关重要，许多内在和外在的因素都会导致程序员丧失专注度。内在因素包括拖延症、没有兴趣、缺乏经验、睡眠短缺等。外在因素包括频繁的会议、工作环境、同事的干扰等。提高专注度、避免打扰能够提高编程效率，这很好理解。有时，为了专注，需要狠下心来，采取较为极端的措施。比如邮件，虽然都会看，但只回复很少的一部分。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;不要吝惜时间设计：防止推倒重来&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;很多时候，程序员非常不情愿看到的一种情况是，需要在一些无关紧要的功能上浪费大量的时间，但你又不得不去将这个无关紧要的功能实现，因为它牵扯着这个项目的主要功能。这种时候，就需要反思，在顶层设计的时候是否考虑周全。详细而缜密的顶层设计能够减少上述情况的发生，即降低模块间的耦合性。对于项目的设计者来说，意识到每一个细小的模块都有可能成为项目的瓶颈，这很重要。对于项目而言，最终的目标是合理的时间做最大的产出，那么实施重点就应该放在项目最主要的模块上。拿我设计Disque（一个开源的分布式消息队列）为例，我意识到只要提供最优的消息排列方式，至于项目其他锦上添花的方面都可以后续慢慢补充，例如，可用性、查询语言、客户端交互、简易性及系统性能。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;简洁性：避免细节错误才是程序简洁的根本&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;简洁性意味着很多。为了理解什么是简洁性，首先来看看究竟可以多复杂？我相信导致复杂性有两个罪魁祸首，除了上面所说的不愿意花费过多的时间在设计上，还有一个是在设计过程中错误的累积。&lt;/p&gt;&lt;p&gt;思考一下程序实施的过程，所谓失之毫厘，谬以千里。一个初始的设计错误可能不会导致所在功能的重新设计，但可能会导致开发者需要在其他功能上做大量的工作来应对这个错误。因此，项目一步一步走向复杂和低效。&lt;/p&gt;&lt;p&gt;简洁性需要一步一步实现。程序员可以从最直接可靠的解决方式开始入手，用尽可能简单的方式实现功能，之后随着经验和编程能力的提高，程序员就有能力去优化设计了。&lt;/p&gt;&lt;p&gt;每次遇到不得不采取复杂的解决的方案的情况，开发者都应该花些时间想想如何避免这种情况的发生。只有在考虑了各种不同的方式，发现不得不走这条道路的时候，才继续在这个方向上前进。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;完美主义：高效产出的最大阻碍&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;完美主义有两种类型，一种是追求至高性能的工程师文化，一种要符合个人趣向的执拗。两种情况都妨碍到程序员快速发布项目。完美主义和对外界评价的在乎会使程序员过多地将关注点放在一些细枝末节上，进而主观忽视项目的关键特性，例如程序的稳健性、简洁性、及是否能够按时交付。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;知识：某些关键问题还是要依靠理论解决&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;当处理复杂的任务时：数据结构知识、对计算能力的极限的了解、对针对某个任务最行之有效的小众算法的了解，会帮助我们解决这些任务。对于开发者而言，对所有问题的所有解决方案都了如指掌这不现实，但对于某类问题的多数潜在解决方案都有所了解是必须的。例如，容许一定错误率，考虑概率集合基数估计量，可以设计一个优化的流的元素计数算法，避免复杂，缓慢，空间效率低下的缺点。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;底层：熟悉计算机的脾性&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;即便我们使用的是高级语言，但不了解计算机的内部运行机制仍然会导致一些问题。有时系统会出现涉及到底层问题的工具或算法错误，导致整个系统的重新设计实施。深入理解C语言、CPU运算机理和操作系统内核会避免我们遇到在项目后期&amp;ldquo;推倒重来&amp;rdquo;的情况。&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;Debug能力：无需多言&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;寻找Bug总是非常耗费时间的。擅长发现、定位并合理地解决Bug，以及在编程过程中尽可能简化程序以减少Bug，这些素质将极大地提高程序员的编程效率&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;对于我来说，一个拥有以上素质的程序员，能表现出&amp;ldquo;十倍&amp;rdquo;于平庸程序员的效率是绝不意外的。往往，他们在项目开始的可行性研究阶段就能做出正确的决策，这样一来，数倍于常人的效率是很容易实现的。这种方式我称之为&amp;ldquo;取巧编程&amp;rdquo;，意思是在开发过程中的每一步都选择最优化的解决方案，花费最少的努力获得最大的用户体验。&lt;/p&gt;&lt;blockquote style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;译者：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;王安阳，上海交通大学研究生在读。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;责编：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;王艺 CSDN AI 编辑 / 记者，投稿、采访、寻求合作请邮件至wangyi@csdn.net。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
      <pubDate>Thu, 02 Mar 2017 16:26:39 +0800</pubDate>
    </item>
    <item>
      <title>《程序员》3月精彩内容：大数据技术辨析与深度实践</title>
      <link>http://www.iwgc.cn/link/4d1d6f9b951130766f3c3f79bd4d5b72f948a767</link>
      <description>
&lt;p&gt;&lt;img src="http://img04.iwgc.cn/mpimg/83dfe3d48c02a5778d63bac581e1cba70ae10d7e"/&gt;&lt;/p&gt;&lt;p&gt;随着技术迭代的不断加速，大数据极大改变了行业领域对信息流动的限制。本期封面报道聚焦领域内热门技术与应用实践，带领大家深度解析大数据技术难点和发展趋势。厉兵秣马今点将，群雄逐鹿正当时&amp;mdash;&amp;mdash;本期精彩不容错过。&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;探讨数据时代构建高可用数据库的新技术（崔秋，PingCAP联合创始人）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用Marathon管理Spark 2.0.2实现运行运行期扩容的executor调度（李雪岩，徐磊，吕晓旭）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;解析阿里云分布式调度系统伏羲（陶阳宇，花名举水，阿里云高级技术专家）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;大数据引擎Greenplum那些事（周雷皓，百度外卖大数据资深架构师）&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr style="margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;资讯&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;br&gt;CSDN要闻&amp;nbsp;&lt;br&gt;大脑理论与智能机器探索者&amp;mdash;&amp;mdash;Jeff Hawkins专访（记者/卢鸫翔）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51); word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;&amp;ldquo;虽然没人确切知道恐龙是怎么灭绝的，与之相关的理论却很多&amp;mdash;&amp;mdash;关于大脑则完全相反。&amp;rdquo;作为工程师，Jeff Hawkins创立了两家便携计算机公司，Palm和Handspring，开发了风靡一时的PalmPilot和Treo智能电话。然而作为科学家，理解大脑运作方式、原理，并按同样原理制造智能机器才是他一生的追求。&lt;/p&gt;&lt;/blockquote&gt;&lt;hr style="margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;span&gt;人工智能&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;WSDM 2017精选论文（洪亮劼，Etsy数据科学主管）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;数据挖掘和机器学习应用的顶级会议The Tenth ACM International Conference on Web Search and Data Mining （WSDM 2017）2月已在英国剑桥圆满举行。纵观过去十年的发展，WSDM已经成长为学术圈和工业界都十分倚重的经典跨界会议。不像KDD、WWW或者SIGIR，WSDM因为从最开始就由不少工业界的学术领导人发起并且长期引领，所以十分重视工业界的学术成果的展现。有不少经典的工业界文章在过去十年里，都是通过WSDM发表的。今年也不例外，因为WSDM的论文涵盖非常广泛的主题，而且一般的读者很难从浩如烟海的文献中即刻抓取到有用信息，这里笔者从80篇会议文章中精选出5篇有代表性的文章，为读者提供思路。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Bandit算法与推荐系统（陈开江，天农科技CTO）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;推荐系统里面有两个经典问题：EE和冷启动。前者涉及到平衡准确和多样，后者涉及到产品算法运营等一系列。Bandit算法是一种简单的在线学习算法，常常用于尝试解决这两个问题，本文为你介绍基础的Bandit算法及一系列升级版，以及对推荐系统这两个经典问题的思考。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;无人驾驶中的决策规划控制技术（李力耘，刘少山）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;无人车作为一个复杂软硬件结合系统，其安全可靠运行需要车载硬件、传感器集成、感知预测，以及控制规划等多个模块的协同配合工作。作者认为最关键的部分是感知预测和决策控制规划的紧密配合。狭义上的决策规划控制部分，包含了无人车行为决策（Behavior Decision）、动作规划（Motion Planning）, 以及反馈控制（Feedback Control）这三个模块。而从更宽泛的概念来说，无人车的决策规划控制模块，紧密依赖于上游的路由寻径（Routing）以及交通预测（Prediction）的计算结果，所以本文也对路由寻径和交通预测模块进行介绍。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr style="margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;span&gt;移动&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;谈Fuzz技术挖掘Android漏洞（刘朋，NICP国家安全重点实验室成员，CSDN博客专家）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;Android系统服务在为用户提供便利的同时，也存在着一些风险。在使用系统服务的过程中，异常的外部数据，有可能会导致系统服务崩溃，甚至是远程代码执行，内存破坏等严重后果。Android系统服务的安全问题需要重视。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;58同城移动端Passport SDK的设计与技术细节（张达理，58同城iOS客户端架构师）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;58赶集集团旗下拥有多个App，且全部使用同一套账号体系，通过Passport部门提供的接口进行通信。经过多年迭代，各个App中关于Passport的功能均出现了一些流程和接口上的差异。为了提高账号安全，统一服务接口和流程，提高用户体验，由此决定开发了一个Passport SDK，以集成Passport的相关功能，并提供给集团内各业务App使用。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;饿了么移动基础设施建设（王朝成，饿了么移动技术移动基础架构组负责人、移动架构师）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;面对移动端应用研发的一系列技术挑战，饿了么开启了移动基础设施的建设工程实践，以应对未来在移动端所面临的变化以及更多的挑战。本文作者从用户体验分级、基础设施概念与建设等方面着手，细谈饿了么移动基础设施建设的实践。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;携程无线工程技术系列&amp;mdash;&amp;mdash;从零打造携程无线持续交付平台MCD实践（刘李丰，携程无线基础工程团队高级经理）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;携程App几乎承载着整个集团的所有业务形态，亟需一个有效的无线持续交付平台来实现大版本的快速集成发布，由此，携程无线工程技术团队从零开始，一步步打造适合携程研发流程的无线持续交付平台。本文为&amp;ldquo;携程无线工程技术系列&amp;rdquo;第一篇。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr style="margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;&lt;span&gt;技术&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;C++14实现编译期反射&amp;mdash;&amp;mdash;剖析magic_get中的magic（祁宇，《深入应用C++11》作者，C++开源社区purecpp.org创始人）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;本文将通过分析magic_get源码来介绍magic_get实现的关键技术，深入解析实现pod类型反射的原理。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;双11背后的运维技术&amp;mdash;&amp;mdash;阿里巴巴基础运维平台StarAgent的架构演进（毛茂德，阿里巴巴集团应用运维平台负责人）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;本文主要介绍支撑阿里巴巴全集团服务器集群管理的基础运维平台StarAgent的架构演进，以及应用运维平台Normandy的架构演进。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在Node.js中看JavaScript的引用（黄鼎恒，饿了么Node Team负责人）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;对于从PHP转到Node.js的作者而言，Node.js编辑完代码后必须重启真是件麻烦事。在不重启情况下热更新Node.js代码，是本文重要讨论的话题。而解决该问题，JavaScript的引用成为了关键。层层剖析，抽丝剥茧，带你了解问题本质及解决之道。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缓存那些事（熊明辉，美团点评酒旅事业群酒店住宿研发团队B端商家业务平台负责人）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;在网络分层应用服务中，缓存的使用已比较普及，本文将结合作者实际工作经验总结，讲述在不同的场景下如何选择和使用适用的缓存框架，以达到提升服务质量，优化系统架构的目的。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;OLTP类系统数据结转最佳实践（王宝令，者文明）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;本文着重介绍了京东数据结转平台的技术架构，及OLTP类系统数据结转最佳实践，探讨解决大数据背景下的数据结转问题。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;PNG故障的艺术（文 / UCNV，译者 / 郭韵）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;PNG是一种图像格式，始于1995年，作为一种颇受欢迎的图像格式，PNG至今仍十分盛行。一般而言，PNG以无损失压缩或处理透明像素的能力为人所知。然而，我并不想从泛泛的角度去看待不同的图像格式，而是尝着用不同的方式让它们发生故障，你有没有想过，PNG发生故障时是什么效果呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Hacker曾经知晓的那些事（文 / Eric S. Raymond 译/ 赵屹华）&lt;/p&gt;&lt;blockquote style="margin-top: 10px; margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); font-size: 14px; word-wrap: break-word !important; background: rgb(247, 247, 247);"&gt;&lt;p&gt;这篇文章是笔者收集的一些关于ASCII以及相关技术的介绍，特别是硬件串口终端、RS-232和调制解调器等技术。昔日，这是些人尽皆知的概念，而如今知者甚少。现在已经很少有人直接使用这些技术了，只有在老古董设备中才能见到它们。即便如此，为了文化的传承，让我们来了解它们也无妨。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr style="margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"/&gt;&lt;p&gt;订阅程序员（含iOS、Android及印刷版）请访问&amp;nbsp;&lt;a style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;" target="_blank"&gt;http://dingyue.programmer.com.cn&lt;/a&gt;&amp;nbsp;&lt;br&gt;&lt;img src="http://img04.iwgc.cn/mpimg/357ffff9b06b4b8c842752aa4c44640af56dedfe"/&gt;&lt;/p&gt;&lt;p&gt;订阅咨询：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; box-sizing: border-box; font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; color: rgb(51, 51, 51); word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;在线咨询（QQ）：2251809102&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;电话咨询：010-64351436&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;更多消息，欢迎关注&amp;ldquo;&lt;a style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;" target="_blank"&gt;程序员编辑部&lt;/a&gt;&amp;rdquo;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
</description>
      <pubDate>Thu, 02 Mar 2017 16:26:39 +0800</pubDate>
    </item>
  </channel>
</rss>
