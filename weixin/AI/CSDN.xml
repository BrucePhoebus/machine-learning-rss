<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>彰显技术力量 成就创新未来 C-Tech Awards2016最具价值大奖</title>
      <link>http://www.iwgc.cn/link/4501183</link>
      <description>&lt;p&gt;&lt;span&gt;为了表彰在过去一年中为推动IT行业发展做出贡献的IT企业和产品，CSDN推出了“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;彰显技术力量&amp;nbsp;成就创新未来&amp;nbsp;C-Tech&amp;nbsp;Awards2016最具价值大奖&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”。此奖项自上线以来，IT企业踊跃报名，到目前为止已经收到上百家企业资料。参选报名仍在继续，我们将集合众多行业专家的评选意见选出各行业的领导者，并将在2月颁出将此奖项。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;本奖项报名截止日期：2月7日&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;颁奖典礼：2月12日&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;评选进展情况请扫描下方&lt;strong&gt;二维码&lt;/strong&gt;，或点击&lt;strong&gt;原文链接&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXaLqD3TRh4XP3oGV6QHzoaOC4dyjK5nJGJwXGl6jIy70aybq6eWdfKfaRGZpXzsxTvZgEDst9t4g/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 26 Jan 2017 23:39:10 +0800</pubDate>
    </item>
    <item>
      <title>基于Alluxio系统的Spark DataFrame高效存储管理技术</title>
      <link>http://www.iwgc.cn/link/4468556</link>
      <description>&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;本文由南京大学顾荣、黄志翻译整理自Alluxio公司技术博客，由Alluxio公司授权CSDN首发（联合），版权归Alluxio公司所有，未经版权所有者同意请勿转载。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;介绍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;越来越多的公司和组织开始将Alluxio和Spark一起部署从而简化数据管理，提升数据访问性能。Qunar最近将Alluxio部署在他们的生产环境中，从而将Spark streaming作业的平均性能提升了15倍，峰值甚至达到300倍左右。在未使用Alluxio之前，他们发现生产环境中的一些Spark作业会变慢甚至无法完成。而在采用Alluxio后这些作业可以很快地完成。在这篇文章中，我们将介绍如何使用Alluxio帮助Spark变得更高效，具体地，我们将展示如何使用Alluxio高效存储Spark DataFrame。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Alluxio和Spark缓存&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户使用Alluxio存储Spark DataFrame非常简单：通过Spark DataFrame write API将DataFrame作为一个文件写入Alluxio。通常的做法是使用df.write.parquet()将DataFrame写成parquet文件。在DataFrame对应的parquet文件被写入Alluxio后，在Spark中可以使用sqlContext.read.parquet()读取。为了分析理解使用Alluxio存储DataFrame和使用Spark内置缓存存储DataFrame在性能上差异，我们进行了如下的一些实验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实验相关设置如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;硬件配置：单个worker安装在一个节点上，节点配置：61 GB内存 + 8核CPU；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;软件版本：Spark 2.0.0和Alluxio1.2.0，参数均为缺省配置；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;运行方式：以standalone模式运行Spark和Alluxio。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在本次实验中，我们使用Spark内置的不同缓存级别存储DataFrame对比测试使用Alluxio存储DataFrame，然后收集分析性能测试结果。同时通过改变DataFrame的大小来展示存储的DataFrame的规模对性能的影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;存储DataFrame&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Spark DataFrame可以使用persist() API存储到Spark缓存中。persist()可以缓存DataFrame数据到不同的存储媒介。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本次实验使用了以下Spark缓存存储级别（StorageLevel）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;MEMORY_ONLY：在Spark JVM内存中存储DataFrame对象&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;MEMORY_ONLY_SER：在Spark JVM内存中存储序列化后的DataFrame对象&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DISK_ONLY: 将DataFrame数据存储在本地磁盘&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面是一个如何使用persist() API缓存DataFrame的例子:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;df.persist(MEMORY_ONLY)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将DataFrame保存在内存中的另一种方法是将DataFrame作为一个文件写入Alluxio。Spark支持将DataFrame写成多种不同的文件格式，在本次实验中，我们将DataFrame写成parquet文件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面是一个将DataFrame写入Alluxio的例子：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;df.write.parquet(alluxioFile)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;查询存储在Alluxio上的DataFrame&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DataFrame被保存后（无论存储在Spark内存还是Alluxio中），应用可以读取DataFrame以进行后续的计算任务。本次实验中，我们创建了一个包含2列的DataFrame（这2列的数据类型均为浮点型），计算任务则是分别计算这2列数据之和。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当DataFrame存储在Alluxio时，Spark读取DataFrame就像从Alluxio中读取文件一样简单。下面是一个从Alluxio中读取DataFrame的例子：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;df = sqlContext.read.parquet(alluxioFile)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;df.agg(sum("s1"), sum("s2")).show()&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们分别从Alluxio中 parquet文件以及各种Spark存储级别缓存中读取DataFrame，并进行上述的聚合计算操作。下图显示了不同存储方案中的聚合操作的完成时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfrdFia6ObF2J9PeMs8mp9wDOhGWf8M8JCLzKz3hicJ2iaveAKGericb1vwA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从上图可以看出，从Alluxio中读取DataFrame进行聚合操作具有比较稳定的执行性能。对于从Spark缓存中读取DataFrame，在DataFrame规模较小时执行性能具有一定优势，但是随着DataFrame规模的增长，性能急剧下降。在本文的实验环境中，对于各种Spark内置的存储级别， DataFrame规模达到20 GB以后，聚合操作的性能下降比较明显。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另一方面，相比使用Spark内置缓存，使用Alluxio存储DataFrame并进行聚合操作，其性能在小规模数据上略有劣势。然而，随着DataFrame数据规模的增长，从Alluxio中读取DataFrame性能更好，因为从Alluxio中读取DataFrame的耗时几乎始终随着数据规模线性增长。由于使用Alluxio存储DataFrame的读写性能具有较好的线性可扩展性，上层应用可以稳定地以内存速度处理更大规模的数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;使用Alluxio共享存储的DataFrame&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用Alluxio存储DataFrame的另一大优势是可以在不同Spark应用或作业之间共享存储在Alluxio中的数据。当一个DataFrame文件被写入Alluxio后，它可以被不同的作业、SparkContext、甚至不同的计算框架共享。因此，如果一个存储在Alluxio中的DataFrame被多个应用频繁地访问，那么所有的应用均可以从Alluxio内存中直接读取数据，并不需要重新计算或者从另外的底层外部数据源中读取数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了验证采用Alluxio共享内存的优势，我们在如上述的同样的实验环境中进行相同规模的DataFrame聚合操作。当使用50 GB规模的DataFrame时，我们在单个Spark应用中进行聚合操作，并且记录该聚合操作的耗时。没有使用Alluxio时，Spark应用需要每次都从数据源读取数据(在本次实验中是一个本地SSD)。在使用Alluxio时，数据可以直接从Alluxio内存中读取。下图显示了2次聚合操作的完成时间性能对比。使用Alluxio的情况下，聚合操作快了约2.5倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfl2XJeoTUkAicbWgM0eSovDrdyAHm7miaiaNrlT8VuZMw427GYCjMGicJHA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在上图的实验中，数据源是本地SSD。如果DataFrame来自访问起来更慢或不稳定的数据源，Alluxio的优势就更加明显了。举例而言，下图是DataFrame数据源由本地SSD替换为某公有云存储的实验结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfbibicljY8JubFpr5LxPRiacdPLgWEc5KhhT4Waicy1PKFBOmH9tDPcj0DA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这张图显示是执行7次聚合操作的平均完成时间。图中的红色的误差范围（error bar）代表完成时间的最大和最小范围。这些结果清晰地显示出Alluxio可以显著提升操作的平均性能。这是因为使用Alluxio缓存DataFrame时，Spark可以直接从Alluxio内存中读取DataFrame，而不是从远程的公有云存储中。平均而言，Alluxio可以加速上述DataFrame的聚集操作性能超过10倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另一方面，由于数据源是公有云系统，Spark必须跨网络远程读取数据。错综复杂的网络状况会导致读取性能难以预测。这种性能的不稳定性从上图中的误差范围（error bar）可以很明显地看出。在不使用Alluxio的情况下，Spark作业的完成时间变化范围超过1100秒。当使用Alluxio之后，完成时间的变化范围只有10秒。在本实验中，Alluxio能够将数据读取造成的不稳定性降低超过100倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于共有云存储系统的网络访问性能不可预测性，最慢的Spark作业执行时间超过1700秒, 比平均慢2倍。然而，当使用Alluxio时，最慢的Spark作业执行时间大约比平均时间只慢6秒。因此，如果以最慢的Spark作业执行时间来评估，Alluxio可以加速DataFrame聚合操作超过17倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Alluxio可以在多个方面帮助Spark变得更高效。这篇文章介绍了如何使用Alluxio存储Spark DataFrame，并且实验验证了采用Alluxio带来的优势：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Alluxio可以直接在内存中保存大规模的数据来加速Spark应用；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Alluxio能够在多个Spark应用之间快速共享存储在内存中的数据；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Alluxio可以提供稳定和可预测的数据访问性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Tue, 24 Jan 2017 16:57:07 +0800</pubDate>
    </item>
    <item>
      <title>推荐系统中基于深度学习的混合协同过滤模型</title>
      <link>http://www.iwgc.cn/link/4468557</link>
      <description>&lt;p&gt;&lt;span&gt;近些年，深度学习在语音识别、图像处理、自然语言处理等领域都取得了很大的突破与成就。相对来说，深度学习在推荐系统领域的研究与应用还处于早期阶段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;携程在深度学习与推荐系统结合的领域也进行了相关的研究与应用，并在国际人工智能顶级会议AAAI 2017上发表了相应的研究成果《A Hybrid Collaborative Filtering Model with Deep Structure for Recommender Systems》，本文将分享深度学习在推荐系统上的应用，同时介绍携程基础BI团队在这一领域上的实践。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、推荐系统介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐系统的功能是帮助用户主动找到满足其偏好的个性化物品并推荐给用户。推荐系统的输入数据可以多种多样，归纳起来分为用户(User)、物品(Item)和评分(Ratings)三个层面，它们分别对应于一个矩阵中的行、列、值。对于一个特定用户，推荐系统的输出为一个推荐列表，该列表按照偏好得分顺序给出了该用户可能感兴趣的物品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfkUkCPIzeje3NoQZwxTicAYjPGbH4fw5nZFkslDZuhkPrsXf0rr0AuAA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1. 推荐系统问题描述&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如图1右边所示，推荐问题一个典型的形式化描述如下：我们拥有一个大型稀疏矩阵，该矩阵的每一行表示一个User，每一列表示一个Item，矩阵中每个“+”号表示该User对Item的Rating，(该分值可以是二值化分值，喜欢与不喜欢；也可以是0~5的分值等)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在需要解决的问题是：给定该矩阵之后，对于某一个User，向其推荐那些Rating缺失的Item(对应于矩阵中的“?”号)。有了如上的形式化描述之后，推荐系统要解决的问题归结为两部分，分别为预测(Prediction)与推荐(Recommendation)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“预测”要解决的问题是推断每一个User对每一个Item的偏爱程度，“推荐”要解决的问题是根据预测环节所计算的结果向用户推荐他没有打过分的Item。但目前绝大多数推荐算法都把精力集中在“预测”环节上，“推荐”环节则根据预测环节计算出的得分按照高低排序推荐给用户，本次分享介绍的方案主要也是”预测”评分矩阵R中missing的评分值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、基于协同过滤的推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于协同过滤的推荐通过收集用户过去的行为以获得其对物品的显示或隐式信息，根据用户对物品的偏好，发现物品或者用户的相关性，然后基于这些关联性进行推荐。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其主要可以分为两类：分别是memory-based推荐与model-based推荐。其中memory-based推荐主要分为Item-based方法与User-based方法。协同过滤分类见图2。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfJMk0Z6za1fs4psic26JfDMeTYvbPcL1TaQqntRedlxbj2JVRgt97l7A/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2. 协同过滤分类&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Memory-based推荐方法通过执行最近邻搜索，把每一个Item或者User看成一个向量，计算其他所有Item或者User与它的相似度。有了Item或者User之间的两两相似度之后，就可以进行预测与推荐了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfsKyKLHKchGAdnZp1bbTDIUtdic9SVKPIiatKbKk5glcoHHrfJMe3Ls2Q/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图3. 矩阵分解示意图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Model-based推荐最常见的方法为Matrix factorization，其示意图见图3左边。矩阵分解通过把原始的评分矩阵R分解为两个矩阵相乘，并且只考虑有评分的值，训练时不考虑missing项的值，如图3右边所示。R矩阵分解成为U与V两个矩阵后，评分矩阵R中missing的值就可以通过U矩阵中的某列和V矩阵的某行相乘得到。矩阵分解的目标函数见图3，U矩阵与V矩阵的可以通过梯度下降(gradient descent)算法求得，通过交替更新u与v多次迭代收敛之后可求出U与V。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;矩阵分解背后的核心思想，找到两个矩阵，它们相乘之后得到的那个矩阵的值，与评分矩阵R中有值的位置中的值尽可能接近。这样一来，分解出来的两个矩阵相乘就尽可能还原了评分矩阵R，因为有值的地方，值都相差得尽可能地小，那么missing的值通过这样的方式计算得到，比较符合趋势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;协同过滤中主要存在如下两个问题：稀疏性与冷启动问题。已有的方案通常会通过引入多个不同的数据源或者辅助信息(Side information)来解决这些问题，用户的Side information可以是用户的基本个人信息、用户画像信息等，而Item的Side information可以是物品的content信息等。例如文献[1]提出了一个Collective Matrix Factorization(CMF)模型，如图4所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfhY5aoamTT9iariaQMicFR9sJoT6OSqW61YG6HIQTObjngpoRmuL5miax1A/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图4. Collective Matrix Factorization模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CMF模型通过分别分解评分矩阵R，User的side information矩阵，Item的side information矩阵，其中User或者Item出现在多个矩阵中，其所分解的隐向量都是一致的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;三、深度学习在推荐系统中的应用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Model-based方法的目的就是学习到User的隐向量矩阵U与Item的隐向量矩阵V。我们可以通过深度学习来学习这些抽象表示的隐向量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Autoencoder(AE)是一个无监督学习模型，它利用反向传播算法，让模型的输出等于输入。文献[2]利用AE来预测用户对物品missing的评分值，该模型的输入为评分矩阵R中的一行(User-based)或者一列(Item-based)，其目标函数通过计算输入与输出的损失来优化模型，而R中missing的评分值通过模型的输出来预测，进而为用户做推荐,其模型如图5所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfatKIQMfUVrSibXCbmyHYIYuNn6399brGlQX8BbtPm3L1XtOVicXDO8CA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图5. Item-based AutoRec模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Denoising Autoencoder(DAE)是在AE的基础之上，对输入的训练数据加入噪声。所以DAE必须学习去除这些噪声而获得真正的没有被噪声污染过的输入数据。因此，这就迫使编码器去学习输入数据的更加鲁棒的表达，通常DAE的泛化能力比一般的AE强。Stacked Denoising Autoencoder(SDAE)是一个多层的AE组成的神经网络，其前一层自编码器的输出作为其后一层自编码器的输入，如图6所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfRBaPydjibbgSYooJzjEtibsiahGvNOFI294GWedgtvSxjPn6J98AHU1zg/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图6. SDAE&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文献[3]在SDAE的基础之上，提出了Bayesian SDAE模型，并利用该模型来学习Item的隐向量，其输入为Item的Side information。该模型假设SDAE中的参数满足高斯分布，同时假设User的隐向量也满足高斯分布，进而利用概率矩阵分解来拟合原始评分矩阵。该模型通过最大后验估计(MAP)得到其要优化的目标函数，进而利用梯度下降学习模型参数，从而得到User与Item对应的隐向量矩阵。其图模型如图7所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHf5laicYpIIYn8MyzEmBzicQ6LiaQ1gBT0gIib5uUdtUARIic3IibsXTzdIJfQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图7. Bayesian SDAE for Recommendation Sysytem&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在已有工作的基础之上，携程基础BI算法团队通过改进现有的深度模型，提出了一种新的混合协同过滤模型，并将其成果投稿与国际人工智能顶级会议AAAI 2017并被接受。该成果通过利用User和Item的评分矩阵R以及对应的Side information来学习User和Item的隐向量矩阵U与V，进而预测出评分矩阵R中missing的值，并为用户做物品推荐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfRIyQswWibLkl2WRLdmoTPY7CQJSt8Q2Fz1gdeic7SE8caKnuZspZRbiag/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图8. Additional Stacked Denoising Autoencoder(aSDAE)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该成果中提出了一种Additional Stacked Denoising Autoencoder(aSDAE)的深度模型用来学习User和Item的隐向量，该模型的输入为User或者Item的评分值列表，每个隐层都会接受其对应的Side information信息的输入(该模型灵感来自于NLP中的Seq-2-Seq模型，每层都会接受一个输入，我们的模型中每层接受的输入都是一样的，因此最终的输出也尽可能的与输入相等)，其模型图见图8。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结合aSDAE与矩阵分解模型，我们提出了一种混合协同过滤模型，见图9所示。该模型通过两个aSDAE学习User与Item的隐向量，通过两个学习到隐向量的内积去拟合原始评分矩阵R中存在的值，其目标函数由矩阵分解以及两个aSDAE的损失函数组成，可通过stochastic gradient descent(SGD)学习出U与V，详情大家可以阅读我们的paper《A Hybrid Collaborative Filtering Model with Deep Structure for Recommender Systems》[4]。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfnpic2gOb2iaHrPaRcSicibcvWVCcng1iczlItRE0iaf2bg9ZnMcbrVSZPsqQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图9. 混合协同过滤模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们利用RMSE以及RECALL两个指标评估了我们模型的效果性能，并且在多个数据集上和已有的方案做了对比实验。实验效果图如图10所示，实验具体详情可参看我们的paper。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHffcqj1YCLMj5ibSOp7qyuXR6ecRH8YByGvQbYXpgrUDmlGHXTt0HeNXQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图10. 实验效果对比&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在今年的推荐系统顶级会议RecSys上，Google利用DNN来做YouTube的视频推荐[5]，其模型图如图11所示。通过对用户观看的视频，搜索的关键字做embedding，然后在串联上用户的side information等信息，作为DNN的输入，利用一个多层的DNN学习出用户的隐向量，然后在其上面加上一层softmax学习出Item的隐向量，进而即可为用户做Top-N的推荐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfJVpictUt17HH6V16jm6jg5sZGlb0HNCic09l4JibrKGv99NiaGNQRx8nHQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图11. YouTube推荐模型图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外，文献[6]通过卷积神经网络(CNN)提出了一种卷积矩阵分解，来做文档的推荐，该模型结合了概率矩阵分解(PMF)与CNN模型，图见图12所示。该模型利用CNN来学习Item的隐向量，其对文档的每个词先做embedding，然后拼接所有词组成一个矩阵embedding矩阵，一篇文档即可用一个二维矩阵表示，其中矩阵的行即为文档中词的个数，列即为embedding词向量的长度，然后在该矩阵上做卷积、池化以及映射等，即可得到item的隐向量。User的隐向量和PMF中一样，假设其满足高斯分布，其目标函数由矩阵分解以及CNN的损失函数组成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHf74SgyMlMibxgKz9emrWm8icxbEpWF5lVw8YxoeZiae3tzQY3ccEgh4aAQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图12. 卷积矩阵分解模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;四、总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文介绍了一些深度学习在推荐领域的应用，我们发现一些常见的深度模型(DNN, AE, CNN等)都可以应用于推荐系统中，但是针对不同领域的推荐，我们需要更多的高效的模型。随着深度学习技术的发展，我们相信深度学习将会成为推荐系统领域中一项非常重要的技术手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文由携程技术中心投递，ID：ctriptech。作者：董鑫，携程基础业务部BI团队高级算法工程师，博士毕业于上海交通大学计算机科学与技术系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;引用：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[1] Ajit P. Singh, Geoffrey J. Gordon. “Relational Learning via Collective Matrix Factorization”, KDD 2008&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[2] Suvash Sedhain, Aditya Krishna Menon, Scott Sanner, Lexing Xie. “AutoRec: Autoencoders Meet Collaborative Filtering”, WWW 2015&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[3] Hao Wang，Naiyan Wang, Dit-Yan Yeung. “Collaborative Deep Learning for Recommender Systems”, KDD 2015&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[4] Xin Dong, Lei Yu, ZhonghuoWu, Yuxia Sun, Lingfeng Yuan, Fangxi Zhang. “A Hybrid Collaborative Filtering Model with Deep Structure for Recommender Systems”, AAAI 2017&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[5] Paul Covington, Jay Adams, Emre Sargin. “Deep Neural Networks for YouTube Recommendations”, RecSys 2016&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[6] Donghyun Kim, Chanyoung Park, Jinoh Oh, Sungyoung Lee, Hwanjo Yu. “Convolutional Matrix Factorization for Document Context-Aware Recommendation”, RecSys 2016&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Tue, 24 Jan 2017 16:57:07 +0800</pubDate>
    </item>
    <item>
      <title>对话京东吴博：从人找货到货找人 京东探索移动电商新模式</title>
      <link>http://www.iwgc.cn/link/4468558</link>
      <description>&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-bottom: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;传统电商“人找货”，现在新型购物模式可以“货找人”，“京东小哥智能卖场”利用大数据和人工智能技术，结合配送小哥的职业特点，探索电商发展新方向。CSDN记者很高兴采访到京东集团架构师吴博，就电商智能卖场话题以及背后的技术特点展开探讨和交流。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;春节临近，电商平台上可供选择的年货品种繁多、品牌不一。消费者打开各大电商的年货平台，冲眼而来是数以万计的生鲜干货、糖果零食、酒水饮料，让人玲琅满目，无从下手。许多无用消费信息的大量摄入，让消费者倍感疲倦。买瓜子还是花生、买进口还是国产、买原味还是五香，让选择恐惧症患者直呼受不了。如何根据消费者消费行为，有效缩短选购路径，选择到更适合自己的商品，是电商平台需要解决的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;从零售三个维度看消费需求的转变&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;零售有（人，货，场）三个维度，线下商城和传统电商都是“人找货”模式：等“人”到“场”，展示“货”给他/她看，即“人”确定，“货”在“场”中的变化，包括商品分类、商品搜索、商品场景化展示等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfBuwhTnRpsSfy3ozfsdGkiag6gjHSnR5d3nFicS1VDjPGOh04yoblZPUQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与电商相比，线下商城的服务范围是周边几公里，一般是卖场较大、货品较少，顾客较少，顾客需要走到卖场才能购物，所以卖场运营成本高，顾客时间成本高，而且可选品类有限。如今电商品类丰富，顾客也可以足不出户，但也暴露出新的问题，如卖场配送成本高，顾客选择成本高，生鲜、商超品类对时效要求高，交易流程复杂等。“人找货”模式共同问题是，“货”被动触达“人”，商家限时销售商品（如促销）时，可能目标人群没进场。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfa8MLjj1GBTfpT6x9Ym1PN8bhOUicEPf4ZBicpMZWHCSAH9jLhzSuib2QA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;京东“货找人”模式数据架构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东采用“货找人”模式，小场少货面向小众人群。通过实时挖掘价值商品，利用京东小哥触达用户，做到连接线上与线下，将物流、数据与技术完美结合。卖场主要特点包括：货找人，让价值好货主动触达客户；线上线下结合，借助小哥，让用户省心；实时营销，实时发掘价值商品；未买先送，利用大数据，提前布货。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所谓“价值好货”，就是用户有需求，并且感知的商品价值大于价格。例如，平时商品的价值与价格相等，当商家品牌推广做促销时，一般会降价时，让用户感知的商品价值高于价格。这个时候商家关心的是如何找到目标用户人群。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“货找人”模式在京东有得天独厚的优势。“仓配”是京东核心优势资源，配送小哥每天会触达几百万用户，他们的职业特点是“货找人”：拿线上卖出的货，送给线下的购买者。小哥卖场通过“货找人”的方式，能让价值好货主动触达用户。小哥送货时，除了送用户下单的货，也可以“未买先送”，带用户或小区可能买的货，触达更多的用户，充分发挥小哥价值，给用户提供极致的服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHf7JicUh2wUibtbWLDsnv4YFX0YMpZMicC8mUwd3ibkLhvTkDBgZg1DtAepQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从数据架构看，“京东小哥智能卖场”在智慧层：数据层收集到的各种数据，在信息层的数据仓库中按不同主题组织，知识层（京东大脑）再加工形成用户画像、小区画像和知识图谱等用户维度的知识，帮助了解用户的购物行为、习惯、兴趣爱好、购物心理，以及小区品牌倾向、购物风格、购买能力等知识，最后在智慧层结合业务，帮助小哥通过专属二维码或服务号主动触达用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;“京东小哥智能卖场”背后的技术&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东小哥智能卖场采用“货找人”模式，重点是“人”维度的组织，如用户分类、小区画像等，以及保障数据实时精准的Jingoo实时计算平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小区画像技术：由于房价、地域、人群等因素，居民小区被天然划分成一些购买能力相近的人群集合。京东作为国内最大的自营电商，拥有中国电商领域最完整、最精准、价值链最长的数据。通过大数据平台挖掘出各小区的价值高低和购买偏好，对精准营销、推荐搜索、拓展新用户、地推指导等营销活动都很有帮助。比如说新用户或在京东较少下单的用户，如果住在高档小区，即使他在京东只买过一包榨菜，也可以推断他为潜在高购买能力人群。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfXqiczOFRcVpficoRicquf9F679yia6Dp3TawQwlBzs7akdNQxkQ2U7075w/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户分类算法：传统基于用户特征并利用机器学习实现聚类的方法在特征提取阶段面临挑战，并且这种“黑箱”方法不利于业务方专家知识的介入。本项目提出了一种基于二部图中的社区划分实现用户聚类的方法，具体细节如下：首先建立用户-商品品类为节点的带权重的二部图，以一个节点为单一社区进行初始化；第一步在局部找到需要合并的节点，第二步将同一个社区的节点合并形成超节点组成的粗粒度的网络，循环第一步直到优化目标不变；在此基础上，将层次聚类算法应用于平衡二部图，实现多分辨率下的用户-商品社区划分。这一方法能够在不同粒度上同时对用户和商品品类进行划分，既能反应用户对不同品类购物倾向性的差异，又能对具有相似购物习惯的用户进行聚类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfcjULgOe4oALAddWib28RWzJSI77rGB1UtbmoibTLx5typsKDLnSKKRTQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Jingoo实时计算平台：借助Jingoo实时计算平台提供的数据和技术支撑，小哥卖场能将商城实时热点信息，快速分析并呈现给用户。小哥卖场还具备强大的数据可视化功能，能精确分析每群人、每个商品、每个坑位的实时浏览、加购和下单变化情况。Jingoo平台每天实时接入百亿条点击流信息，快速与订单数据、商品数据、地址数据、用户数据做关联分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHf4C6bdftVuO3v5gbSmpn7dzCOEoic8oz0cUmVoeoibmu0uWQQxs9GXfPQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于数据安全方面，一方面，京东小哥智能卖场将应用层与数据层隔离，由计算分析平台主动将分析结果同步给应用层，前端应用不直接访问生产数据；另一方面，对选择的商品类目范围做严格限制，不涉及敏感数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;未来，创建“货找人”的新渠道&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHf1GthIPqNZRib3OG9A8kX7w2GWec353HuQzN0ibJy3fgSPPXEibUE6sPIg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;订购模式，降低线上交易复杂度：生鲜和商超品类是京东发展重点之一，这些品类的目标人群中，不少是年纪较大的大爷大妈，线上交易流程对他们来说太复杂。京东小哥智能卖场希望借助配送小哥，发展订购模式，让线上交易更接近线下商超的体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXZaFAVDTZ9ZxUz35osGNHfDUDuXQKRX58aJas9R2zRRGwghe4Ab43PwUDsvUuD7O1dHJCicISe8CA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;发展出线下引流的新渠道：相比过去，网上消费的人口红利正在逐步减弱。京东有6万配送小哥，每天接触几百万用户，“京东小哥智能卖场”希望帮助小哥为用户提供更极致的服务，提高触达范围，提高用户的复购频率，吸引新用户，创建“货找人”的新渠道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;京东集团架构师吴博，2013年加入京东，一直做架构设计方面的工作，目前和团队主要关注的领域是技术创新领域，将算法和大数据的新进展，结合到电商业务中，设计新的业务形态。&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Tue, 24 Jan 2017 16:57:07 +0800</pubDate>
    </item>
    <item>
      <title>陌陌直播全景监控系统实践</title>
      <link>http://www.iwgc.cn/link/4457679</link>
      <description>&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系统建设背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着移动互联网技术的高速发展，人们喜欢的媒体交互方式也由文字、图片、小视频迅速切换到了直播。作为一种新兴的社交方式，直播在实时性、交互性方面具备先天优势，这也推进了直播在各行各业的快速应用。作为最大的陌生人社交平台，陌陌自然也少不了直播。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌拥有大量的用户群体，直播上线后，海量的主播和观众开始使用直播社交，系统并发一度达到高峰。在如此高并发的情况下，如何保证为用户提供最佳的直播体验，成为我们的当务之急。为此，我们建设了一套直播全景监控系统，实时监控陌陌全平台直播服务质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;系统架构实践&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统基于陌陌实时日志基础平台而研发，通过高效的实时分析系统，实时将各业务维度的数据进行聚合呈现，并加以监测报警，提供秒级故障发现机制。 同时，拨测系统在主播开播的第一时间向CDN拉取流媒体，进行内容层面的分析监控，第一时间发现问题流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;日志收集&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujFvPOB9dDfKoSXVwJCwE1U0wxqlntmLWejaicANw2QQN0HLyg23FVOkib1hric79RFEshJuiaoHkNtsQ/640?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;流媒体分发质量的好坏，大多取决于CDN的节点分布程度，常用商用CDN公司由于资源限制等因素，在建设节点时，会形成一定的节点片区优势，而我们的业务又需要全局最优。 同时，任何系统都不能保证百分百的可靠性，CDN也有故障的时候。为了保证业务系统的高可用和最佳质量，陌陌采用了多路CDN分发，CDN之间互推的流媒体分发策略。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;依托此业务架构，我们在推流终端、CDN入口、CDN互推入口、CDN出口、播放终端等重要环节进行流媒体质量指标采集，供全景质量监控系统分析使用。从业务上，日志分为以下两类：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;事件类，包含开播、停播、播放、停止、心跳等基础播放行为事件。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;质量类，包含带宽、帧率、延迟、卡顿等关键视频质量评测指标。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;直播质量评估&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们知道，评测互联网直播分发质量最重要的三个指标是秒开、延迟和卡顿，其中又以卡顿最为影响用户体验。陌陌的大数据分析平台表明，当卡顿率上升的时候，大多数用户会选择放弃观看或者切换频道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统定义了一套直播质量评测指标，从不同的维度对当前分发质量做量化，主要包含以下几个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;平均接入延迟&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;平均接入延迟主要包含请求延迟、首包时间、首帧时间等，其中请求延迟定义为从发起HTTP请求到收到HTTP返回码所耗费的时间，用于衡量CDN网络的接入速度；首帧时间定义为从发起HTTP请求到收到第一帧流媒体数据所耗费的时间，用来衡量CDN的回源速度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;端到端延迟&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;端到端延迟是指媒体从主播端产生到观众端播放所耗费的整体链路时间。我们在主播端流媒体编码时，在媒体数据中加入时间戳信息，观众播放流媒体数据时解析该时间戳，即可得到端到端延迟时间。该时间主要用来衡量CDN分发引入的延迟大小，在直播系统中，在不影响卡顿等其他指标的情况下，延迟越小越优。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;卡顿率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;卡顿率=出现卡顿的在线用户数/在线总用户数*100%，通过此指标可以衡量当前卡顿影响的人群范围；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;人均卡顿次数&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;人均卡顿次数=在线卡顿总次数/在线用户数，通过此指标可以从卡顿频次上衡量整体的卡顿严重程度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;卡顿时比&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;卡顿时比=卡顿总时间/播放总时间*100%，通过此指标可以从时间维度衡量卡顿严重程度；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;推流故障率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;推流故障率=推流失败次数/总推流次数*100%，通过此指标可以衡量当前主播的开播故障情况，通常CDN网络出现故障时会导致主播开播不了，此值会变高。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;播放故障率&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;播放故障率=播放失败次数/总播放次数*100%，通过此指标可以衡量当前观众播放故障情况。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过以上算法，已经能够比较全面的衡量直播分发质量情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;多维度业务聚合&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌在直播分类中属于泛娱乐直播，与游戏、户外直播最大的不同之处在于主播数目庞大，我们需要将大量的主播分散到不同的CDN、不同的域名去做分发。运维需要实时关注到各业务维度的直播质量情况，基于在线用户数，监控系统提供了丰富的业务维度聚合监控。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;在线用户定义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线主播，当主播开始直播，主播端会发送“开始推流”事件日志，即可将主播视为上线；当&lt;/span&gt;&lt;span&gt;主播停止直播，主播端会发送“停止直播”事件日志，即可视为主播下线。在网络不可靠或者终端crash的情况下，事件日志可能会出现丢失，加上主播端的心跳，即可解决此种情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线观众，当观众进入房间观看，观众端会发送“开始播放”事件日志，即可视为观众上线；当观众退出房间，观众端会发送“停止播放”事件日志，即可视为观众下线。当房间销毁时，所有在该房间的观众视为下线。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;业务维度聚合统计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业务维度聚合统计提供了不同角度的质量监控视图，主要分为全网维度、CDN维度、域名维度、CDN节点维度、房间维度、ISP维度、房间类型维度、终端类型维度、观众维度等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以房间维度为例，主要关注该房间在全网的分发质量情况，例如观众走势、卡顿走势、故障率走势、开播时间等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;实时报警机制&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于多业务维度的统计数据，我们做了一系列的报警机制。报警分为状态类报警和通知。状态类报警定义为当监测指标高于（低于）报警门限值时，报警发生，当监测指标低于（高于）报警门限值时，报警恢复，例如“卡顿率过高”、“故障率过高”等；通知类报警定义为当监测指标达到报警门限时，报警发生，再次达到门限时，报警再次发生，没有报警状态，不存在恢复，例如“在线用户在五秒内减少百分之二十”、“卡顿比环比增加百分之十”等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;报警方式采用陌陌基础智能报警平台，支持IM、短信、电话等众多通知方式，在出现故障时，第一时间通知相关责任人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;主动拨测&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实时日志分析只能被动监控线上已经发生的问题，在第一时间驱动故障方解决，算是一种“亡羊补牢”方案。主动拨测系统作为全景质量监控系统的补充，通过智能调度中心进行任务分发，在主播开播前探测主播推流节点故障情况，在主播开播后第一时间探测流媒体可用性，在观众播放前探测重点区域节点可用性情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujFvPOB9dDfKoSXVwJCwE1Uy0Gk8rVTqvPwlFMY5AYbJgicAeFMWnES8bEVlGB7K7DxpofYlo931Jw/640?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;考虑到拨测终端大多数终端部署在IDC机房，用拨测系统来评价网络分发质量不能代表用户终端真实的播放情况，因此，拨测系统的主要设计目的是评价流媒体在内容层面上的可用性及CDN节点的可用性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;流媒体内容指标测量&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;流媒体内容层指标我们做了媒体完整性监测和媒体内容质量监测两类。媒体完整性监测主要是分析HTTP+FLV拉取的FLV文件完整性，包含FLV头部信息是否完整，视音频帧是否存在， 首帧是否为I帧（确保首屏不花屏）；媒体内容层监测主要分析流媒体的视音频不同步、黑屏等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;智能调度中心&lt;/strong&gt;&amp;nbsp;&lt;br/&gt;智能调度中心按照业务需求，对拨测终端进行任务分发及结果收集。从任务上划分，我们定义了自动任务和手动任务，自动任务通过与BO（后台系统）联动，实时获取最新开播房间，自动轮询房间媒体质量情况；手动任务主要用于运维在发现故障的情况下，对指定区域或CDN节点，进行定向拨测。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;未来展望&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陌陌直播全景质量监控系统的上线，为直播业务运维提供了一双眼睛，在功能逐步完善的情况下，做到第一时间发现问题、第一时间解决问题、第一时间预警问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在未来，我们将利用监控系统采集到的质量数据，结合CDN的区域差异、稳定性差异等，优化智能调度系统，让陌陌的流媒体在互联网上最优化传输，为用户提供最佳的直播社交质量体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;作者：&lt;/strong&gt;龚清华，陌陌高级研发工程师，主要负责陌陌直播质量监控。熟悉直播系统架构、熟悉CDN，具有较丰富的广电、互联网直播监控系统建设经验。&amp;nbsp;&lt;br/&gt;&lt;strong&gt;责编：&lt;/strong&gt;&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;屠敏&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，关注视频直播等领域，寻求报道或者投稿请发邮件&lt;/span&gt;&lt;a target="_blank" style="color: rgb(67, 149, 245); text-decoration: underline; max-width: 100%; font-size: 14px; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;tumin@csdn.net&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>IoT带来的产业新机遇</title>
      <link>http://www.iwgc.cn/link/4457680</link>
      <description>&lt;p&gt;&lt;span&gt;物联网是基于嵌入式技术的物理对象网络，它能够沟通和感知并与内外部环境进行交互。物联网使用高效的无线通信协议、高性能的传感器以及低成本的处理器作支持。越来越多初创公司和成熟企业选择既有效又经济的IoT来升级解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据国际数据公司（IDC）的报告，2020年物联网的设备安装基数将增至近2120亿，其中包含300亿联网设备。IDC认为，消费者和企业大规模应用智能系统收集数据是大幅增长的主要原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然安全问题是最大障碍，但IoT低廉的运营成本和优质的客户服务使其成为了初创公司和成熟企业解决方案的首选。如下是IoT为不同产业带来的机遇：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Retail 零售业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2015年，60%的零售企业应用并积极发展IoT解决方案来提升服务，吸引消费者；这个数字到2016年底仍呈上升趋势。IoT之所以受零售业欢迎，是因为能有效提升消费者满意度，优化购物体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Insurance 保险业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调研的保险公司中，有63%的公司在积极投资IoT，原因跟零售业相似，也是为了提供更好的服务和体验以吸引顾客。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Utilities 公共事业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT能有效完善公共事业领域的生产体系，这也是为什么高达71%的公共事业单位在积极应用IoT。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; color: rgb(62, 62, 62); line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;strong&gt;&lt;span&gt;Oil and Gas 石油和天然气产业&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT在石油和天然气产业应用非常广泛，调研的公司中有56%都在积极投资建设IoT，促进产业互联互通。节省运营成本是IoT应用的主要原因，另外通过促进IoT技术的现代化和升级，可以让石油天然气生产更加高效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;IoT的影响无处不在，诸多产业积极投资也就不足为奇了。如今初创公司和成熟企业都在调整自己的商业模式以更好适应IoT大潮。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】大数据行业图谱，InsideSales完成5000万美元融资</title>
      <link>http://www.iwgc.cn/link/4457681</link>
      <description>&lt;p&gt;&lt;span&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;阿里云与国家天文台成立天文大数据联合研究中心&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;22日，中国科学院国家天文台与阿里云正式成立“天文大数据联合研究中心”。阿里云将作为天文台云计算大数据领域唯一战略合作伙伴，共同推进天文学科研和科普教育工作。双方拟积极推进公众远程天文观测网络和天象直播平台的建设。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;利用大数据帮助企业加速销售，InsideSales完成5000万美元融资&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;成立于2004年的InsideSales总部位于美国普罗沃，是一家专业的大数据分析公司，旨在为企业提供基于大数据分析的用户购买行为预测服务。近日，该公司宣布获得了新一轮的E轮融资，金额达5000万美元，由Polaris Capital、爱尔兰战略投资基金和QuestMark领投。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Facebook 发布开源框架 PyTorch， Torch 终于被移植到 Python 生态圈&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本周，Facebook 的 AI 研究团队发布了一个 Python 工具包，专门针对 GPU 加速的深度神经网络（DNN）编程。它有望辅助、或在一定程度上替代，现有的 Python 数学、统计库（比如 NumPy）。它实现了机器学习框架 Torch 在 Python 语言环境的执行。开发团队表示，除 Facebook之外，它还已经被推特、卡内基梅隆大学和 Salesforce 等机构采用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;才云团队入选微软加速器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;21日微软加速器公布了“微软加速器•上海”一期入选初创企业名单，才云 （Caicloud） 团队通过层层选拔，在1月17日微软加速器上海第一期招募的最终评审中以优异答辩成绩获此殊荣，顺利入选微软加速器。据悉，才云此次作为“微软加速器•上海”首批入驻企业，将在未来四个月加速期内免费入驻微软加速器上海办公区，得到思想领袖、行业专家及技术专家组成的导师团的扶植与指导，还将获得价值 300 万人民币的基于微软技术的 Azure 云服务等多种资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;甲骨文公司Oracle收购API管理创企Apiary，欲完善自身云服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;甲骨文一直都想要发展云计算业务，目前看来它已成功跻身其中。经过多年角逐，AWS、Microsoft Azure 和Google Cloud等数据巨头都想成为这个行业的引领者。本周，甲骨文还在纽约举办了一场云计算大会，并宣布将在弗吉尼亚雷斯顿、伦敦和土耳其开设三个新的数据中心，进而促成该公司有效实施云战略计划。虽然甲骨文有着丰富的收购经验，但目前尚不清楚Apiary加入Oracle云计算团队后，是否会对Apiary既有用户造成影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大数据行业图谱：为什么大数据应用公司这么贵？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2017年，大数据这把火烧了六年，依然没有减弱的征兆。过去一年，话题的热点已经不再是大数据概念和定义，而是集中在大数据的应用。大多数企业老板已经明白什么是大数据，开始关心数据如何与业务结合，提升企业盈利能力。从全球市场来看，大数据应用占据整个产业的半壁江山。根据Wikibon报告，2016年全球大数据市场规模为452.6亿美金，细分领域中行业解决方案和应用这两类细分市场规模为226.5亿美金。目前国内企业在大数据的投入还主要是硬件层和技术层，应用层投入相对较少，但应用层的潜力无疑是巨大的，未来在单个垂直行业都会是千亿级市场。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多孤岛数据访问加速初创公司Alluxio与Dell EMC签约合作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多孤岛大数据访问加速初创公司Alluxio去年与华为达成合作关系，最近又与Dell EMC就ECS产品签订了类似的协议。Alluxio解决的问题是，很多单独的存储机制是针对需要被多个分析型应用访问的大规模非结构化数据。每种应用（Hadoop、Spark、Storm、samza等）需要自己安排访问每个数据源（AWS S3、HDFS、Ceph、Isilon、Gluster等）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2017年SaaS行业走势，竟然是……&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2015年被称为企业服务的元年，2016年，随着资本寒冬，企业服务类公司的估值也有所下调。由于To B 的逻辑不像To C，不可能一夜爆发，所以对创业公司来说也是一个漫长的过程。在这个过程中，会经历怎样的周期迭代?可以说，拿中国企业服务对标美国不一定全对，但至少不会差太大。所以，我们将美国的To B发展史进行了理顺。无论如何，企业服务都是一个值得长期跟进的领域，也会是2017年的重点赛道之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;KubeVirt — 围绕 Kubernetes 构建的虚拟机管理架构&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;KubeVirt 是一个围绕 Kubernetes 构建的虚拟机管理架构。使用 KubeVirt 可声明：创建预定义的 VM，在 Kubernetes 集群上调度 VM，启动 VM，停止 VM，删除 VM。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 23 Jan 2017 17:03:55 +0800</pubDate>
    </item>
    <item>
      <title>微服务实践 | 网易考拉海购Dubbok框架优化详解</title>
      <link>http://www.iwgc.cn/link/4445445</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQORchpgdnmlciaHEVbibSEK29SJq45K1IKy5ADKMTWm5udTe8188WviaD6jncKO4z9USz01CAjLzTibMXw/0?wx_fmt=gif"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AoP1HGBJoBAbIgBDCR7XUibDIvCIibhLafgTWxqUP8LfQbdQkdYiazYQCQ/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;微服务化&lt;/strong&gt;&lt;/span&gt;是当前电商产品演化的必然趋势，&lt;strong&gt;&lt;span&gt;网易考拉海购&lt;/span&gt;&lt;/strong&gt;通过微服务化打破了业务爆发增长的架构瓶颈。本文结合网易考拉海购引用的开源Dubbo框架，分享支持考拉微服务工作的基本原理。文章分析了使用Dubbo过程中遇到的问题，讲解了团队所做的一些问题修复和功能集成工作，在此基础上最终形成了考拉内部持续维护升级的Dubbok框架。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;本文背景还要从网易考拉海购（下文简称“考拉”）微服务化说起，现在任何大型的互联网应用，尤其是电商应用从Monolithic单体应用走向微服务化已经是必然趋势。微服务化是一个比较宽泛的概念，涉及到一个产品生命周期的多个方面，首先它作为一个指导原则指引业务划分、架构解耦等；技术层面实施微服务需要开发测试阶段、运行阶段、发布阶段、部署阶段等一系列基础框架的支撑。我们在享受服务化易扩展易部署等便利性的同时，也面临新的问题，如数据一致性、分布式调用链路追踪、异常定位、日志采集等。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;本文将集中在支撑微服务交互、运行的基础框架讲解上，即考拉当前使用的&lt;strong&gt;&lt;span&gt;Dubbok框架&lt;/span&gt;&lt;/strong&gt;，Dubbok由阿里开源Dubbo框架的优化和功能改进而来。当前开源上可选用的微服务框架主要有&lt;strong&gt;&lt;span&gt;Dubbo&lt;/span&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;span&gt;Spring Cloud&lt;/span&gt;&lt;/strong&gt;等，鉴于Dubbo完备的功能和文档且在国内被众多大型互联网公司选用，考拉自然也选择了Dubbo作为服务化的基础框架。其实相比于Dubbo，Spring Cloud可以说是一个更完备的微服务解决方案，它从功能性上是Dubbo的一个超集，&lt;strong&gt;&lt;span&gt;个人认为从选型上对于一些中小型企业Spring Cloud可能是一个更好的选择。&lt;/span&gt;&lt;/strong&gt;提起Spring Cloud，一些开发的第一印象是http+JSON的rest通信，性能上难堪重用，其实这也是一种误读。&lt;/p&gt;&lt;p&gt;微服务选型要&lt;strong&gt;&lt;span&gt;评估&lt;/span&gt;&lt;/strong&gt;以下几点：内部是否存在异构系统集成的问题；备选框架功能特性是否满足需求；http协议的通信对于应用的负载量会否真正成为瓶颈点（Spring Cloud也并不是和http+JSON强制绑定的，如有必要Thrift、protobuf等高效的RPC、序列化协议同样可以作为替代方案）；社区活跃度、团队技术储备等。作为已经没有团队持续维护的开源项目，选择Dubbo框架内部就必须要组建一个维护团队，先不论你要准备要集成多少功能做多少改造，作为一个支撑所有工程正常运转的基础组件，问题的及时响应与解答、重大缺陷的及时修复能力就已足够重要。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;下文将选取Dubbo高性能RPC通信原理、服务注册发现特性、依赖隔离、启动与停机等几个方面阐述Dubbok的工作原理和相关改进工作。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;高性能RPC&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo作为一个分布式通信框架，最基本的职责就是完成&lt;strong&gt;&lt;span&gt;跨进程的远程调用（RPC）&lt;/span&gt;&lt;/strong&gt;。以下是RPC基本流程图：&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AEn3Uz4kfJClRjY71P5B7cAKgauTJibicIPh4IVFiaJpPrl6ClTg9GIX3Q/0?wx_fmt=png"/&gt;&lt;span&gt;RPC工作原理（图片来自网络）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;RPC基本原理非常简单，那么Dubbo是如何实现高效的RPC通信的那，和其他分布式通信组件关注点一样，主要集中在以下几点的优化：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.协议栈：&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;Dubbo支持自定义RPC协议，冗余字段少、通信性能高；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;序列化协议支持hessian2、Dubbo自定义序列化等高性能协议；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Dubbo支持序列化协议解码在业务线程（Netty3编码自动在业务线程执行）；&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A6Y3hmf45RSwvzicbT4FrHBU7jJibmDhmGh7q9DSd2rcpKzy3jjb7ibHFQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo RPC通信协议栈&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;2.线程模型：&lt;/strong&gt;&lt;span&gt;依赖Netty3的非阻塞线程模型，支持I/O、业务逻辑线程分离，通过Handler链处理请求。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A8TzLZfPddZroJ0f7jgBwU8gOcEYEDtlrLy7cKqwJy9v1XoFsXVcaAA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo业务线程与netty3 IO线程交互&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;这里特别强调&lt;strong&gt;&lt;span&gt;Netty3&lt;/span&gt;&lt;/strong&gt;，是因为Netty4在线程模型、buffer缓冲区等方面做了重大的设计和性能改进，包括Inbound、Outbound事件强制在I/O线程发起、buffer通过缓冲池减少分配释放、DirectBuffer实现缓冲区零复制等。Netty这块升级相对是一个高风险的点，明面上的API兼容性改造是小，如对Netty4工作原理认识不足，新的线程模型、buffer缓冲池等带来的非预期性能下降、内存泄露等问题相对更难定位与跟踪。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;讲到线程模型，实现上密切相关的&lt;strong&gt;&lt;span&gt;Dubbo网络连接模型&lt;/span&gt;&lt;/strong&gt;必须要提一下。Dubbo默认是所有服务共享单一的TCP长连接的（这也是为什么服务接口不适合传输大负载值，即容易阻塞其他服务的调用）。为响应慢或重要的服务接口考虑，Dubbo支持设置多TCP连接，此时连接数和线程池数默认是绑定的，即每连接对应一个线池，consumer、provider都执行这个策略，从线程隔离的角度讲是合理的，但不注意也容易造成线程占用资源过多，尤其是对于消费端基本无线程阻塞的情况下可能是一个设计缺陷。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.缓冲区：&lt;/strong&gt;Dubbo默认使用的全部是heap缓冲区，因此Socket通信不可避免会存在内核缓冲区和堆缓冲区复制消耗；除此之外在RPC协议解析（包括粘包/半包处理）、序列化协议解析等处理上也存在heap区内的复制，因此性能上是存在优化点的（当然要确有必要）。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;自动注册/发现、负载均衡等服务化特性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;高性能通信是Dubbo作为RPC框架的基本功能，但使其区别于Thrift、hessian、gRPC等框架的关键在于其新增的服务间自动协调、服务治理等特性。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.&amp;nbsp;服务自动注册自动发现、负载均衡&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;服务自动注册发现依赖于注册中心的支持，consumer与provider通过注册中心获取各自地址后直接通信。目前考拉使用Zookeeper作为注册中心，Dubbo原生支持Redis作为注册中心，使用pub/sub机制协调服务的上下线事件通知，但Redis方案要求服务器时间同步且存在性能消耗过大的缺点。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0Aee3hRIwkfdGcRg3UGWdQJnZKK0pBG5SS7KFVhX6XS0RvW7jwnzsb6w/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;消费者/提供者注册中心交互图&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用Zookeeper作为注册中心，建议选用curator作为客户端框架；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Zookeeper服务器异常宕机并重新启动的场景下，Dubbo服务的recover恢复机制存在不能重新注册的问题，导致老zk session失效后服务被错误清除。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;服务框架常见负载均衡实现方案包括：集中式、分布式，分布式又可分进程内、分进程两种。Dubbo采用的是服务发现和负载均衡共同集成在consumer端的分布式进程内解决方案。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0A4EU5icFZicEt5jSSB6IFLY9Xaqe7Z2E1mCIZkoxX1YuDYr5kmGd1GT0w/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbo负载均衡策略&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;负载均衡策略上Dubbo原生提供的有基于权重随机负载、最少活跃数优先、Roundrobin、一致性Hash等几个方案。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在实际应用中，为了能对个别错误率较高的异常provider做到及时发现、及时引流，Dubbok&lt;strong&gt;&lt;span&gt;增加了新的负载均衡策略&lt;/span&gt;&lt;/strong&gt;，在支持权重的基础上自动发现异常provider，异常期自动减流、正常后自动恢复流量。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.路由、集群容错、限流&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;和负载均衡策略一样，Dubbo的路由方案是集成在消费端的，加上集群容错功能客户端相对是一个重量的功能封装。可选方案是将路由工作移到注册中心完成（这要求注册中心具有&lt;strong&gt;&lt;span&gt;较强的可定制性&lt;/span&gt;&lt;/strong&gt;，不仅路由像权限控制、服务过滤、环境隔离等都可由注册中心集成）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;限流目前支持consumer、provider端并发限流，实际上是基于信号量限制的，以接口粒度分配信号量，当信号量用完新的调用将被拒绝，当业务返回后信号量被释放。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;消费端限流应该是为整个提供端集群分配信号量，而Dubbo错误的将信号量分配给单个机器。这个问题目前可以通过下文提到的隔离框架的流控功能来实现。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;限流并非精确限制，不应当依赖其实现严格的并发数控制。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;后端backend服务限流需要业务方合理评估每个接口的流控值，要求对业务量有足够经验值（可能要在多次线上调优后才能最终得出合理的流控值）。考拉内部流控实践证明，对于保证服务稳定性、优先保证重要消费方、实现服务隔离等有着重要的作用。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.服务动态治理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;动态治理本质上是依赖Dubbo运行期参数的&lt;strong&gt;&lt;span&gt;动态调整&lt;/span&gt;&lt;/strong&gt;，再通用一点其实就是应用的参数动态调整，开源常用的disconf、diamond、archaius等集中配置管理工具都是设计来解决这个问题。Dubbo内部在url参数传递模型基础上实现了一套参数动态配置逻辑，个人认为相比于Dubbo的实现，集成disconf等更专业的框架应该是更好的解决方案，或许Dubbo为了一些其他设计目标解除了对一些外部框架的强制依赖。动态治理可以实现从基本参数如timeout、mock到一些高级特性如路由、限流等几乎所有的运行期参数调整。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Dubbo原生在动态配置上存在很多bug，配置不生效或配置规则误读等问题都遇到过，如果你再使用原生Dubbo过程中也遇到任何配置问题，Dubbok应该都已经解决掉了。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;依赖隔离（服务降级）&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;当应用被设计依赖外部服务时，要始终保持警惕状态：外部依赖是不稳定的，为此对接外部依赖&lt;strong&gt;&lt;span&gt;做好解耦&lt;/span&gt;&lt;/strong&gt;是关键，避免外部接口发生异常拖垮自身系统。Dubbo提供了&lt;strong&gt;&lt;span&gt;超时timeout机制&lt;/span&gt;&lt;/strong&gt;作为最基本的解耦措施，同时在接口报错时支持提供降级的容错逻辑；除了容错降级，Dubbo进一步支持强制的短路降级。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ACugftUj8k4uF0GFy6qMHhzsbTIXfKmXHTSjVgroAZg6Yu37Pbv4lZA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;容错 &amp;nbsp;短路&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;然而在容错降级与短路降级之间，Dubbo缺乏一种在容错与短路间切换的机制，即&lt;strong&gt;&lt;span&gt;自动熔断&lt;/span&gt;&lt;/strong&gt;。自动熔断要达到的效果是：当接口偶然报错时执行容错返回备用数据，而当接口持续大量报错时能自动在消费端对接口调用短路直接返回备用数据，之后持续监测接口可用性，接口恢复后自动恢复调用。这样能最大限度减少接口异常对消费方的影响，同时也减轻本就处于异常状态的提供端负载。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AZ1wCHwjxxf5ib7eBa00CGdRQUdq2Ttbw8nSicB4IibDHbO7Vaal31sMMw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;自动熔断工作原理图&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Dubbok通过标准SPI的的形式，实现了熔断功能。目前支持两套方案：&lt;strong&gt;&lt;span&gt;一套是自己实现的熔断逻辑&lt;span&gt;；&lt;/span&gt;一套是通过集成hystrix框架实现&lt;/span&gt;&lt;/strong&gt;。目前支持错误率、最低请求量、熔断时间窗等基本配置，支持将业务异常纳入统计范畴；以上参数均可通过SOA治理平台运行期动态调整；支持外部Dubbo依赖调用的准实时监控。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ApemU1dtBRvONS1WibzWtHRbTNMYZczQ5kL3UQUrgsDUsGhycQZULcgQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;SOA动态调整熔断参数&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0Amzp64DLxG1bTaBFdwK4F9NtCGgibia4PsbBu3tSyzyrW5B6hs7eg7DaA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;依赖实时监控&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Hystrix是Netflix在微服务实践中为实现外部依赖解耦而设计的框架，它假设所有的外部依赖（http、MySQL、Redis等等）可能在任何时间出现问题（你甚至可以想像不经意间就使用了一个没有提供超时设置的http客户端）。于任何可能的外部延时造成的阻塞或其他异常，hystix提供了基于线程池隔离的超时机制，新版本在RxJava基础上信号量隔离也同样支持超时。此外框架还支持定制容错逻辑、请求结果缓存、请求合并、消费端线程池隔离等，由于某些功能当前无明确需求或与Dubbo功能设计重合而没有进行集成。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hystrix更多特性及实现原理请参见Netflix官方文档。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;启动与停机&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;这里主要关注Dubbo工程启动初始化阶段和停机销毁阶段的一些特性和改进点：&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.延迟暴露。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;默认Dubbo服务会随着Spring框架的加载逐一完成服务到注册中心的注册（暴露），如果某些服务需要等待资源就位才能暴露，那就需要延时注册。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AOHjiaU9wkcbOvWCERD9zMd8oqDIZCOqBVHqibN8R6rqA9HwVolInhNLw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;增加Spring context初始化完成后继续延时等待的配置项；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;在无特殊配置的情况下，所有的Dubbo服务默认是注册在同一个tcp端口的。而延迟暴露是通过开启新的延时线程实现的，当延时结束时由于多线程并发执行导致多服务随机注册在多个端口。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.启动预热&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一些应用在运行期会通过本地缓存中间结果提升性能，而当此类应用重启时本地缓存数据丢失，如果重启后的机器立即有大量请求导流过来，由于没有缓存加速会导致请求阻塞响应性能降低。通过对重启后的机器设置预热期可有效缓解重启缓存失效问题：&lt;strong&gt;&lt;span&gt;具体做法&lt;/span&gt;&lt;/strong&gt;是降低预热期内的机器权重，引导少部分流量到此机器，此机器可以在预热期内逐步建立缓存，待预热期过后恢复正常权重与其他机器平均分摊流量。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.优雅停机&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在集群部署的情况下，单个消费者或提供者机器上下线对整个产品的运转应该是近乎无感知的，Dubbo提供了优雅停机功机制保障在进程关闭前请求都得到妥善处理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;消费方&lt;/span&gt;&lt;/strong&gt;优雅停机：控制不再有新的请求发出；等待已经发出的请求正确返回；释放连接等资源。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;提供方&lt;/span&gt;&lt;/strong&gt;优雅停机：通知消费端停止发送请求到当前机器；通知注册中心服务下线；等待已经接收的请求处理完成并返回；释放连接等资源。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;考拉再每次服务上下线过程中，每个工程总是收到大量的消费方/提供方报出的服务调用异常，经排查是Dubbo优雅停机实现的问题，修复问题后工程上线阶段异常数明显减少。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;另外停机阶段总是莫名的收到zk连接为空的异常信息。是由于在通知注册中心服务下线的过程中，Spring销毁线程和jvm hook线程并发执行，导致zk客户端被提前销毁导致抛出异常。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.Provider重启，注册中心发送大量服务销毁与注册通知导致consumer工程Full GC。&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;历史原因，考拉内部仍存在一个提供近200个Dubbo服务的单体工程，而每次当这个工程上线时，消费它的consumer工程就会出现频繁Full GC（3-5次，非内存泄露）。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="box-sizing: border-box;"&gt;&lt;li&gt;&lt;p&gt;是Dubbo为保证高可用而设计的注册中心缓存导致的问题：在每次收到注册中心变更时consumer会在本地磁盘保存一份服务数据副本，由于多注册中心共享同一份缓存文件，为了避免相互覆盖，每个注册中心实例会在收到变更时重新从磁盘加载文件到缓存，和变更数据对比后重新写回磁盘，在近100提供者机器不断重启的过程中，大量的变更通知导致的频繁加载缓存文件占用大量内存导致Full GC。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Dubbok近期优化目标&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;ul class=" list-paddingleft-2" style="box-sizing: border-box;"&gt;&lt;li&gt;&lt;p&gt;提供端线程池隔离，解决提供端线程池阻塞等问题；优化消费端线程池分配方案&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务治理动态配置功能增加应用、机器粒度的配置&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多注册中心消费端负载均衡策略&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Dubbo内部资源JMX监控&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;结合SOA平台优化监控统计数据：错误类型细分（超时、限流、网络异常等）；执行时间细分如90%、99% RT等；统计占用线程数较多的服务、传送数据量较大的服务，为分线程池或连接做参考&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对Spring boot推行的Javaconfig配置方式提供更友好、全面的注解支持&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;一些框架升级，如Javassist、Netty等&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;替代Zookeeper的高性能、可扩展注册中心&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务安全、授权问题调研&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Spring Cloud的一些优秀特性将作为Dubbok改进的一个持续关注点&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;……&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0ALPqiaoBtr2jtq5troN4OlEO1ohiaZORCmxwGLZBQc5KZPuSDSLgwWicdw/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;文中提到的一些改进点只是简略描述，Dubbok的很多改进点也没有一一提及，后续有时间再详细道来。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;Dubbok框架、SOA服务治理平台、分布式调用链路跟踪以及其他考拉内部维护的如分布式事务、消息中间件等共同支撑了考拉微服务化的正常运转。上文也提到微服务需要有开发、测试、运行、运维、部署、发布等各阶段的全链路支撑才能发挥最大价值，后续我们将继续联合其他兄弟部门，对微服务化实践进一步优化。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——刘军&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网易考拉海购&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;刘军&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，2013年硕士毕业于中国科学院，2015年入职网易先后在杭州研究院和考拉海购参与一些中间件开发，现主要负责考拉微服务化的基础中间件开发工作，包括服务治理平台、分布式调用框架、调用链追踪等，近期专注于微服务化全链路基础框架的研究。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如果您对本文的分享有疑问，或者想了解更多的优化工作，欢迎与作者展开更深入的讨论。讨论请联系网易云小秘书，微信：&lt;strong&gt;Jianding_zhou&lt;/strong&gt;，邮箱：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;jianding311@163.com&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;点击阅读更多：&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MzI2MzM3MzkyMg==&amp;amp;mid=2247483912&amp;amp;idx=1&amp;amp;sn=e0dadb8a713b3caadaa75b6b17a01c33&amp;amp;chksm=eabd9705ddca1e136c49d00650726b3550ad2442fa653943b4f4cc06a4dab6d5ead631ea98e8&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MzI2MzM3MzkyMg==&amp;amp;mid=2247483912&amp;amp;idx=1&amp;amp;sn=e0dadb8a713b3caadaa75b6b17a01c33&amp;amp;chksm=eabd9705ddca1e136c49d00650726b3550ad2442fa653943b4f4cc06a4dab6d5ead631ea98e8&amp;amp;scene=21#wechat_redirect" style="text-decoration: underline; box-sizing: border-box; color: rgb(0, 0, 0);"&gt;&lt;span&gt;4亿资源打造洋货节，网易考拉海购借云计算玩双11&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQOQ2VcmBUgAG3VJQCnsryo0AYv6icHyFLa4YIE9WL3as0m9cibWPTa8db8xXhRZnyNmq2iamRzn5ibBmXg/0?wx_fmt=gif"/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/0tqmmR6jQORchpgdnmlciaHEVbibSEK29S3UL0GtxLY2qA3GkR0zaLAmfXGic80zFUfXr5HeAcgXn2uTQTSmQCHaQ/0?wx_fmt=gif"/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
    <item>
      <title>重磅 | MySQL 5.6 （GA）中文手册翻译全球招募！</title>
      <link>http://www.iwgc.cn/link/4445446</link>
      <description>&lt;p&gt;&lt;span&gt;自从中华数据库行业协会重启MySQL5.6 手册翻译项目后，有越来越多的志愿者开始加入。ZHDBA为了打造一个更加便捷的翻译环境，组建了核心翻译团队为大家服务，在召集了各路大牛成为我们最后的审核老师的同时，对翻译流程也做了优化。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;下面讲解此次维护更新后的翻译参与流程：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;全新翻译进度查询&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;更新后，MySQL 5.6手册的大章节被拆成里程碑（Milestones），每一章节中的小节以Issue方式显示，且在Issue的评论区有翻译者、翻译时间、翻译进度和联系方式等信息以方便大家了解具体的翻译进度。图一为Issue页面点击“Milestones”出现的章节划分页面。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIW7JbKspEchACCTQwLFicwTibl8a1WJrwQSawcfL3Tv6FcIzs73soWZeg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图一：里程碑划分大章节&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;点击单个里程碑可以看到该里程碑对应的章节下具体小节的翻译情况，具体issue中的内容在“我要怎么参与翻译？”段落中有详细说明。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nItst446xRMzcVLEqN4uz9x4IK48R4Uf7S6BfCTvnJmgQn7JlWAhzpOg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图二：小节翻译进度详情&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我要怎么参与翻译？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次项目在GitHub上开放式翻译，网址为：&lt;span&gt;https://github.com/mysql2cn/manual56&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1. Fork翻译项目&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nItnLxBPdI8IjS4iafxAjPB9MOy7qSlBwYO7vCQ0SLbwGn9KxiaHXB5sJg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图三：复制项目&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在页面右上角“Fork”整个项目后，图三所指出的位置进行下载当前整个项目的资源。其中docs文件夹为全部的翻译文件，Readme文件中为翻译的相关事宜以及翻译工具的简单教学。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2. 新建Issue声明自己翻译的章节&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIj5nGQPqhye324ldUkErTxndWP8icBnWy7h9WnXb7I1E6QHCtjU1PuIA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图四：新建issue示范&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;为了让所有参与者知道整个翻译的进度，请大家根据以下规则将自己想要翻译的小节建立Issue：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;a. 标题以翻译小节题目命名&lt;/p&gt;&lt;p&gt;b. 评论区备注翻译者的姓名、翻译完成时间和联系方式&lt;/p&gt;&lt;p&gt;c. 右侧（上）可以指定自己为翻译者&lt;/p&gt;&lt;p&gt;d. 右侧（中）更改Label表示当前翻译状态变化&lt;/p&gt;&lt;p&gt;e. 右侧（下）选择里程碑该小节属于具体哪个大章节&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nI06uzf4RsLVsAt2cZ4ZYlgrLhPCOSqOppd3qtmhP5XJ3jINQHqmtT8A/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图五：注意事项&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;需要注意的是，由于文件夹中为2013年MySQL 5.6手册的翻译内容，因此大家在翻译时请注意更改自己文件中的标题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3. 提交翻译&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nILUWvObhqcOkLGeHBHcA7MibDMic0I0j5ydMH0eqehSWGXwgdKvsM8fsg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图六：创建提交申请&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;当翻译好之后，翻译者可通过上图所示位置创建提交，进入图六所示页面。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nINa17IEbxCJkjw7uOUrzZDXAvyc5UYNlOcDEAVxicxZsK5f0BDtA19ag/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图七：更改预览&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;该图中上半部分为评论区，可对自己调整的部分添加备注，下方为更改后的预览。确认提交后点击“Create pull request”按钮进行提交。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;以上内容将于本周末上传至GitHub上“Readme文件中”，欢迎大家补充~&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;MySQL专家审核团队&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次翻译特地邀请了有丰富的MySQL经验的专家组成审核团队，为翻译增添助力！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIibM8QSsia8oEFZEswiaUWibRI7NViaudXODibQDv49gmPibHNUj5oSrQPMXkQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nITyu5zicgFMe9s3mibjsIT3A7bgIiaUO4lfvr6GbgpicRriaXbWjoYibXy2MA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nI0icUic9FiciaRypjGfhw4uaUKuy2FpxM8yI39CBwY0u945kLMY0mJ0BpGg/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIgTJwTPErIyfgqI6V8Lc1jEFcZA6r3jczqtQmtDwe0gibiaeTnQWvyHDA/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;更多神秘大牛坐镇，等你揭晓&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;志愿者执行团队&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIrtDV3wKzGqEwbAFVlVtUdDxJgQbjibUdcxqX6KvHFEQpVHjGLclkECQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;核心小队会帮助整个项目的执行和推进以及技术支持等，如果您也想成为我们核心小队的一员，请联系群主小慧。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我们期待您的加入&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;翻译交流区&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;QQ交流群：176296241&lt;/p&gt;&lt;p&gt;微信交流群：由于目前人数已经超过一百，请加小助手微信，小助手将邀您入群。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjWPOC0LiauOIkVDoyc24ic5nIFxkYicJezg1h4mZKfFwcLERMLroIM3iaVYnqoyLBqZVqBjiaaHft4FzRQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;翻译团小助手二维码&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;本次活动由中华数据库行业协会发起，感谢老叶茶馆、知数堂、ACMUG、SDCC、IT大咖联盟、DBAplus社群等平台的大力支持。&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
    <item>
      <title>【Cloudaily】Apache Kudu 1.2.0 发布，好未来教育云与阿里云达成战略合作</title>
      <link>http://www.iwgc.cn/link/4445447</link>
      <description>&lt;p&gt;Cloudaily网罗新鲜要闻，每日为你呈现大数据和云计算领域热点新闻。本次内容播报如下：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于 Docker 的操作系统：RancherOS v0.8.0-rc4&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;RancherOS v0.8.0-rc4 发布了，RancherOS 是微型 Linux 发行，整个操作系统以 Docker 容器的形式运行。这包含了系统服务如 udev 和 rsyslog。RancherOS 只包含运行 Docker 所需的最低数量的软件。这使得 RancherOS 的二进制下载量非常小。其他任何东西都可以动态通过 Docker 来获得。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Apache Kudu 1.2.0 发布，Hadoop 存储系统&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们为了实现这些目标，首先在现有的开源项目上实现原型，但是最终我们得出结论：需要从架构层作出重大改变。而这些改变足以让我们重新开发一个全新的数据存储系统。于是3年前开始开发，直到如今我们终于可以分享多年来的努力成果：Kudu，一个新的数据存储系统。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;联通和阿里云合作 建互联网云化卡号管理系统&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;继去年11月中国联通与阿里巴巴签订战略合作框架协议之后，今天下午阿里云宣布将于中国联通建卡号管理系统“cBSS2.0集中号卡系统”。据了解，这将是电信行业第一个核心业务系统云化改造的重点工程，也是云计算技术在电信行业的首次大规模应用。cBSS2.0集中号卡系统目前已经在广西、内蒙古、黑龙江三个试点省市快速上线，并将逐步推广至全国，形成惠及3亿用户的超级“卡号云”。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Facebook投资1亿美元在丹麦建立数据中心&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月20日Facebook宣布，将在丹麦欧登塞市(Odense)建立一座新数据中心，这将是Facebook在美国以外的第三座数据中心。Facebook数据中心业务总监尼奥·麦肯特加特(Niall McEntegart)称：“欧登塞数据中心将是全球最先进、最节能的数据中心之一。”麦肯特加特称，这座数据中心将100%使用可再生能源。此外，欧登塞市寒冷的气候也有助于降低服务器温度，而无需依赖于空调设备。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;好未来教育云与阿里云宣布达成战略合作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月22日，好未来教育云与阿里云宣布达成战略合作，双方将在4个方面深度合作，推动中国教育均衡发展。深度合作包括：1、好未来教育云依托阿里云，将优质产品输送到公立教育体系，推动教育均衡发展；2、双方联合服务帮助10000多家中心K12企业，打造互联网教育新生态；3、阿里云创新中心与好未来未来之星，共同发展孵化教育垂直行业独角兽；4、阿里和好未来共同推动xiwang.com教育公益平台，提供直播技术和底层支撑服务等。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数人云完成5000万A+轮融资&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月22日，云启家族成员数人云宣布公司完成5000万人民币A+轮融资。此次融资由沣源资本领投，云启资本、唯猎资本以及UCloud等A轮投资方继续跟投。本轮融资将主要用于企业级市场开拓、开源项目的推进，以及上下游生态的完善。数人云由原Google架构师王璞博士于2014年9月创立，其核心团队来自于谷歌、红帽和惠普，具有丰富的分布式研发能力和平台运营经验。2016年初完成3000万人民币A轮融资。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;腾讯云国内首发FPGA云服务器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;1月20日，腾讯云推出国内首款高性能异构计算基础设施——FPGA云服务器，以云服务方式将大型公司才能长期支付使用的FPGA推广到更多企业。通过FPGA云服务器，企业可以进行FPGA硬件编程，可将性能提升至通用CPU服务器的30倍以上，而只需支付相当于通用CPU约40%的费用。腾讯云成为国内首家在云端开放FPGA计算服务的云服务商。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;蚂蚁金服CEO在达沃斯接受采访：支付宝将引入区块链技术&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;在今年的达沃斯经济论坛上，蚂蚁金服CEO井贤栋向CNBC透露，公司计划10年内发展20亿用户，并称将进一步探索区块链技术的应用。井贤栋还畅谈了人工智能和区块链技术的潜力——后者是一种分布式总账系统，据专家表示，这一技术可使众多金融流程成本变得更低，速度更快。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;到2021年，Hadoop大数据分析市场产值将达406.9亿美元&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;据市场研究咨询公司MarketsandMarkets新发布的一份市场研究报告声称，Hadoop大数据市场产值预计会从2016年的67.1亿美元猛增至2021年的406.9亿美元，2016年至2021年的年复合增长率(CAGR)将高达43.4%。这份报告名为《2016年至2021年Hadoop大数据分析市场全球预测》，从以下这几方面解读这个市场：组成部分(解决方案和服务)、应用软件(风险及欺诈分析、物联网、商品销售及供应链管理、客户分析、卸载大型机和安全情报)、垂直领域和地区。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;电子地图Here将向百度提供中国境外地图数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;据《日本经济新闻》近日报道，德国提供电子地图和位置信息服务的 Here 宣布，将与中国提供网络搜索及地图服务的百度扩大合作，在中国以外的全球地图信息提供方面开展合作。百度的约 3.5 亿用户到欧洲等旅行时，将能够以 Here 的数据为基础继续利用百度的服务。此举意在对抗地图搜索领域的竞争公司美国谷歌，扩大用户规模。&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 17:04:41 +0800</pubDate>
    </item>
  </channel>
</rss>
