<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>2017年，你需要GET的9大技术领域</title>
      <link>http://www.iwgc.cn/link/4325086</link>
      <description>&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;文中蓝色字体可点击底部的【阅读原文】获取链接。&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2016年过去了，然而我一点也不怀念它，因为2017年的技术趋势更加吸引人。回顾一年里业界的发展，2017年的技术趋势初现端倪。根据CSDN知识库这一年来大家关注的热门知识图谱，我们来给大家梳理一下2017年值得关注的技术方向。&lt;/p&gt;&lt;h4 style=" margin-top: 20px; margin-bottom: 10px; font-size: 18px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); text-decoration: underline; max-width: 100%; box-sizing: border-box; font-size: 16px; word-wrap: break-word !important; background-color: transparent;"&gt;&lt;strong&gt;&lt;span&gt;人工智能&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;与&lt;/span&gt;&lt;/strong&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); text-decoration: underline; max-width: 100%; box-sizing: border-box; font-size: 16px; word-wrap: break-word !important; background-color: transparent;"&gt;&lt;strong&gt;&lt;span&gt;机器学习&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;元旦刚过，阿法狗就以60胜0负1平的成绩一骑绝尘，横扫了围棋界高手。一时间，“AI将取代人类”的惊呼声再次响起。其实，这种悲观想法真的多余。人工智能在未来更多的，还是帮助我们的生活更加便捷轻松。未来，可能一个AI就是一个超级App，可以帮我们专门解决一个类生活问题。&lt;/p&gt;&lt;p&gt;现在很多巨头都在布局AI领域。Google就不必说了，它在人工智能领域的尝试非常广泛，除了阿法狗，还有自动驾驶、语音助理、智能家居等。Facebook已经收购了8个机器人公司和1个机器学习公司，并在许多新的业务中使用了人工智能技术。IBM斥资10亿美元成立的Watson项目包括了语音、语言理解、图像识别和情绪分析等能力，已经与一些汽车企业和医疗机构开始展开合作。而在国内，小米CEO雷军在近期的年会上也宣布人工智能是2017年的重点发展领域。&lt;/p&gt;&lt;p&gt;提到人工智能，就一定离不开机器学习。机器学习中比较火的一个主题——深度学习，已经在人脸识别、图像识别、语音识别，自然语言理解NLP技术、大数据挖掘技术、无人驾驶技术等领域获得了应用。Open AI研究科学家Durk Kingma&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;预测&lt;/a&gt;，未来3年，DNN、反向传播、SGD仍将是主要的技术。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuuJicUzjtQbDkTEhUo4Via0fh1fbwAsFIFbqiaiaTeNyv5jecg0bTUo0SnA/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; line-height: 27.2px; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多人工智能知识点&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; line-height: 27.2px; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多机器学习知识点&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); text-decoration: underline; max-width: 100%; box-sizing: border-box; line-height: 1.1; word-wrap: break-word !important; background-color: transparent;"&gt;&lt;strong&gt;&lt;span&gt;微信开发&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;2017年开年，筹备一年的小程序正式发布，引发了行业不小的地震，其带来的应用程序存在方式与现有App模式大有不同，掀起了技术热潮。无需安装用完即走的“触手可及”概念、多种接入方式等便捷的特点可以预见第三方小程序的市场巨大，微信也成为连接PaaS和SaaS的平台。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFunpic7iafiaicDZ6oPWPR2kRT2fhLzsmia9JMvGUF7u7oOibyEiaLmBWKznSdA/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;CSDN社区集合CSDN知识库、CSDN学院、CSDN博客、CSDN下载，从知识图谱、在线公开课，到系列博客与案例源码，全方位为大家梳理了一篇关于微信小程序开发的&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;技术干货&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多微信开发知识点&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; line-height: 1.1; word-wrap: break-word !important; background-color: transparent;"&gt;直播技术&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;直播在去年的热门程度堪比前两年的VR。然而两者面对的竞争点也很相似。最初局限于游戏直播和聊天的直播技术，也在泛娱乐、教育、VR等领域生根开花，直播逐渐从一个独立的产品，慢慢成为各领域产品中的一个标配功能。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuaicqu2gtZoIQOYekQ4kpYAqtl1Z1WicVTYvLSN6bTAgkZkcibRJfPaSDQ/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;VR直播也是一个非常热门的应用场景。年底，王菲的演唱会支持网络直播+VR直播，算过国内第一个吃螃蟹的。而在美国，2016年获得6000万美元B轮融资的NextVR已经开始直播了NBA比赛和美国民主党总统候选人辩论。&lt;/p&gt;&lt;p&gt;另一方面，教育直播由于国内雾霾问题被各个学校提上了日程，很多学生在家通过网络直播来上课。姑且算是应了“天时”吧。在教育领域，有几家直播技术服务商已经耕耘多年，通过自建CDN保证直播质量，通过教学白板、课件分享等功能，不断提升着交互体验。目前很多支持直播课堂的教育机构都采用了他们的服务。&lt;/p&gt;&lt;p&gt;直播行业在今年会出现更加激烈的竞争，不仅仅是在内容层面，更多也会在技术上出现更多提升与创新。&lt;/p&gt;&lt;p&gt;直播看似效果相似，但在不同领域需要解决的问题却不同。根据特邀专家与用户梳理的&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;直播技术知识库&lt;/a&gt;显示，在教育领域的直播，在技术上要求有稳定的内容分发网络，以及符合教育场景的拓展功能；游戏直播对网络要求高，更重要的是解决好编解码。另外，还有一些直播产品需要搞定多视频无缝切换、多人连麦等功能。另外，还有许多值得关注的技术点，比如基础的流媒体协议、开源项目、系统架构、CDN、交互技术等。&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击访问直播技术知识图谱&lt;/a&gt;&lt;/p&gt;&lt;h4 style=" margin-top: 20px; margin-bottom: 10px; font-size: 18px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); text-decoration: underline; max-width: 100%; box-sizing: border-box; font-size: 16px; word-wrap: break-word !important; background-color: transparent;"&gt;&lt;strong&gt;&lt;span&gt;大数据&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;“数据即价值、数据指引未来”，这已经是大家对大数据领域的共识。数据背后蕴藏的力量体现在基于数据驱动精细化运营，数据驱动的Growth Hacking等概念和方法论在国内也越来越普及。从事数据的企业主要主要有两大阵营：数据技术为核心，为企业提供定制化解决方案，如数据分析、云Saas业务等；围绕数据库和数据仓储业务，利用在硬件方面以及传统IT基础建设的优势冲击大数据领域，如数据中心建设，数据存储计算业务等。&lt;/span&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuTxkZRxPHJZq1KdDZVsbD4boDFOULTztAbGNibiadYzOY2laRdqE0uUcA/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;有分析认为， 2017年将会出现更多的基于大数据研究的应用项目，大家关注的焦点也会继续围绕如何将大数据业务化、商用化。&amp;nbsp;&lt;br/&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多云计算大数据技术知识点&lt;/a&gt;&lt;/p&gt;&lt;h4 style=" margin-top: 20px; margin-bottom: 10px; font-size: 18px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;微服务&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;微服务架构作为一种特定的软件应用程序设计方式，被业界公认为云计算时代互联网应用的主要构建方式，可将大型软件拆分为多个独立可部署服务组合而成的套件方案，其中各项服务都拥有自己的进程并利用轻量化机制（通常为HTTP源API）实现通信。“简单就是硬道理”也是微服务能够流行的原因。&amp;nbsp;&lt;br/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuEm4kmKjbeVvhvYsMJm6GvjyyLjuKAIb65g9iaTkC4ybueenINZhfBTw/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;最早从Netflix、Amazon等公司实践，因其高度的弹性、灵活性和效率的巨大提升，快速受到各领域架构师和技术决策者的关注，成为2016年IT领域最受关注的技术潮流之一。在过去一年中，各行各业逐步将微服务这一设计理念应用于核心系统中，也引发更多关于微服务在提高系统效率以及满足业务需求方面的的贡献与冲突的讨论。&amp;nbsp;&lt;br/&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多微服务知识点&lt;/a&gt;&lt;/p&gt;&lt;h4 style=" margin-top: 20px; margin-bottom: 10px; font-size: 18px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;虚拟现实&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;相比2016年初市场对“VR浪潮”的热炒，人们去年下半年对待VR反而“冷静”了许多。根据&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;Superdata&lt;/a&gt;发布的数据报告，尽管在2016年各大VR设备厂商的销量并没有达到年初预期，但整体还是呈增长趋势。在内容方面，Steam上排名前100的VR内容已经累计用友750万用户，用户量最多的是《The Lab》，达到了44万。根据高盛的&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;报告分析&lt;/a&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuh5On9lUVaRKrlkkArGUk7gJcDKh3eeLPOic3NlvMd4nD08fN3BnQS8A/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;在去年10月的Oculus Connect大会上，Oculus首席科学家Michael Abrash表示，未来将实现单眼4K、140度FOV、注视点渲染技术、空间音效，以及更自然的控制交互。在今年的CES上，Intel与Qualcomm均将VR解决方案作为参展的重点之一。在内容开发方面，不仅包括Oculus、Sony、HTC在内的公司在不断优化SDK，Unity、Ureal也在为VR做出相应优化。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击访问虚拟现实知识图谱&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; line-height: 1.1; word-wrap: break-word !important; background-color: transparent;"&gt;区块链&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;2016年FinTech概念愈发火热，而区块链又是其中最火的话题，政策扶持、资本热捧、各巨头纷纷高呼。资本版图数据显示，两年前区块链就是美国创投中融资最高的版块，突破10亿元。投行、金融巨头从最初的观望到逐步拥抱，开始尝试实践落地；BAT等互联网巨头，也纷纷布局金融科技，加大技术团队投入，扩展金融科技实力以求进一步拓展业务疆土。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuChVTkJsxGI8PzJIib0ySUAcVeQxSj2iclFkqpAWrMiaUuhPAA5KLdscEg/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;2016年工信部发布《中国区块链技术和应用发展白皮书》，国务院印发的《“十三五”国家信息化规划》中特别提到国家布局重点，区块链也位列其中，但目前区块链领域技术通用标准还未建立，这方面在2017年也将逐步完善。&amp;nbsp;&lt;br/&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多区块链知识点&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); text-decoration: underline; max-width: 100%; box-sizing: border-box; line-height: 27.2px; word-wrap: break-word !important; background-color: transparent;"&gt;&lt;strong&gt;嵌入式开发&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;以上提到了很多业界热门的趋势，人工智能、虚拟现实、直播，这些热门行业背后除了有软件技术的支撑，也离不开硬件技术的加持。嵌入式开发或许没有VR、直播、自动驾驶、无人机听上去那么炫，但缺少了背后的嵌入式工程师，这些都是纸上谈兵。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuOfbOA6Mibn2pic31E4yWmVPATDh9zibAswu95xMt0GqhZ9F354NndIJ6w/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;2017年我们将会看到更多由各大厂商提供的硬件开发工具和软件包支持。我们已经可以看到的是DeltaOS的Limda编译环境，Vxworks提供了Tonado开发环境，Windows CE也推Embedded VC++。&lt;/p&gt;&lt;p&gt;同时，由于智能设备、联网设备的兴起，嵌入式设计更多地开始考虑网络化和信息化。嵌入式处理器开始增加一些功能接口。新一代的嵌入式处理器已经开始内嵌网络接口，除支持TCP/IP协议，还有的支持IEEE1394、USB、CAN、蓝牙等。&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多嵌入式开发知识点&lt;/a&gt;&lt;/p&gt;&lt;h4 style=" margin-top: 20px; margin-bottom: 10px; font-size: 18px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;敏捷开发&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;敏捷是以用户的需求进化为核心，采用迭代、循序渐进的方法进行软件开发、管理。它是针对传统的瀑布开发模式的弊端而产生的一种新的模式，目标是提高生产效率和响应能力。敏捷在过去一年中成为软件开发领域热度靠前的一词，其被奉为软件开发制胜之道。当研发团队发展到一定阶段，越来越多的团队以求用敏捷开发模式来实施研发管理，进而能达到高效迭代、保障高质量软件产品等目的，最终实现为企业谋取更大的收益。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFu3PDP8R3jk5Pydtrt3WkUX26LT4CgUSVm9gibtVZVW8BVpgxBXsZib5tQ/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;2016年关于持续集成、DevOps、测试驱动开发等相关讨论越来越多，很多互联网巨头公司在研发团队中设置敏捷教练、Scrum Master。由于直观易用的特性，Scrum和看板逐渐成为软件研发管理两股风潮。&amp;nbsp;&lt;br/&gt;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;点击了解更多敏捷知识点&lt;/a&gt;&lt;/p&gt;&lt;p&gt;配图来源：&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;freepik&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Fri, 13 Jan 2017 17:12:34 +0800</pubDate>
    </item>
    <item>
      <title>展望 IoT 市场：机器学习能力定生死</title>
      <link>http://www.iwgc.cn/link/4325087</link>
      <description>&lt;blockquote style=" margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;作者：&lt;/span&gt;&amp;nbsp;Jacques Touillon，AirBoxLab 首席执行官，智能空气质量监控器 Foobot 的开发者。&amp;nbsp;&lt;br/&gt;&lt;span&gt;译者：&lt;/span&gt;&amp;nbsp;张新慧&amp;nbsp;&lt;br/&gt;&lt;span&gt;审校：&lt;/span&gt;&amp;nbsp;屠敏，关注 IoT 领域，寻求报道或者投稿请发邮件&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;tumin@csdn.net&lt;/a&gt;，技术之路，我们共同进步。&lt;/p&gt;&lt;/blockquote&gt;&lt;hr style=" margin-top: 20px; margin-bottom: 20px; max-width: 100%; box-sizing: content-box; font-size: 16px; white-space: normal; widows: 1; height: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;机器哪怕价值上亿，也无法替代医生来治病救人；但一个25美元的可穿戴设备却知道你什么时候该去看医生。&lt;/p&gt;&lt;p&gt;1996 年，美国芝加哥的库克郡医院急诊室采用了一种算法来判断出现胸痛症状的患者中，哪些面临更高的心脏病发作风险，是否在医院床位紧缺的情况下有住院的充分理由。该算法严格按照流程执行系统的基础测试，被证明不但快速高效，且及其精准。相比单纯依赖医生的判断，该算法判定的低风险患者数量多了 70%，而高风险患者数量则达到实际数量的 95%（医生判断仅为 75-89%）。这真是让人惊叹——要知道那个年代，深度运算还未问世呢。&lt;/p&gt;&lt;p&gt;想象当前，仅今年在使用的&amp;nbsp;&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;IoT 设备就几近 64 亿个&lt;/a&gt;——全球平均每人一台。这么庞大的数量，哪怕只有 1% 能通过脉搏、饮食和睡眠数据来判断用户健康状况的话，那么全球能够及时治疗的患者数量会是之前的 5 倍。&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujAS5yDznTdtXEjx1Wib0xFuPAwxtKO3RVhcsicLCRdEJskjNGMJ9rbbtIB7p0U43DGPtV2QxhyuMIQ/640?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;但真正了不起的还是机器学习能力，它不止广泛应用算法那么简单，而是通过收集的大量数据，觉察出拥有几十年从医经验者都难以发现的症状。想象一下， Fitbit（美国健康追踪器品牌）觉察到用户脉搏异常，显示出强烈的心脏发病征兆，于是提醒用户及时就医。机器学习就意味着居家用品也能解决“不可能解决”的问题。&lt;/p&gt;&lt;p&gt;IBM 的“沃森(Watson)”和 Google 的“深度思维(DeepMind)”在诸多领域（如 Jeopardy 智力问答和围棋）表现超过人类后，机器学习就不再是一个愿景了。现在要问的是：如果 Fitbit 能救命，而 Nike+ Fuel Band 运动追踪器不能救命，你会购买哪一个呢？&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;“smart（智慧、智能）”的真正价值&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;“智能”产品层出不穷，也难怪名列前茅的总是那些具备学习能力的。拿 Nest 智能恒温器举例，消费者愿意掏腰包并非因为 Nest 是手机可操控的，而是因为没人在家时可以节能——Nest 以智慧的方式解决了长久存在的问题，既能根据用户所需调整温度，没人在家时又能节能，这比一个简单的定时器高明多了。&lt;/p&gt;&lt;p&gt;遗憾的是，大部分制造商太急功近利。拿 Phillips 的 HUE 无线 LED 灯举例，其外观固然惹人喜爱，但仅仅因为可手机操控开关就贴上“smart（智慧、智能）”的标签难免牵强。开关灯不是个问题，不需要解决——难道你轻易因为一个人会开关灯就称其“smart”吗？那么为什么换做一个灯泡，就心安理得贴上“smart”一词呢？&lt;/p&gt;&lt;p&gt;很多 IoT 产品并不是真正“smart”，这也成了 IoT 市场发展的阻碍。能够远程控制的门锁，还有主人一进家门就自动打开的收音机充其量只是奢侈品，跟米其林大餐和豪华游轮这些只能富人消费的起的东西没什么两样。&lt;/p&gt;&lt;p&gt;机器学习能力将“渴求”转换为“必备”，比如既让你温暖过冬又节省电费的恒温器；比如给予睡眠或健身意见的可穿戴设备；比如在恶果酿成前就察觉污染、追踪来源的环境监视器……&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;机器学习能力：永远的胜者标杆&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;“会学习”的设备总是出类拔萃，更具吸引力。但机器学习能力本身则意味着在众多竞争者之中，长久地保持领先优势。&lt;/p&gt;&lt;p&gt;云技术让设备会“学习”，所以机器学习能力不再是设计问题（只要设备能联网），不再是硬件问题（复杂的数据处理可以远程实现），更像是人才问题——有能力的工程师少之又少，不过只要薪资够高，这也不是问题。可能将其形容为数据问题是最为贴切的。&lt;/p&gt;&lt;p&gt;要让计算机老老实实学习数据模式(patterns)，需提供大量数据集。计算机要考虑用户偏好、使用案例、环境等诸多因素，而很多，甚至绝大多数因素都是时间相关的——使用频率、行为频率、条件发生频率、用户行为逐渐改变、环境的季节变化以及传感器寿命期内的数据精确性等。&lt;/p&gt;&lt;p&gt;人人都在争分夺秒，而时间是公平的。即便拥有上亿台优质的联网设备，数不清的用户和资金也无法缩小与竞争者之间哪怕仅有 6 个月的差距。而坐拥优质数据则是对手无法超越的强大优势，这就要看数据读取的精确度、设备众多功能，包括早先开发并最终稳定下来的功能。&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;IoT 市场是大家的市场&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;现在的行情，好像只有 IBM 和 Google 才能时不时拿出像样的，“会学习”的产品来，难道只有大玩家才能玩转，小公司没资本吗？当然不是。&lt;/p&gt;&lt;p&gt;一些创业公司无法处理复杂数据，可以外包啊。正如刚刚所说，云技术已经实现远程处理数据了，创业公司只要按每小时付费，就可“租用”高级设备——这投资有理有据，成本不高，省事省力省心。&lt;/p&gt;&lt;p&gt;更重要的市，“会学习”的设备硬件要求不是很高，不一定开发的第一批设备就要具备机器学习能力，刚起步的公司设计和组装都够忙的，别给自己添太多麻烦。&lt;/p&gt;&lt;p&gt;其实当初 Nest 也饶了很多弯路；可手机操控的恒温器通过简单算法来评估房子升温所需时间。算法并没有去了解住户的需求，但是升级只需要新的数据包，而不是装着新产品的新包裹——添加机器学习能力没必要非得投入重金（当然得赶在竞争者之前，越早开始，成本越小）。&lt;/p&gt;&lt;h2 style=" margin-top: 20px; margin-bottom: 10px; font-size: 30px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;专业，可以无处不在&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;把机器学习能力看作知足常乐的创业公司的坟墓，想想挺可怕。但我们有更多理由去选择乐观，而不是恐惧。“会学习”能够增加的价值超出想象——手上戴的不仅仅是健康腕带，还是医生；门上装的不仅仅是智能门锁，还是侦探；家里用的不仅仅是环境监控器，还是健康卫士；花钱买的不仅仅是豪华设备，还是男管家。&lt;/p&gt;&lt;p&gt;“会学习”智能设备不再急功近利，而是变得更为强大。一些机器学习能力的早期开拓者，如 Nest 和 Echoes，已脱颖而出，让我们的生活更有价值。其他科技公司纷纷效仿之时，世界将是另一番模样。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Fri, 13 Jan 2017 17:12:34 +0800</pubDate>
    </item>
    <item>
      <title>“鲜点”资讯：Doug Cutting寄语2017，AWS和VMware“双赢”联盟</title>
      <link>http://www.iwgc.cn/link/4325088</link>
      <description>&lt;p&gt;&lt;span&gt;“鲜点”资讯网罗新鲜要闻，每日为你呈现&lt;/span&gt;&lt;span&gt;大数据和云计算领域&lt;/span&gt;&lt;span&gt;热点新闻。本次内容播报如下&lt;/span&gt;&lt;span&gt;（&lt;/span&gt;&lt;span&gt;文中所有蓝色字体可点击底部的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;获取详情链接&lt;/span&gt;&lt;span&gt;）：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Hadoop创始人Doug Cutting寄语2017：五种让开源项目成功的方法&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在未来的几年内，开源生态系统将继续扩大，也会不断地在有实际意义的项目里实施。它汇聚了今天最聪明的头脑，在通力合作下，以十年前不可能的速度推进软件开发。如果你想改善现有技术，或者想支持打破传统的观念，可以加入这里。Doug鼓励每个人都有兴趣参与进来，也鼓励经验丰富的人因为这个原因继续坚持下去。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;阿里云国际化再布局 将为马来西亚学校提供云服务&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;阿里云宣布推出面向教育行业的解决方案EduCloud，并与数字媒体公司Conversant和在线教育服务提供商Prestariang Berhad达成合作，以云计算大数据技术为基础向马来西亚学校提供校园管理、教学、娱乐、移动支付等服务。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;年度盘点 | 2016年中国云计算十大新闻&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;刚刚离去的2016，有太多值得我们思考与感悟，回顾过去的2016，是为了开启更好的2017。为此，中国软件网针对移动办公、CRM、HR、云计算、大数据、信息安全等细分领域以及软件园区2016年的发展状况，整理出了2016年度十大新闻和2016年度十大产品，并对未来发展做了趋势预测。今天我们要盘点的是云计算领域。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2019年云计算市场规模将达5706.4亿 PAAS成为决胜一环&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;云计算服务市场由云计算数据中心基础设施、IaaS、PaaS、SaaS四个细分市场构成。2016年中国云计算市场依然保持增长，预计整体市场规模将达到2797亿元，同比增长41.7％。云计算服务市场由云计算数据中心基础设施、IaaS、PaaS、SaaS四个细分市场构成。2016年中国云计算市场依然保持增长，预计整体市场规模将达到2797亿元，同比增长41.7％。公有云服务市场规模仍然仅占整体云计算市场规模的8％，主要是中国云计算市场规模依然以硬件投资为主，云计算服务市场还未起到主导作用，公有云服务的市场培育之路依然艰巨。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;AWS和VMware“双赢”联盟：用户是否是“第三赢”家？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;AWS和VMware之间的合作伙伴关系虽然可以对他们在企业级云市场中的合作伙伴有所帮助，但是也带来了与定价和支持相关的问题。现在，这两家行业巨头正在着手开展这项工作。供应商们正在开发VMware Cloud on AWS，这是一个基于VMware Cloud Foundation的平台，其中包括了VMware vSphere、VMware Virtual SAN以及NSX。这个软件在裸机AWS基础设施上运行，这意味着它可支持私有云、混合云以及公有云。因而，VMware云服务现在具有一致的接口。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2016年度“中国大数据创新百人榜单”火热出炉&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2017年1月10日，“2016中国大数据创新百人榜单”隆重发布。2016年入选“中国大数据创新百人榜单”的人物涉及商界、政界、科研、学术、创业、投资等多个领域，在过去的2016年中，他们站在所属行业的前沿，具有开创性与前瞻性地推动大数据产业发展，在当下经济全球化时代，主导或参与了具有深刻影响力和重大突破性的大数据产品与技术研发、应用与服务创新，管理与战略规划，他们是中国大数据产业的杰出代表，是中国企业转型、创新、创业大潮中的引领者和开创者，是中国大数据产业的“标杆”。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2017年数据知识产权第一案：脉脉非法抓取使用微博用户信息 被判不正当竞争&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;日前，有关“脉脉非法抓取使用新浪微博用户信息”的案件在北京知识产权法院终审宣判。法院驳回了脉脉的上诉，维持原判，认定北京淘友天下技术有限公司和北京淘友天下科技发展有限公司(均为脉脉的经营公司)构成不正当竞争，立即停止涉案不正当竞争行为。进入大数据时代后，包括微博在内的平台方均有责任和义务推动数据生态繁荣，建立使用规则，并及对滥用行为加以制止。本案为大数据不正当竞争纠纷案首案，对行业规则的建立以及如何维权具有重要指导意义。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2016年十大云故障事件：数量减少，损害增加&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;随着云提供商不断积累运营经验和技术的日益成熟，云故障的频率和持续时间都在减少。这是个好消息。但另一方面，企业却在面对宕机的时候变得越来越脆弱。随着现代化应用和数据源变得越来越分散，我们对它们来管理日常生活方方面面的依赖性也越来越高，潜在的危害，或者强烈的挫折感，变得比以往任何时候都更大。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;广东省交通运输厅与腾讯云腾讯地图合作，提供春运出行大数据分析&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月11日消息，广东省春运工作领导小组暨广东省交通运输厅春运办公室昨天正式挂牌运作。为服务好春运，今年广东省交通运输厅积极推进“互联网+”大数据在春运工作中的应用，与腾讯公司共同构建了广东省春运交通大数据预测分析平台，提升春运组织协调和应急预警能力。同时，“广东交通发布”微信公众号也正式上线，及时向公众发布各类春运信息。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;国内首个航旅大数据研究中心在沪成立 倡导开放共享、融合创新、安全规范&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月11日，国内首个航旅大数据研究中心——工信海威-敬众航旅大数据研究中心在沪成立。该研究中心由上海敬众科技股份有限公司联合工业和信息化部电子科学技术情报研究所相关部门共同成立，通过政企合作的形式致力于共同研究利用航旅大数据提升管理服务能力，促进航旅消费和产业转型，并就航旅大数据的安全保障体系、使用标准规范等问题展开深入研究。&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjXo0TOxQLNpNbkVxQ6f9mciaTia8lriaDbFRDv173l0icFibbZCvlHMsOvMXYWrwaCuY5SCNUPHrVbfib9A/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br/&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/p&gt;&lt;/blockquote&gt;</description>
      <pubDate>Fri, 13 Jan 2017 17:12:34 +0800</pubDate>
    </item>
    <item>
      <title>SIGIR 2016信息检索精选论文</title>
      <link>http://www.iwgc.cn/link/4307421</link>
      <description>&lt;blockquote style=" margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;&lt;span&gt;作者：&lt;/span&gt;洪亮劼，Etsy数据科学主管，前雅虎研究院高级经理。长期从事推荐系统、机器学习和人工智能的研究工作，在国际顶级会议上发表论文20余篇，长期担任多个国际著名会议及期刊的评审委员会成员和审稿人。&amp;nbsp;&lt;br/&gt;&lt;span&gt;责编：&lt;/span&gt;何永灿，欢迎人工智能领域技术投稿、约稿、给文章纠错，请发送邮件至&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;heyc@csdn.net&lt;/a&gt;&amp;nbsp;&lt;br/&gt;&lt;span&gt;本文为&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;《程序员》&lt;/a&gt;原创文章，未经允许不得转载，更多精彩文章请&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;订阅2017年《程序员》&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;人工智能和机器学习领域的学术论文汗牛充栋。每年的各大顶级会议、研讨班录用好几千篇论文，即便是亲临现场也很难追踪到所有的前沿信息。在时间和精力有限的情况下，选择精读哪些论文、学习哪些热门技术就成为了AI学者和从业人员头痛的问题。本栏目旨在帮助大家筛选出有意思的论文，解读出论文的核心思想，为精读提供阅读指导。&lt;/p&gt;&lt;p&gt;信息检索（IR）界的顶级会议International ACM SIGIR Conference on Research and Development in Information Retrieval（SIGIR 2016）在意大利比萨举行。整整三十年前的1986年，第一届SIGIR大会也在同一个城市举行。尽管与机器学习和数据挖掘领域其他大会的蓬勃发展相比，SIGIR这几年有所收缩，但信息检索界的研究依然对搜索系统以及推荐系统的发展有着重要的指导作用。笔者从SIGIR 2016精选出5篇有意思的文章，为读者解惑。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;A Sequential Decision Formulation of the Interface Card Model for Interactive IR&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;这篇论文来自伊利诺伊大学香槟分校信息检索领域权威翟成祥的实验室。推荐这篇文章主要有如下几个目的：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;很多人，特别是比较年轻的读者，在现在常见的有“模型、实验”然后拼“性能”之外，可能没有见识过其他的论文形式。所以，这篇文章至少从构思、写作的角度可以扩宽读者的眼界。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;当下还在做信息检索理论模型研究的人已经寥寥无几。作为信息检索领域权威之一的翟成祥教授能够一直推动这方面的发展，着实不容易。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这篇文章本身也有一些有意思的扩展（后文详述）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这篇文章的立足点，是如何扩展信息检索领域的经典假设——传统的Probability Ranking Principle到更加复杂的Decision Making的情况下。文章的核心，是用作者自己的语言和框架，把Markov Decision Process的基础重新写了一遍。然后，通过引入用户状态的概念，又推导到Partially Observed Markov Decision Process（POMDP）。之后，文章扩展了State，引入了Stopping State的概念。此外，文章定义了几种特殊的Card。由于提出的框架过于新颖，文章的实验主要是Simulation和小规模的User Study。单独看文章提出的这套理论，有一点希望在POMDP的经典语境下添加一些新东西的意味。同时，由于整个思路和传统的IR又相去甚远，实验也不好做。不过，这篇文章提出了一个不错的研究方向，和笔者之前的预期比较吻合。那就是：如何把最新的Reinforcement Learning的成果应用到信息检索领域？能否提出一个优化Long Term User Utility的办法，同时解决很多中间的问题，比如没法定义Utility怎么办，没法定义用户的中间状态怎么办？&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;Statistical Significance, Power, and Sample Sizes: A Systematic Review of SIGIR and TOIS, 2006-2015&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这篇论文的作者酒井哲来自日本的早稻田大学，也是信息检索界的著名学者。他的这篇文章具有两层实用价值：第一，文章系统地分析了过去十年SIGIR和ACM Transactions on Information Systems（TOIS），信息检索领域的两大顶级发表平台中的绝大多数文章使用Hypothesis Testing的情况；第二，文章总结了不少实用的Hypothesis Testing工具，以及一系列关于这些工具的讨论，特别是针对这些工具在不同论文中的使用。&lt;/p&gt;&lt;p&gt;这里总结一下这篇文章的一些结论：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;在10年的将近862篇论文中，只有35%使用了Paired t-test，而255篇（30%）没有Significance Testing。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在255篇中，167篇使用了“Significant Improvement”和“Significantly outperform”的字眼。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;464篇有两个系统比较的论文中，65%使用了Paired t-test， 21%使用了Wilcoxon Signed Rank Test。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这10年来，没有Paired t-test或者Wilcoxon signed rank test的文章总体是减少的，使用Paired t-test的论文是增加的。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在565篇汇报了Significance Test结果的论文中，65%没有汇报p-values或者没有汇报test statistics。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在133篇能够做Power Analysis的文章中，29%是Extremely overpowered，还有7%是Extremely underpowered。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Extremely overpowered的实验数据通常来自工业界，而Extreme underpowered的则来自于雇佣了Participants。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;总体看来，结果不是那么乐观。也就是说，过去10年SIGIR和TOIS的很多结果可能并不是那么站得住脚。当然，实践在慢慢改变。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;Query to Knowledge: Unsupervised Entity Extraction&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这篇文章来自雅虎研究院的Query Understanding组。目的是从Query Logs里面提取和商品有关的Entity，文章专注于品牌名和产品名。总体说来，Query的Entity Extraction是提取Query相关Feature的重要环节。与以前的思路不同的是，这篇文章提出的是彻底的无监督方法，也就是借助所谓的Adaptor Grammars（想深入了解Adaptor Grammars的朋友建议看相关论文，这篇文章里有简单的介绍，但不是很透彻）。&lt;/p&gt;&lt;p&gt;简单说来，Adaptor Grammars就是一个Nonparametric版的Probabilistic Context-free Grammar。用户可以通过定义一组简单的规则或者叫Grammar来启发算法发现类似的规则。当然，较真的朋友，可能会觉得这样的规则也是一部分监督信息。但是，定义这样的规则还是比要给单个数据点标注信息来得容易。&lt;/p&gt;&lt;p&gt;文章里的Adaptor Grammars是通过MCMC来学习的，作者们也提出了使用Variational Inference来加速的可能。从算法部分来看，这篇文章并没有对Adaptor Grammars进行大的改进，亮点是把这个算法应用到这个场景。从实验效果来看，Adaptor Grammars还是不错的，能够识别非常多的品牌和产品名。&lt;/p&gt;&lt;p&gt;另外有两点值得注意：第一，文章中提到的Query Normalization方法也值得参考，这样减少了数据中非常多的Noise；第二，文章的Related Work也很值得关注，看点在于总结了之前的Query Entity Extraction的主要方法，基本上都是基于CRF+Topic Modeling的Semi-Supervised的方法。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;Generalized BROOF-L2R: A General Framework for Learning to Rank Based on Boosting and Random Forests&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这篇文章的作者来自巴西的University Federal of Minas Gerais。文章的核心思想非常直观，就是要把Boosting和Random Forest（RF）结合起来做Learning to Rank。有这样想法的人过去也有不少，已经有了很多类似思路。这篇文章的思路是使用RF来做Weak Learner，然后用Boosting的想法把这些Weak Learner串起来。&lt;/p&gt;&lt;p&gt;当然，文章不是仅仅限于这么一个简单的思路，而是提出了一个叫BROOF的框架，很多算法的变种都可以在这个框架里实现。比如Weak Learner的Weight如何确定，是否选择使用Validation Set等，有兴趣的读者可以去看看文章的细节。&lt;/p&gt;&lt;p&gt;文章比较了提出的框架和很多知名算法的性能，比如AdaRank、LambdaRank、RankSVM等等。选用的数据集是LETOR 2003、2004和Yahoo Learning to Rank数据集。结果还是比较引人注目的，基本上在所有的数据集上，提出的算法性能不是最好，就是和最好的算法持平。&lt;/p&gt;&lt;p&gt;这篇文章的另外一个亮点是Related Work，对于Boosting或者RF在Learning to Rank里的应用有兴趣的读者，建议好好看看Related Work里的文献。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Fast First-Phase Candidate Generation for Cascading Rankers&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;作者中的Torsten Suel研究方向就是Query Processing和Index Construction，是这方面的专家。文章讨论的问题非常具有实际意义。首先，现代的搜索引擎和推荐系统多数采用Cascade Ranker的模式。也就是说，Candidate Set经过多轮的选择、排序、过滤，每一个阶段都比前一个阶段可能更复杂，Model的层次更高。关于Cascade Ranker的详细阐述，这篇文章的Related Work和Reference（惊人的59篇）都是非常不错的资源宝库。&lt;/p&gt;&lt;p&gt;回到文章本身，这篇文章探讨的是在Cascade Ranker的第一阶段如何利用Boolean Filter来达到最佳的选择效果。第一阶段之所以那么重要，是因为这个阶段Evaluate的文档个数是最多的，也是最需要效率的地方。值得注意的是，这篇文章探讨的是所谓Unsafe的方法，也就是第一部分有可能漏掉高质量的文档。具体而言，是建立两层结构的Index，在Offline的情况下就筛选出一些可能是高分的文档。其中第一层的Index有一个Single-Term和Pairwise-Term的结构，这两个结构都保持一定数量的高分文档；第二层Index用来查看剩下的一些分数。这里面要解决的问题是，如何选择第一层的深度，然后究竟在一个Query进来的情况下，如何选择Look-up的路径。需要注意的是，文章提供的还是偏向于Web Search的情况，要想推广到一般意义的Index，可能还需要额外的工作。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Thu, 12 Jan 2017 13:28:26 +0800</pubDate>
    </item>
    <item>
      <title>分布式实时处理系统架构设计与机器学习实践</title>
      <link>http://www.iwgc.cn/link/4307422</link>
      <description>&lt;blockquote style=" margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;&lt;strong&gt;编者按&lt;/strong&gt;：在2017年的1月11日，CSDN高级架构师金牌授课群为群友们带来了第一次的分享，讲师和主题参见&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;这里&lt;/a&gt;，本文为课程后续的文字整理，第一时间发出来分享给读者，课件下载点击&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;这里&lt;/a&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;大家好，我们今天主要讨论以下几个问题：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;机器学习与实时处理系统应用&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;分布式计算拓扑搭建&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;消息算法调优&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Hurricane计算框架与未来展望&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;机器学习与实时处理系统应用&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;现在我们先来看看第一部分：机器学习与实时处理系统应用。我们首先简单了解下机器学习，然后引入分布式实时处理系统的概念以及实时处理系统与机器学的关系。&lt;/p&gt;&lt;p&gt;机器学习在现实世界中的作用越来越重要。&lt;/p&gt;&lt;p&gt;机器学习的方法非常多，比如传统的知识库方法，类比方法，归纳方法，演绎方法等各种方法。&lt;/p&gt;&lt;p&gt;目前在大多数领域中应用最多的当属归纳学习方法。&lt;/p&gt;&lt;p&gt;在通常的归纳型机器学习中，我们的目标是让计算机学习到一个“模型”（这种模型是人类预先组织好的，有固定的数据结构和算法等等），然后我们就可以用这个“模型”来进行“预测”。 预测就是从现实中输入一些数据，通过学习到的模型进行计算，得到的输出。我们希望这个模型可以在很高的概率下输出一个和真实结果差距不大的结果。&lt;/p&gt;&lt;p&gt;一旦我们得到了这个模型，我们可以使用该模型处理输入数据，得到输出数据（即预测结果），而归纳性机器学习的任务就是学习中间的这个模型。&lt;/p&gt;&lt;p&gt;如果我们将这个模型看成一个函数，那么我们可以认为归纳性机器学习的目的就是学习得到一个函数F，如果该函数的参数为x，输出为y。那么我们希望学到的东西就是 y = F(x) 中的F。&lt;/p&gt;&lt;p&gt;我们先用一个最简单的例子来讲一下：&lt;/p&gt;&lt;p&gt;假设我们现在不知道一个物体自由落体速度的计算公式，需要学习如何预测一个物体的自由落体速度，机器学习的第一步就是收集数据，假设我们可以测量出物体下坠的任何时间点的速度，那么我们需要收集的数据就是某个物体的下坠时间和那个时间点的速度。&lt;/p&gt;&lt;p&gt;现在我们收集到一系列数据：&lt;/p&gt;&lt;table width="736"&gt;&lt;thead style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;时间&lt;/th&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;物体速度&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;1&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;9.7&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;2&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;20.0&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;3&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;29.0&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;4&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;39.9&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;5&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;49.4&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;6&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;58.5&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;7&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;69.0&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;8&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;78.8&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;9&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;89.0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;我们这里给出两个假设。第一个假设是，一个物体自由落体的速度只和时间有关系 第二个假设是，我们可以使用一个简单的“模型”：一元一次函数得到物体的速度。（即 F(x) = ax + b）&lt;/p&gt;&lt;p&gt;在这个问题中，a、b 这就是这个模型待学习的“参数”。&lt;/p&gt;&lt;p&gt;现在的问题就是——我们需要用什么策略来学习这些参数？因为我们可以遍历的数值空间是无穷大的，因此我们必须采用某种策略指导我们进行学习。我们就用非常朴素的思想来将解决这个问题吧。&lt;/p&gt;&lt;p&gt;在正式学习前，我们先将收集的数据分成两组，一组是“训练数据”，一组是“测试数据” 。&lt;/p&gt;&lt;p&gt;假设训练数据是：&lt;/p&gt;&lt;table width="736"&gt;&lt;thead style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;1&lt;/th&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;9.7&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;2&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;20.0&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;3&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;29.0&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;4&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;39.9&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;5&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;49.4&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;6&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;58.5&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;测试数据是：&lt;/p&gt;&lt;table width="736"&gt;&lt;thead style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;7&lt;/th&gt;&lt;th style="padding: 2px 9px; word-break: break-all; border-top-width: 1px; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; text-align: left; font-size: 14px; word-wrap: break-word !important;"&gt;69.0&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;8&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;78.8&lt;/td&gt;&lt;/tr&gt;&lt;tr style="max-width: 100%; box-sizing: border-box; word-wrap: break-word !important;"&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;9&lt;/td&gt;&lt;td style="padding: 2px 9px; word-break: break-all; border-color: rgba(0, 0, 0, 0.0980392); max-width: 100%; box-sizing: border-box; font-size: 14px; word-wrap: break-word !important;"&gt;89.0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;我们需要根据训练数据计算出我们的参数a和b。 然后使用我们计算出来的a和b预测测试数据，比较F(x)和实际数据的差距，如果误差小到一定程度，说明我们学习到的参数是正确的，比如和实际数据的差距都小于5% 。&lt;/p&gt;&lt;p&gt;如果满足条件说明参数正确，否则说明参数不够精确，需要进一步学习，这个差距，我们称之为误差（Loss）。现在我们来看一下在这个模型（简单的一元一次线性函数）下如何学习这两个参数&lt;/p&gt;&lt;p&gt;比如我们可以采用这种学习策略 1.首先a和b都假定为整数，假定a的范围是[-10, 10]这个区间，b的范围是[-100, 100]这个区间 2.遍历所有的a和b的组合，使用a和b计算ax + b，x取每个训练数据的输入数据，评估计算结果精确性的方法是计算结果和训练数据结果的差的绝对值除以训练数据结果，也就是 Loss = |F(x) - Y| / Y 3.计算每个组合的Loss的平均值，取平均Loss最小的为我们假定的“学习结果” 。&lt;/p&gt;&lt;p&gt;现在我们就得到了a和b，并且这个a和b是在我们给定范围里精度最高的参数，我们用这个a和b去训练数据里面计算平均的 |F(x) - Y| / Y，如果平均Loss小于 5%，说明这个a和b是符合我们精度的。否则我们需要优化我们的学习策略。&lt;/p&gt;&lt;p&gt;这种朴素的基于归纳学习的机器学习方法可以分为以下几步：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;预先定义一个模型&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;根据模型制定学习策略&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用学习策略使用模型来学习（拟合）训练数据，得到该模型中的所有参数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用测试数据评估模型是否精确。如果不够精确则根据学习策略继续学习。如果足够精确，我们就认为机器学习结束了。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;最后我们可以得到模型和参数，这就是我们学到的结果，也就是那个用来预测的函数。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这里我们也要注意，上述步骤的前提是我们的模型是可以收敛的，如果模型本身就是发散的，那么我们就永远得不到我们的结果了。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;机器学习与实时处理系统&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;传统的机器学习是一种批处理式的方法，在这种方法下，我们需要预先准备好所有的训练数据，对训练数据进行精心组织和筛选，很多情况下还需要对数据进行标记（监督式学习），而训练数据的组织会对最后的训练结果产生相当大的影响。&lt;/p&gt;&lt;p&gt;在这种算法中我们要处理完所有数据后才能更新权重和模型。&lt;/p&gt;&lt;p&gt;但现在出现了许多在线学习算法，这种算法可以对实时输入的数据进行计算，马上完成权重和模型更新。&lt;/p&gt;&lt;p&gt;一方面我们可以用于监督式学习（完成数据标记后马上加入训练），也可以用于大量数据的非监督式学习。&lt;/p&gt;&lt;p&gt;而在这种情况下，实时处理系统就可以大展身手了。在线系统和实时处理系统可以确保实时完成对数据的学习，利用实时新系统。&lt;/p&gt;&lt;p&gt;实现思路如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6WrNDicj8AxmsKic4KE5v0VuCPSzxfY4b2KChr0VD1oe0ERvGDlFeEGNQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;这里我们可以看到，系统接收来自其他系统的实时输入，然后实时处理系统中使用在线算法快速处理数据，实时地更新模型权重信息。&lt;/p&gt;&lt;p&gt;纯粹的在线算法可能并不适合许多情景，但是如果将部分在线算法和传统的批处理式算法结合，将会起到非常好的效果。而且许多数据分析工作确实可以通过这种方式完成一部分处理，至少是预处理。&lt;/p&gt;&lt;p&gt;目前机器学习的趋势就是对精度和速度的要求越来越高，方法越来越复杂，而数据越来越多，计算量越来越大，如果没有足够的计算资源，不一定能够在有限时间内完成足够的学习，因此现在类似于Tensorflow之类的机器学习解决方案都会提供针对分布式的支持。而大数据场景下的机器学习也变得越来越重要，这也对我们的分布式计算与存储方案提出了严峻的挑战。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分布式计算拓扑搭建&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;现在我们来看一个现实工程中常常会遇到的问题。&lt;/p&gt;&lt;p&gt;我们在开发实际系统时常常会收集大量的用户体验信息，而我们常常需要对这些体验信息进行筛选、处理和分析。那么我们应该如何搭建一个用于实时处理体验信息的分布式系统呢？&lt;/p&gt;&lt;p&gt;我们先来看一下整体流程：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ67araDAJ7DMwhzFaJp85V46M2hvJAicMNKO0QozbFNohiaN6QCic10j35g/0?"/&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;收集体验信息&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;业务系统调用体验信息接口，将体验信息信息异步写入到特定的文件当中。使用永不停息的体验信息检测程序不断将新生成的体验信息发送到数据处理服务器。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;处理体验信息&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;首先数据处理服务器的体验信息接收负责将体验信息写入本地的Redis数据库中。然后我们使用消息源从Redis中读取数据，再将数据发送到之后的消息处理单元，由不同的数据处理单元对体验信息进行不同处理。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;存储结果&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;消息处理单元完成体验信息处理之后，将体验信息处理结果写入到Cassandra数据库中，并将体验信息数据写入到Elasticsearch数据库中。&lt;/p&gt;&lt;p&gt;其中关键的部分就是图中用长方形框出来的部分，该部分的作用是完成对数据的筛选、处理和基本分析。这部分我们将其称作计算拓扑，也就是用于完成实际计算的部分。&lt;/p&gt;&lt;p&gt;我们接下来阐述一下每一步具体如何做。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;收集体验信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6LciasD2bApvnx5J60LyNL3Cl2aHTAibeQB8j2IMKqhn3PxujhJWBtRQQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;收集体验信息分为以下几步：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;程序通过体验信息接口将体验信息写入体验信息文件中。我们假设程序会使用非阻塞的异步写入接口，体验信息接口的调用方只是将体验信息送入某个队列中，然后继续向下执行。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;接着体验信息写入线程从消息队列中读取数据，并将体验信息数据写入到真正的体验信息文件中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;写入后，某一个体验信息代理程序会不断监视体验信息文件的改动，并将用户新写入的体验信息信息发送到体验信息处理服务器的体验信息收集服务接口上。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;体验信息收集服务接口是整个服务的对外接口，负责将其他节点发送的体验信息信息送入集群内部的Redis节点，并将体验信息数据写入到Redis的列表中。至此为止，体验信息收集过程就完成了。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;处理体验信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6psZ6x5fiaAfE2hYCSUcibZx0mguiagsZzr5XR5qBfTyPFicMqAbTnEJKvA/0?"/&gt;&lt;/p&gt;&lt;p&gt;接下来是处理体验信息，处理体验信息主要在计算拓扑中完成。分为四步：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;体验信息处理消息源：负责监视Redis列表的改变，从Redis列表中读取体验信息规则，并将体验信息规则文本转换成计算拓扑的内部数据格式，传送到下一个体验信息处理单元。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;体验信息规则引擎：使用体验信息规则引擎对体验信息进行处理和过滤。这一步是可选的，也就是用户可以加入自己的消息处理单元对收集的体验信息进行处理。这将会影响到发送到后续的消息处理单元（索引器和计数器）中的体验信息消息。这一步我们就不做处理了，如果读者感兴趣可以自己加入一个或者多个消息处理单元对体验信息进行处理。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;索引：这一步必不可少，用于将体验信息规则引擎输出的体验信息写入到ElasticSearch中，并便于用户日后检索这些体验信息。这里涉及到一步——将体验信息规则元组转换成JSON，并将JSON写入ElasticSearch。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;统计：这一步也非常重要，用于对体验信息进行计数，这一步会将体验信息计数结果写入Cassandra的对应表中。便于用户获取统计信息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;存储结果&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6THORylfGib3p1ibMLLCrt9l5jrkKcSG5z4mDhKwasqEzf3t3mdiaznNbQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;最后就是对计算结果的存储，我们需要使用存储模块将数据写入到不同的数据库中：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;ElasticSearch：该数据库用于存储被转换成JSON的原始体验信息信息。用户可以在ElasticSerach中检索体验信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Cassandra：该数据库用于存储体验信息的统计计算结果。因为Cassandra支持原子计数列，因此可以非常胜任这个工作。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;我们可以发现，在上面几步中，其他都可以使用现成的系统来完成任务，最关键的部分就是计算拓扑，计算拓扑需要高实时性地完成体验信息处理分析任务，这样才能应付大型系统中以极快速度产生的大量体验信息。&lt;/p&gt;&lt;p&gt;这里我们可以使用一个独立的计算集群来完成这个事情。每个计算节点负责完成一个计算任务，完成之后将数据传送给下一个计算节点完成后续的计算任务。每个计算节点都有一个消息队列用于接收来自上一级的消息，然后处理消息并继续将结果发送给下一级的计算节点。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;消息处理的问题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;这里我们通常关心三个问题：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;如何确保所有数据都得到了处理。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如何组织消息（数据）的传递，为整个集群高效计算提供一个良好的I/O支持。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如何搭建这个计算拓扑并尽量高效地进行完成计算。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;数据完全处理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;我们先来看一下如何解决解决数据的完全处理问题。&lt;/p&gt;&lt;p&gt;我们这里讲每一个需要处理的数据（一条体验信息记录）组织成一个Tuple，也就是元组。每个计算节点都以Tuple为单位进行数据处理。每个元组都会有一个ack方法，用于告知上一级计算节点该Tuple已经处理完成。&lt;/p&gt;&lt;p&gt;我们以下面的方式处理Tuple，保证所有数据都会被完全处理：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;首先给每个Tuple一个id（伪随机的64位id）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;由消息源发出的Tuple会有一个Acker，构造Tuple的时候会把新的Tuple加入这个Acker（就是包含这个Acker）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;每个节点处理完一个元组调用元组的ack方法，改变Acker内部的记录值，表示当前Tuple已经完成处理。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果某个Acker中的所有Tuple都已经处理完成，那么这个Spout Tuple就已经处理完成。表明该消息源发出的Tuple被完全处理。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;由于我们无法在Acker中记录下Tuple树，因此比较好的方式是实现一个基于异或的优化算法，该算法在Storm中得到了应用。其具体实现是：在Acker中设置一个ack id，每创建一个Tuple，将id与其异或，每ack一个Tuple时，将其与id做异或运算。这样当所有Tuple处理完成后，ack id为0，就可以知道所有元组处理完成。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果消息源检测到某个其发出的Tuple没有在特定时间内得到处理，就会重发该元组。后续的计算节点重新开始处理。为了实现一个同时符合CAP的分布式系统，我们这里后续的计算节点并不会缓存计算结果，而是会重新开始计算上一级节点重发的元组，具体为什么这样做请参见How to beat the CAP theorem。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;数据流量控制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;第二个需要解决的问题就是数据流量控制问题。&lt;/p&gt;&lt;p&gt;我们可以设想一下，如果网络状况不好，在特定时间内有许多元组都没有得到处理，那么数据源节点就会重发许多Tuple，然后后续节点继续进行处理，产生更多的Tuple，加上我们需要正常处理的Tuple，使得集群中的Tuple越来越多。而由于网络状况不好，节点计算速度有限，会导致集群中积累的过多数据拖慢整个集群的计算速度，进一步导致更多的Tuple可能计算失败。&lt;/p&gt;&lt;p&gt;为了解决这个问题，我们必须想方设法控制集群中的流量。&lt;/p&gt;&lt;p&gt;这个时候我们就会采用一种流量背压机制。该机制借鉴自Twitter Heron。&amp;nbsp;&lt;br/&gt;这个机制的思想其实很简单，当每个计算节点处理 Tuple过慢，导致消息队列中挤压的Tuple过多时会向其他节点发送消息，那么所有向该节点发送消息的节点都会降低其发送消息的速度。经过逐级传播慢慢将整个集群的流量控制在比较合理的情况下。只不过这个算法具体如何实现有待我们继续研究。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;拓扑结构设计&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;最后就是如何搭建这个拓扑，并尽量高效地完成计算了。&lt;/p&gt;&lt;p&gt;在分布式实时处理系统领域，目前最为成功的例子就是Apache Storm项目，而Apache Storm采用的就是一种流模型。而我们的Hurricane则借鉴了Storm的结构，并进行了简化（主要在任务和线程模型上）。&lt;/p&gt;&lt;p&gt;这种流模型包括以下几个概念：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;拓扑结构：一个拓扑结构代表一个打包好的实时应用程序，相当于Hadoop中的一个MapReduce任务。但是和MapReduce最大的不同就是，MapReduce最后会停止，相当于任务处理结束，而拓扑结构则会持续执行，永不停息，除非你手动停止。因此任何时刻流入的数据流都会被拓扑结构迅速处理。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;流：一个流是拓扑结构中由元组组成的无限的序列，通常是由一个元组经过不同的处理单元处理之后产生的。每一个流入拓扑结构中的数据都会产生一个流。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;元组：元组是在流中传输的数据，数据源会将输入的数据转成元组输入到拓扑结构中，而数据处理单元会处理上一级的元组并产生新的元组传给下一级的数据处理单元。元组中支持存储不同类型的数据。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;消息源：消息源是拓扑结构中数据流的源头。通常其任务是读取外部数据源输入，并产生元组输入拓扑结构中。可靠的数据源可以确保消息完全得到处理，并在合适的时候重发元组。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据处理单元：数据处理单元是拓扑结构中负责处理数据的部分，你可以在其中筛选数据，统计数据，拼接数据等等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据处理单元会接收来自上一级的元组，并经过处理得到下一级的元组。每个数据处理单元会向上一级确认其元组有没有得到正确处理，如果数据源发现固定时间内并不是全部元组都被处理完了，就会重发元组。&amp;nbsp;&lt;br/&gt;为了支撑这套模型，我们设计了Hurricane的架构，该架构如下图所示：&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ65R0l5h6ZdC3WsjKqQ8BAHIpMH7bHliakIfibumgKVkBZzK30t45Z8NVw/0?"/&gt;&lt;/p&gt;&lt;p&gt;其中有以下几个组件：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;最上方的是President，这是整个集群的管理者，负责存储集群的所有元数据，所有Manager都需要与之通信并受其控制。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;下方的是多个Manager，每个Manager中会包含多个Executor，每个Executor会执行一个任务，可能为Spout和Bolt。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;从任务的抽象角度来讲，每个Executor之间会相互传递数据，只不过都需要通过Manager完成数据的传递，Manager会帮助Executor将数据以元组的形式传递给其他的Executor。&lt;/p&gt;&lt;p&gt;Manager之间可以自己传递数据（如果分组策略是确定的），有些情况下还需要通过President来得知自己应该将数据发送到哪个节点中。&lt;/p&gt;&lt;p&gt;了解整体架构后，我们来具体讲解一下President和Manager的架构。&lt;/p&gt;&lt;p&gt;President的架构如图所示：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6kRcGf2W4ULnMicoDia60M6X4bkicBMAHFrPVokffeZU4rQfEJpDVFFmdA/0?"/&gt;&lt;/p&gt;&lt;p&gt;President的底层是一个基于Meshy实现的NetListener，该类负责监听网络，并将请求发送给事件队列，交由事件队列处理。&lt;/p&gt;&lt;p&gt;President的核心是EventQueue。这是一个事件队列，当没有计算任务的时候，会从事件队列中获取事件并进行处理。&lt;/p&gt;&lt;p&gt;用户需要在EventQueue中事先注册每个事件对应的处理函数，President会根据事件类型调用对应的事件处理函数。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6rPCyEz6OLjJAiaa2SH7qW4qa5niaegYNqHGibPooRspTxjHpgwmfiaYtGA/0?"/&gt;&lt;/p&gt;&lt;p&gt;接下来是Manager的架构。Manager的架构相对来说较为复杂。考虑到性能优化等问题，这个架构修改了几次。&lt;/p&gt;&lt;p&gt;首先，最顶层和President一样，是一个事件队列，并使用一个基于Meshy的NetListener来完成IO事件的响应（转换成事件放入事件队列）。&lt;/p&gt;&lt;p&gt;接下来有两个模块：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Metadata Manager，该线程负责监听EventQueue，接收元数据的同步事件，负责和President同步集群的元数据。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Tuple Dispatcher，该线程负责响应OnTuple事件，接收其他节点发过来的元组，并将元组分发到响应的Bolt Executor的元组队列中。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;再下一层就是Executor。Executor分为SpoutExecutor和BoltExecutor，每个Executor都是一个单独的线程，在系统初始化Topology的时候，Managert会初始化Executor，并设置其中的任务。SpoutExecutor负责执行Spout任务，而BoltExecutor负责执行Bolt任务。&lt;/p&gt;&lt;p&gt;其中BoltExecutor需要接受来自其他Executor的Tuple，因此包含一个Tuple Queue。Tuple Dispatcher会将Tuple投送到这个Tuple Queue中，而Bolt则从Tuple Queue中取出数据并执行任务。&lt;/p&gt;&lt;p&gt;Eexecutor在执行完任务后，可能会将Tuple通过OutputCollector投送到OutputQueue中。我们又设计了一个OutputDispatcher，从OutputQueue中获取Tuple并发送到其他节点。OutputQueue也是一个带锁的阻塞队列，是唯一用于输出的队列。&lt;/p&gt;&lt;p&gt;现在我们来详细介绍一下Hurricane的基本组件。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Task&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Task是对计算任务的统一抽象，规定了计算任务的统一接口。Spout和Bolt都是Task的特殊实现。&lt;/p&gt;&lt;p&gt;Task包含三个接口函数：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Prepare，用于完成任务对象的初始化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Cleanup，用于清理任务对象。Executor会在关闭任务时执行该函数。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;DeclareFields，该方法用于声明该任务输出的Tuple的字段列表。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;Spout&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Spout是Task的特例，任务用于产生待处理的元组。因此除了Task的接口以外，还增加了两个新接口。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Clone，用于生成Spout对象的拷贝。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NextTuple，Executor会反复调用该函数生成元组。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这里需要注意一下，Hurricane会有简单的背压机制，当Bolt检测到Tuple流量过大的时候，会向Spout进行反馈，Spout会随之降低其发送元组的速度。&lt;/p&gt;&lt;p&gt;如果Bolt处理速度大于Tuple的生成速度，Bolt又会向Spout反馈增加流量，Spout会放松流量限制。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Bolt&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Bolt是计算单元，负责处理来自其他Spout和Bolt的元组。Bolt同样是特殊的Task，因此除了Task接口外，还有两个新的接口。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Clone：用于拷贝生成新的Bolt对象&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Execute：用于处理来自其他任务的元组，Executor每拿到一个元组就会调用该函数进行处理。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Bolt接收元组的方式我们称之为分组方式。目前hurricane支持3种分组方式。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Global：在该分组方式中，Executor会在第一次发送元组的时候随机选择一个目标任务，并记录下该任务，之后都使用该目标任务。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Random：在该分组方式中，Executor每次都会重新随机选择一个目标任务。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Field：在改分组方式中，Executor每次都会根据元组的特定字段选择目标任务，如果没有记录则会向President询问其目标节点，如果有记录则直接发送。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;Executor&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Executor负责执行具体的任务。每个Executor是一个独立的线程，可以充分利用多核和多线程的CPU。为了简化模型，每个Executor只负责执行一个任务。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;SpoutExecutor负责执行Spout任务，会持续不断地执行Spout。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;BoltExecutor负责执行Bolt任务，该Executor会不断从TupleQueue中获取元组，并调用Bolt处理元组。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果TupleQueue中不包含元组，BoltExecutor会被阻塞。超过一定时间没有获取到元组，BoltExecutor会向Spout反馈，解除部分流量限制，加快元组生成速度。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;其他特性&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;Squared&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ6siaQBEacVQqhnIpXPic3LKjCLa3SxaUuL5z8zKkRC26FdBUjDSOxpib2Q/640?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;介绍完Hurricane的基本功能与架构之后，我们来介绍一下Squared。&lt;/p&gt;&lt;p&gt;首先我们解释一下Squared是什么？&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAuiaCy0FibpfBj1tJ1SuPeuiaQ64Ada7UxYFS7QibPPL1UAH1yFgYdnUofXsgwJc9h1QOBUU5QQh3QDO2w/640?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;左侧是Hurricane基本的计算模型，在该计算模型中，系统是一个计算任务组成的网络。我们需要考虑每个节点的琐屑实现。&lt;/p&gt;&lt;p&gt;但如果在日常任务中，使用这种模型相对来说会显得比较复杂，尤其当网络非常复杂的时候。&lt;/p&gt;&lt;p&gt;为了解决这个问题，看一下右边这个计算模型，这是对我们完成计算任务的再次抽象。&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;第一步是产生语句的数据源&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;然后每条语句需要使用名为SplitSentence的函数处理将句子划分为单词&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;接下来根据单词分组，使用CountWord这个统计操作完成单词的计数。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;这里其实是将网络映射成了简单的数据操作流程。这样一来，解决问题和讨论问题都会变得更为简单直观。&lt;/p&gt;&lt;p&gt;这就是Squared所做的事情——将基于网络与数据流的模型转换成这种简单的流模型，让开发者更关注于数据的统计分析，脱离部分繁琐的工作。&lt;/p&gt;&lt;p&gt;&lt;span&gt;保序&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在现实的工作中，我们常常需要一个的特性就是保序。&lt;/p&gt;&lt;p&gt;比如部分银行交易和部分电商订单处理，希望数据按照顺序进行处理，但是传统的数据处理系统往往不支持这个特性。所以我们就实现了保序功能。&lt;/p&gt;&lt;p&gt;保序的实现原理很简单，首先每个Tuple会一个一个orderId字段，orderId是依据顺序生成的，然后所有对Tuple的操作都会检验该orderId之前的Tuple是否已经完成。&lt;/p&gt;&lt;p&gt;如果已经完成则处理该Tuple，否则就将Tuple放在一个队列里，等待前面的Tuple处理完毕为止。&lt;/p&gt;&lt;p&gt;&lt;span&gt;多语言支持&lt;/span&gt;&lt;/p&gt;&lt;p&gt;最后一部分就是多语言支持。&lt;/p&gt;&lt;p&gt;毋庸置疑的是，一个庞大复杂的实际系统不可能整个系统都使用C++编写。&lt;/p&gt;&lt;p&gt;首先就是C++的入门门槛高，平均开发效率无法和其他语言相比。其次，现在大部分的Web应用都是使用Java或者脚本语言开发，因此我们必须考虑Hurricane的多语言接口问题。&lt;/p&gt;&lt;p&gt;为此，Hurricane的思想是以基本的C++为后端，然后在C++上面封装其他语言的接口。此外还提供Bolt和Spout的实现接口，让其他语言可以直接编写计算组件。&amp;nbsp;&lt;br/&gt;当用户希望使用其他语言快速实现部分新的算法和模型的时候，这种特性就会非常有用。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;展望&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;目前该框架已经能够处理日常所需工作。该框架会在之后的时间中继续完善架构，完善并优化我们的系统实现，比如完全实现高层抽象Squared和保序机制等。&lt;/p&gt;&lt;p&gt;除此以外，由于现在有许多计算任务需要使用基于向量和矩阵的浮点计算，因此我们计划开发一个Hurricane的子项目——SewedBLAS。这是一个BLAS库的高层抽象，我们希望整合大量的BLAS库，比如使用CPU的MKL/OpenBLAS，使用GPU的CUDA和ACML，构建一个易于使用、跨平台的高性能线性代数库，并与Hurricane进行深度整合，力求在分布式和科学计算、深度学习找到最好的切合点，并充分吸收整合其他现有的分布式机器学习框架，减少从科研到产品的转换难度。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;蓝色字体可点击阅读原文获取详情。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Thu, 12 Jan 2017 13:28:26 +0800</pubDate>
    </item>
    <item>
      <title>“鲜点”资讯：开源平台Apache Beam正式发布，2016大数据领域大事记全回顾</title>
      <link>http://www.iwgc.cn/link/4307423</link>
      <description>&lt;p&gt;“鲜点”资讯网罗新鲜要闻，每日为你呈现&lt;span&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下&lt;span&gt;（&lt;/span&gt;&lt;span&gt;文中所有蓝色字体可点击底部的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;获取详情链接&lt;/span&gt;&lt;span&gt;）：&lt;/span&gt;&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Uber 推出数据平台“Uber Movement”，用实时数据帮政府治理交通&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1 月 9 日 Uber 推出了一个“Uber Movement”的数据发布平台，目标是为美国多个城市的市政府提供交通出行详细数据。Uber 方面介绍称，使用该数据平台的地方政府可以更迅速、细致地了解交通状况，甚至乘客出行习惯，能借此优化交通资源调配，改善交通状况。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Docker 1.12.6 发布，应用容器引擎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Docker 1.12.6 发布了。新版本部分更新内容如下：Docker 1.12 附带了一个 rpm更新的系统单位文件（包括RHEL，Fedora，CentOS和Oracle Linux 7）。从旧版本的docker升级时，升级过程可能不会自动安装更新版本的单元文件，或者无法启动docker服务。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;MongoDB 赎金事件持续发酵，究竟是谁之过？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;数以万计的个人和可能专有的数据库被从网上删除，替换为要求支付赎金才会返还的票据。雪上加霜的是，似乎还几乎没有一个已经支付赎金的受害者的数据，有得到他们丢失的文件。MongoDB 官方团队的回答是，MongoDB 数据库本身是具有企业级安全性的，受攻击 MongoDB 的实例大都是因为没有遵照生产环境部署手册部署的结果，这些攻击其实完全可以通过 MongoDB 中内置的完善的安全机制来预防。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;谷歌布局大数据：开源平台Apache Beam正式发布&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;美国时间1月10日，Apache软件基金会对外宣布，万众期待的 Apache Beam 在经历了近一年的孵化之后终于毕业。这一顶级 Apache开源项目终于成熟。这是大数据处理领域的又一大里程碑事件——仅仅在上个月，腾讯宣布将在2017年一季度开源其大数据计算平台 Angel 。现在看来，生不逢时的Angel可能迎来了它最大的对手。至此，谷歌终于也完成了对其云端大数据平台Cloud Dataflow开源的承诺。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;EasyStack完成5000万美元C轮融资&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;中国IDC圈1月11日报道，OpenStack开源云领导企业EasyStack（北京易捷思达科技发展有限公司）宣布近日完成5000万美元C轮融资，是中国开源领域迄今公布的最大单笔融资。本轮融资由国科嘉和领投，多家人民币基金跟投，资金将主要应用于开源核心技术的研发投入、开源云企业解决方案的生态投入，以及企业云服务的团队建设三大方向。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;绿色和平组织：BAT可再生能源利用率远低于美国科技巨头&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;科技公司向来喜欢宣称自己的数据中心具备很高的能源效率，并融入了很多可持续发展理念。而绿色和平组织则在周二发布的《Clicking Clean》报告中对此进行了评估。这份报告对大型云计算公司和其他科技企业在可再生能源方面的表现进行了评分，同时评估了他们为推广其他环保措施所作的努力。绿色和平组织2016年表示，Facebook、苹果和谷歌仍是行业旗手，整体得分都是A。这两家企业4年前率先承诺将100%使用可再生能源。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;谷歌BigQuery增加了新的公开数据集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Stack Overflow近日宣布，通过谷歌BigQuery提供它的数据集。开发人员可以使用平常的SQL语句查询完整的Stack Overflow数据集，包括帖子、投票、标签和徽章。使用BigQuery的REST API，开发人员可以根据需要使用他们自选的工具导出数据。BigQuery上的数据集支持联合查询，开发人员使用普通的SQL就可以跨领域获得有用的见解。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2016年全球关于大数据分析领域的大事记&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2016年刚刚过去，2017年已经来临。值此辞旧迎新之际，让我们盘点一下2016年大数据分析领域发生的大事件，摸清过去一年的脉搏，展望未来一年的趋势。商业智能(BI)领袖衰落，人工智能(AI)崛起，Hadoop十岁了，Apache Spark大行其道，Flink和Beam诞生，新的数据初创公司……&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;我国大数据产业渐入佳境：2016年窄口径产值达168亿元&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在日前召开的“2016年中国大数据技术与应用年会”上，数据中心联盟大数据发展促进委员会常务副主任魏凯表示，根据信通院发布的白皮书，国内大数据的产业窄口径的产值现在已经达到168亿人民币，虽然基数不大，但增速非常快，可以说大数据产业的发展已经渐入佳境。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;内容推荐引擎Taboola宣布收购大数据公司Commerce Sciences&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Taboola是一家来自以色列特拉维夫的内容推荐公司，它与数以百计的在线出版商达成合作，推荐后者及其他一些出版商网站上的内容和广告，目的是提高用户参与度和营业收益。近日，该公司宣布收购以色列大数据公司Commerce Sciences，旨在进一步完善为用户提供的各项服务。Commerce Sciences为小型电商企业提供一个平台，让他们为自家网站添加亚马逊式的个性化服务。&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjU5iatw9uhOqS5ddN1zwzR7ljxoJVGKwHWzWlaDGz9YEiamibBJiaIVfEtr4hjrn3GpmZl4JkLfS455vw/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br/&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/p&gt;&lt;/blockquote&gt;</description>
      <pubDate>Thu, 12 Jan 2017 13:28:26 +0800</pubDate>
    </item>
    <item>
      <title>从秘书到程序员：一位德国妹子的艰难转型之路</title>
      <link>http://www.iwgc.cn/link/4294410</link>
      <description>&lt;blockquote style=" margin-bottom: 10px; padding: 10px 20px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); white-space: normal; widows: 1; font-size: 14px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;秘书与程序员，两个没有任何关联的职业，一位德国姑娘是如何实现跳跃的呢？这是&lt;a target="_blank" style="color: rgb(51, 122, 183); max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; background-color: transparent;"&gt;她的Twitter&lt;/a&gt;,希望对大家有所启发。以下为译文。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;目前，我在德国SAP担任Swift/SAP UI5/JavaScript开发人员，而曾经我却是一名秘书。大家肯定会感动吃惊，我是如何实现的？为了那些即将进入软件行业的小伙伴们，我决定把转行经历分享给大家。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;少年时期：秘书学徒——&amp;gt;被编码吸引&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;和大多数青少年一样，我非常喜欢玩电脑。在word里面写我和朋友的故事，在excel中进行各种计算，在MS Paint中画画，玩游戏。我订购了一本计算机杂志，它教会了我一切有关电脑的知识。毫无疑问，我想要从事一份与电脑有关的工作，比如卖电脑，安装和配置一些东西，这些都是我梦寐以求的工作。不幸的是，我父母并不如我般兴奋，于是，我做出了妥协。我开始成为一名秘书学徒，可以成天与电脑打交道。&lt;/p&gt;&lt;p&gt;因为工作关系，我接触到了网站创建方面的内容，并且利用这个机会维护了空手道俱乐部主页。在财务部门，我有机会把一些MS DOS程序转换成MS Excel。后来，因为欧元关系，这些软件就不再工作了。我不得不把无聊的任务重复一遍又一遍。如果可以自动化这些该多好？结果真的就实现了——MS VBA for Excel FTW，真是太令人兴奋了。&lt;/p&gt;&lt;p&gt;工作期间，我偶然发现一系列的电脑杂志：Delphi编程。它们开始教我编程和GUI基础开发。我购买了一些这方面的书籍，正式开启了编程之路。我写了几个Delphi小程序——因为在MS Excel中做小型计算真的好无聊。6个月的系列教程结束后，我参加了一个开发者比赛：编写一个多标签编辑器。结果我赢得了比赛，前十名的奖项是一个包括所有CD-ROM的Delphi 7专业许可证，我终于可以得到一份开发工作了。可现实并没那么简单，研究招聘发现，没人要Delphi程序员。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;20岁初期：秘书+一般大学入学资格&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;学徒结束以后，我继续留在公司担任秘书一职。我着迷于我们公司的网络工作，我认识一些很酷的人在家做很多计算机工作，其中一些就是IT工作。我要是有一份正规教育就能从事这方面的工作……&lt;/p&gt;&lt;p&gt;我和好友一起报了一个夜校，选择了MS Access数据库这门课——你可能已经猜到，我用MS VBA来自动化MS Access。其他人则是用框架来构建网站，我已经做过好几次。&lt;/p&gt;&lt;p&gt;我心想：“等到这门课程结束，我获得了正规计算机教育，就可以获得一份新工作了”。后来，我还参加了一些专为女性开设的科技活动，比如访问大学、参加一些讲座，在这个过程中，我能够与正在学习计算机技术的女孩交谈，这些正是我想要的。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;20多岁：兼职学习、获得IT工作&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;最后，我找到了一所可以兼职学习的应用科技大学（University of Applied Sciences）。它并不是100%的纯计算机科学，还包括网络和自动化工程、大量的信号传输、手机等——但也包含了编程方面的基础知识，如OOP、算法与数据结构、数据库、软件工程、模型……关键是，这些课程是可以兼职学习的。我整个星期都在工作，每周二、周五和整个周六来听课。一边担任秘书工作，一边学习技术知识是一件非常酷的想法。但因为基础薄弱和技术空白，我很难吸收所有的知识，也因此不得不投入大量的时间来填补知识空白。&lt;/p&gt;&lt;p&gt;我辞掉工作并搬到了学习所在的城市。因为缺乏IT工作经验，我很难获得一份相关工作。幸运的是，我获得了奖学金——但我仍然想工作！通过同学关系，我了解了SAP，而他也是SAP内部项目的项目经理。&lt;/p&gt;&lt;p&gt;我获得了一份项目助理的工作，但我仍然或多或少的是一个秘书。这是一个非常好的经验积累机会，我学会了整个的ERP和CRM流程协作、培训、创建培训材料、测试E2E流程、做了许多旅程、维护翻译并且帮忙维护各个阶段推广的工作。&lt;/p&gt;&lt;p&gt;两个月以后，我问老板是否可以成为一名开发人员。他回答了是。梦想成真了，一个非常有经验的开发同事担任我的导师。这是一个非常伟大的时刻！在2010年，我真正实现成为一名开发者的目标，两年后，我又完成了硕士研究。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugYTAYxJHlIsEvsbjOK6v1RGRB6RzPicTJ2q8kdGvD9u9sctHhjHzQEWYukbibHN6oavyABic8xjyAbg/0?"/&gt;&lt;/p&gt;&lt;center style=" max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; "&gt;2012年取得硕士学位&lt;/center&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;“捷径” vs. “艰辛之路”&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;从秘书到软件开发工程师，我花了好几年时间。因为秘书工作让我很少有时间去学习这方面知识，所以，我不得不花3年时间去上大学，利用业余时间学习，这是非常耗时且需要付出巨大的努力。我的大部分假期都在做项目，学士学位/硕士论文和考试准备等。没有任何技术背景的我，入门是极其困难的，所以，我的学习之路是艰难的。&lt;/p&gt;&lt;p&gt;现在，互联网上有大量的计算机科学和编码教程，每个人都可以成为开发者。还有大量的开发者训练营，只要8到12周即可成为一名开发者。只要你想从事这个职业，这些快速入门都是非常棒的入门方法。它们主要教你如何编写代码，而不是一些理论课程，比如软件工程、算法和数据结构、模式、数据库等计算机方面的理论知识。而大公司一般都要求接受正规教育，爬越高，要求也会越多。大学虽然不会教你如何编码，但是会传授一些永恒客观的基础知识。在整个艰难转行中，我学到了各种各样的知识，因此，我从未感到后悔。&lt;/p&gt;&lt;h3 style=" margin-top: 20px; margin-bottom: 10px; font-size: 24px; max-width: 100%; box-sizing: border-box; white-space: normal; widows: 1 ; ; ; ; ; ; ; ; "&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;正如上面所描述的，只要你愿意花时间和精力，切换职业就不是问题。下面是我推荐的一些快速成为开发者的学习网站，不妨试试：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style=" margin-bottom: 20px; max-width: 100%; box-sizing: border-box; font-size: 16px; white-space: normal; widows: 1; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;li&gt;&lt;p&gt;Codecademy是一个免费的学习平台&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Codeschool和Treehouse是付费的，它们也都很棒&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Github也是非常棒的学习分享&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;最后，用这样一句话结束这篇文章：只要我们有勇气追求，所有的梦想都可以成真——Walt Disney。&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;原文：SAP社区&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者：Denise Nepraunig&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;翻译：Daisy&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Wed, 11 Jan 2017 17:16:09 +0800</pubDate>
    </item>
    <item>
      <title>百分点“数据隧道”玩转大数据平台实时数据复制</title>
      <link>http://www.iwgc.cn/link/4294411</link>
      <description>&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;实时数据复制技术在银行、电信、保险、政务和电商等领域应用非常广泛。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/K97zBXUIORssNRG8f3IQF5ndZ1Q5BWny718UlqybbXRjO5bWnqiaMQyo6bYScPwIH811hibN0IDc5DibqD6mWZLLA/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;比如银行领域的收单业务涉及收单行、银行卡组织及发卡行的数据同步。收单行的数据需要传输到银行卡组织，再由银行卡组织传输给发卡行。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果收单业务不能做到这几点，则会出现建设银行的POS机只能刷建设银行的卡，招商银行的POS机只能刷招商银行的卡的情况。或者用户刷卡完毕后，商家需要电话询问收单行用户是否有足够余额，收单行再去询问银行卡组织，银行卡组织再去询问发卡行。这样需要消耗大量设备、人力和时间，造成用户体验下降，挫伤用户的用卡积极性。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;比如小汽车违章处理业务需要在全车各地车管所同步违章记录和处理情况等数据，便于驾驶人在全国各地处理。这些业务场景均需要数据及时、可靠和稳定的进行传输和交换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果小汽车违章处理业务不能做到这几点，则驾驶人只能去违章地或车辆登记地处理，对于异地违章处理成本极高。电商系统中的用户分析业务需要从大量的分表中提取用户数据，同步到大数据平台进行分析，其业务量非常大，传统的数据抽取对业务系统影响极大。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在以上的业务场景中，数据交换涉及异地、异质和异构等因素影响。异地指数据库往往们于不同的数据中心，涉及可靠性、安全性和稳定性的影响。异质指不同的数据库类型，涉及底层存储和处理技术差异的影响；异构指不同的数据库结构，涉及数据重构的影响，而且很多需求都是在系统上线后产生的，很多原因决定不能对应用系统进行大量重构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，实时数据交换的困难非常大，那么，我们应该如何解决呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;“数据隧道”&lt;/section&gt;&lt;section&gt;&lt;section&gt;1&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们在实践中，用了新的思路来解决这些问题。百分点“数据隧道”就像石油管道一样，石油源源不断地从油井流向各地，而不用使用轮船、火车和汽车等进行运输。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/K97zBXUIORsV1PrJZLSmq3bhib0ovTZhJ5q66hcgWFDTiaJnUGF6ln0bxAzYMh9UeP8PWcHjoJbkYKCE5NmPjmicw/0?"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“数据隧道&lt;span&gt;”&lt;/span&gt;技术的目标是通过简单配置即可完成&lt;span&gt;MySQL&lt;/span&gt;、&lt;span&gt;Oracle&lt;/span&gt;、&lt;span&gt;SQL Server&lt;/span&gt;和&lt;span&gt;DB2&lt;/span&gt;等数据库的增量数据捕获任务，传输给外部系统完成数据的实时和批量消费，满足极高的一致性、及时性和可靠性的数据接口传输要求。&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/K97zBXUIORsV1PrJZLSmq3bhib0ovTZhJosk2YPKVaKZNPefF660wqwicAXRRnJpFlvR7reyycLSG2fWZINuHia2Q/0?"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;“数据隧道&lt;span&gt;”&lt;/span&gt;整体架构图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;具体来说，目前百分点“数据隧道”支持MySQL、Oracle和SQL Server的日志提取，实时复制到外部数据库、Kafka和Hive等系统。对于后端数据消费，百分点“数据隧道”可以提供实时应用、实时流处理、闪回查询、快照表处理和拉链表处理的支持，为实时数据复制、实时数据处理、ODS和数据仓库提供便利。后续将通过一个用户案例来介绍“数据隧道”如何满足用户的数据交换需求。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/K97zBXUIORsV1PrJZLSmq3bhib0ovTZhJGDhT6mWibtHGISGRDopJicMXYldKzutXvC222TyicatTNHXVZLLhdwutw/0?"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对比传统做法，“数据隧道”具有的系统优势体现在以下几个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/p6Vlqvia1UiczdxM52HlkJOl4iaW4RavE2WAHOu9PIIOgkTVJnmICxEB62nJ4gxgcN2tQOB6qgIiatxcGgy1icO1ejg/0?"/&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据接入无需开发，大大缩减项目工时和风险&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&amp;nbsp;&lt;span&gt;数据传输的一致性、及时性和可靠性极强&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过数据库日志提取变更，侵入性小，开销极低&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持MySQL、Oracle和SQL Server主流版本的数据接入&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持实时复制到Kafka和Hive系统，方便实时和批量数据消费&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持自定义插件实现到任意缓存、消息队列和数据库的复制&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持自定义函数实现数据的任意重构&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;自动化实现历史数据迁移&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;自动化实现目标库表结构生成&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持库级、表级和行级并行复制&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持MySQL DDL审计&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;适用于ODS、DW和实时数据消费等场景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;支持Hive闪回查询、快照表处理和拉链表处理&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/K97zBXUIORsV1PrJZLSmq3bhib0ovTZhJMtfLBB3Mop5ia6oU81un1MaQpa4N7ntfGHKYRfEXiamGiaA1264Gz5MoA/0?"/&gt;&lt;strong&gt;&lt;span&gt;“数据隧道&lt;span&gt;”Pipeline&lt;/span&gt;架构图&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;用户案例&lt;/section&gt;&lt;section&gt;&lt;section&gt;2&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;某银行拥有1亿用户，用户数据由分布式关系数据库来承载，采用库分表方式进行管理。该银行期望对用户数据进行分析，以推进企业的精细化管理水平，同时对整个数据分析项目有如下要求：&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1.&amp;nbsp;用户数据量比较大，数据采集不能对业务系统性能产生影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 数据库采用分库分表方式进行存储，数据采集要考虑到数据分片的影响，并且数据分片间需要保证强一致性，防止出现分析数据异常。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.&amp;nbsp;数据采集必须兼容大数据平台，尽可能避免手工编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.&amp;nbsp;用户期望实时处理和批量处理相结合，满足不同的业务场景。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;该银行的用户由自主研发的CRM系统来管理。新用户注册则新增用户表记录，用户资料变更则更新用户表相关记录，用户注销则删除用户表相关记录。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;用户实时分析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实时分析截止至今日、月初的新增、净增和累计用户数，其中新增用户数为该系统新注册用户，净增用户数为新增用户数与注销用户数差值，累计用户数为系统当前所有用户数。该案例中新增用户数由INSERT行数计算，注销用户数由DELETE行数计算，净增用户数为新增用户数减注销用户数，累计用户数则由上一日累计用户数加净增用户数得出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Time :&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;源数据库发生该事件的时间，即Commit的时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Latency :&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;源数据库变更到提交入Kafka的时间延迟。&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Seqno :&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;系统对源数据库事务的顺序编号。&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;EventID :&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;系统对&lt;/span&gt;&lt;span&gt;源数据库事务的事件起始位编号。&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Row :&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;某事务内影响的行的顺序编号，如Seqno为1的事务中有一笔Insert插入1条数据，一笔Update更新到2条数据，最后一笔Delete删除到3条数据，则Row从1到6分别代表这6行的变更序号。&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Action :&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;INSERT、UPDATE、DELETE、CREATE_TABLE、DROP_TABLE等，其中INSERT、UPDATE和DELETE所有数据库均适用，其它类Action则与相关数据库有关，Oracle暂时没有其它类Action。&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Before和After :&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;对于DELETE事件，Before块填充数据，无After块。对于INSERT事件，无Before块，After块填充数据。对于UPDATE事件，Before块填充更新前的值，After块填充更新后的值。&lt;/span&gt;&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;INSERT块&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing="0" cellpadding="0" width="648"&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;td width="606" valign="top" style="padding: 0px 7px; word-break: break-all; border-color: windowtext; max-width: 100%; word-wrap: break-word !important; box-sizing: border-box !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Time": "2014-10-10 13:50:52.0",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Latency": 0,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Seqno": 1,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "EventID": "my:46460573",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Row": 1,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Schema": "CRM",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Table": "USER",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Action": "INSERT",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "After": {&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "ID": "1",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Name": "Jim",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Birthday": "1988-10-09 19:48:10.656",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Company": "Baifendian",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Money": "8000"&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;}&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;UPDATE块&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;table cellspacing="0" cellpadding="0" width="648"&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;td width="606" valign="top" style="padding: 0px 7px; word-break: break-all; border-color: windowtext; max-width: 100%; word-wrap: break-word !important; box-sizing: border-box !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Time": "2015-10-10 13:50:52.0",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Latency": 0,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Seqno": 2,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "EventID": "my:56460573",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Row": 1,&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Schema": "CRM",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Table": "USER",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Action": "UPDATE",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Before": {&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "ID": "1",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Name": "Jim",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Birthday": "1988-10-09 19:48:10.656",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Company": "Baifendian",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Money": "8000"&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; },&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; "After": {&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "ID": "1",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Name": "Jim",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Birthday": "2015-10-09 19:48:10.656",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Company": "Baifendian",&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Money": "10000"&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;}&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong&gt;&lt;span&gt;实时复制&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kafka Applier&lt;/span&gt;&lt;span&gt;配置：&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing="0" cellpadding="0" width="648"&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;td width="606" valign="top" style="padding: 0px 7px; word-break: break-all; border-color: windowtext; max-width: 100%; word-wrap: break-word !important; box-sizing: border-box !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;# Kafka applier configuration.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms=com.continuent.tungsten.replicator.applier.KafkaApplier&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.dataSource=global&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.zkConnect=172.24.4.18:2171/kafka&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.kafkaBroker=192.24.4.10:9092,192.24.4.11:9092,192.24.4.12:9092&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.kafkaSerializer=kafka.serializer.StringEncoder&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;# kafkaTopicPrefix value can be Baifendian.Input. which is categoried by organization unit or system or both.&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.kafkaTopicPrefix=cdc.&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;# kafkaTopicRotationInterval value can be 1d(Rotate every day),6h(Rotate every 6 hours),10m(Rotate every 10 minutes) or empty(Never rotate)&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.kafkaTopicRotationInterval=1d&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong&gt;&lt;span&gt;流式处理&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;百分点&lt;span&gt;“&lt;/span&gt;数据隧道&lt;span&gt;”&lt;/span&gt;直接将数据库变更数据复制到&lt;span&gt;Kafka&lt;/span&gt;，&lt;span&gt;Storm&lt;/span&gt;或&lt;span&gt;Flink&lt;/span&gt;基于&lt;span&gt;Kafka&lt;/span&gt;内的变更数据实时计算新增用户、净增用户、注销用户和累计用户数。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;用户离线分析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分析每日用户新增、净增和累计用户数，其中新增用户数为该系统新注册用户，净增用户数为新增用户数与注销用户数差值，累计用户数为系统当前所有用户数。该案例中新增用户数由&lt;span&gt;INSERT&lt;/span&gt;行数计算，注销用户数由&lt;span&gt;DELETE&lt;/span&gt;行数计算，净增用户数为新增用户数减注销用户数，累计用户数则由上一日累计用户数加净增用户数得出。&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实时复制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;百分点&lt;span&gt;“&lt;/span&gt;数据隧道&lt;span&gt;”&lt;/span&gt;可以根据事件时间按&lt;span&gt;Hive&lt;/span&gt;分区表方式实时复制数据。&lt;span&gt;HdfsApplier&lt;/span&gt;以多个&lt;span&gt;HDFS&lt;/span&gt;文件流的方式将变更数据并行写入&lt;span&gt;HDFS&lt;/span&gt;文件系统。&lt;span&gt;Hive&lt;/span&gt;使用外部表对底层数据进行查询。&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;HDFS Applier&lt;/span&gt;&lt;span&gt;配置：&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;table cellspacing="0" cellpadding="0" width="648"&gt;&lt;tbody style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;tr style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;td width="606" valign="top" style="padding: 0px 7px; word-break: break-all; border-color: windowtext; max-width: 100%; word-wrap: break-word !important; box-sizing: border-box !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;# HDFS applier configuration.&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms=com.continuent.tungsten.replicator.applier.HdfsApplier&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.dataSource=global&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsConfURI=&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsURI=hdfs://hostname:8020&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsPrefix=/user/hive/warehouse&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsUser=hdfs&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsSyncInterval=10&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsRotationInterval=1d&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsRotationTimezone=8&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.maxFDs=20&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsSchemaPrefix=&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.hdfsTablePrefix=chg_&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.fieldDelimiter=\\001&lt;/span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;replicator.applier.dbms.lineDelimiter=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;strong&gt;&lt;span&gt;离线计算&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过以下查询可以获得用户表任意时点的快照。基于此原理，百分点&lt;span&gt;“&lt;/span&gt;数据隧道&lt;span&gt;”&lt;/span&gt;可以支持闪回查询、数据快照、数据拉链等应用。由于&lt;span&gt;“&lt;/span&gt;数据隧道&lt;span&gt;”&lt;/span&gt;可精确捕获数据的操作时间和操作类型，因此新增用户、净增用户、注销用户和累计用户数的计算也变得非常简单。&lt;span&gt;&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;select * from (&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;select row_number() over(partition by userid order by seqno desc, row desc) as R,*&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;from USER where time &amp;lt;= '2016-01-01 00:00:00') snapshot&lt;o:p style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;where R= 1 and action &amp;lt;&amp;gt; 'D';&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总 结&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;百分点&lt;span&gt;“&lt;/span&gt;数据隧道&lt;span&gt;”&lt;/span&gt;能够实时提取&lt;span&gt;MySQL&lt;/span&gt;、&lt;span&gt;Oracle&lt;/span&gt;和&lt;span&gt;SQL Server&lt;/span&gt;的数据变更，并且可以对变更数据进行实时转换，再应用于数据库系统、大数据系统、消息系统、缓存系统和实时计算，满足银行、电信、保险、政务和电商等领域的数据交换需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;作者介绍：王高飞&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，百分点高级研发工程师，郑州大学管理学学士，擅长数据仓库建设、实时和批量数据复制技术及大数据技术。曾就职于亚信国际，独立完成挪威电信在丹麦和匈牙利市场的ODS和数据仓库项目架构设计，深得客户认可。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Wed, 11 Jan 2017 17:16:09 +0800</pubDate>
    </item>
    <item>
      <title>“鲜点”资讯：Apache Eagle成Apache基金会顶级项目，2016开源中国软件TOP100</title>
      <link>http://www.iwgc.cn/link/4294412</link>
      <description>&lt;p&gt;“鲜点”资讯网罗新鲜要闻，每日为你呈现&lt;span&gt;大数据和云计算领域&lt;/span&gt;热点新闻。本次内容播报如下（&lt;span&gt;文中所有蓝色字体可点击底部的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;获取详情链接&lt;/span&gt;）：&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;雅虎时代的终结：48亿美元“卖身”后更名Altaba&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月10日消息称，雅虎周一向美国证券交易委员会（SEC）提交的文件，在美国通信巨头Verizon斥资48亿美元收购雅虎核心资产交易完成后，首席执行官玛丽莎·梅耶尔（Marissa Mayer）将退出公司董事会。同时，雅虎剩下的业务，其主要包括阿里巴巴股份以及与雅虎日本的合作，将作为独立的公司继续经营。根据文件显示，这家公司将更名为Altaba。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;亚马逊悄然收购AI安全公司harvest.ai 增强云服务安全&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;据外媒TechCrunch报道，亚马逊的云服务部门AWS很可能已经悄然收购了网络安全公司harvest.ai。另据Geekware报道，收购价格可能是1900万美元，相比之下，该公司到目前仅融资271万美元。收购完成后，团队的12名员工会搬往亚马逊西雅图总部。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2016 年度开源中国新增开源软件排行榜 TOP 100&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2016 年度开源中国新增开源软件排行榜 TOP 100 新鲜出炉！本榜单根据 2016 年开源中国新收录的 3030 款软件的关注度和活跃度排名，整理出其中最受欢迎的 100 款软件，它们在一定程度上预示着最新业界流行趋势。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;中国云谷呼和浩特盛乐园区成亚洲最大云计算基地&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;据呼和浩特市科技局，中国电信云计算内蒙古信息园目前已经完成投资22亿元，总建筑面积达16.5万平方米，具备1.4万个机架、约30万台标准服务器的云计算资源能力及办公、餐饮、住宿等服务保障能力。百度、阿里、腾讯、网易、搜狗、上海证券、内蒙古银行等政府、企事业50多家单位入驻园区，成为中国电信IDC集约运营的标杆、8+2+X战略的北方核心，亚太地区最大的云计算基地。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Gartner分析：云计算压制传统软硬件销售量&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Gartner公司云计算分析师Ed Anderson表示，企业在云计算方面的支出正在快速增长，增长速度甚至超越整体IT支出，这无疑给传统硬件和软件供应商带来挑战。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;高德2016交通报告出炉：华为加班最狠 360周边最堵&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月0日下午，高德地图联合交通运输部科学研究院、清华大学戴姆勒可持续交通研究中心、阿里云、清华同衡规划设计研究院、第一财经数据新媒体等机构正式发布了《2016年度中国主要城市交通分析报告》。报告通过大数据分析得出了加班最多的城市及加班最晚的科技公司。从城市维度看，北上广深位居前四，其余6座城市分别是：成都市、杭州市、重庆市、苏州市、武汉市和东莞市。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;IBM联手华尔街将区块链技术带到CDS市场&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;1月10日据彭博社报道，华尔街最大的后台处理服务正在同IBM合作，使用区块链技术升级对信用违约互换（CDS）的处理方式。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;福布斯全球最具影响力人物：BAT创始人再聚首&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;美国《福布斯》杂志近日公布“2016年全球最具影响力人物”榜单，中国共有7人登榜。其中BAT掌门人李彦宏、马云、马化腾包揽三席，占据半壁江山，这也是三位大佬连续第三年稳坐榜单。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;2017年SaaS首个收购案将超11亿美元&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2016年的SaaS平台风起云涌，而在2017年的第一个月，我们收到的SaaS平台首条新闻却是一桩收购案，虽然双方尚未公布具体的收购金额，但是据知情人士透露，收购金额将超过11亿美元。这场收购收获了摩根士丹利、Evercore、巴克莱和投资银行Jefferies等多方的关注和支持。&lt;/p&gt;&lt;ul style=" box-sizing: border-box; margin-bottom: 20px; color: rgb(51, 51, 51) ; ; ; ; ; ; ; ; " class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;a target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); background-color: transparent;"&gt;Apache 基金会宣布 Apache Eagle 成为顶级项目&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2017年1月10日, 由超过350个开源项目及创新计划，全部由开发志愿者，治理志愿者及孵化志愿者组成的Apache软件基金会（ASF），宣布Apache Eagle已经从Apache孵化器项目毕业，正式升级成为顶级项目（TLP），这标志着该项目的社区和产品依照ASF精英管理的流程和原则顺利运作。&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注以下公众号，获取更多精彩内容吧！&lt;/span&gt;&lt;/p&gt;&lt;center style=" box-sizing: border-box; color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjVWBtXScrEH3Xwt5Otria753Y8oL9WA2UsNIibPNSCibYjOYpZjoeTmHR86IibG09Yzd6TLb2OOPdboMw/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;blockquote style=" box-sizing: border-box; padding: 10px 20px; margin-top: 10px; font-size: 14px; border-left-width: 5px; border-left-color: rgba(128, 128, 128, 0.0745098); color: rgb(51, 51, 51) ; ; ; ; ; ; ; "&gt;&lt;p&gt;CSDN大数据分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点，提供云计算和大数据技术、平台、实践和产业信息等服务。&amp;nbsp;&lt;br/&gt;CSDN云计算作为云计算领域权威的自媒体，实时提供国内外云计算、大数据、虚拟化、数据中心、OpenStack、CloudStack、Hadoop、Spark、Container、人工智能、机器学习、智能算法等新闻、观点、技术和实践案例。&lt;/p&gt;&lt;/blockquote&gt;</description>
      <pubDate>Wed, 11 Jan 2017 17:16:09 +0800</pubDate>
    </item>
    <item>
      <title>微信小程序的编程模式</title>
      <link>http://www.iwgc.cn/link/4278951</link>
      <description>&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;本文为&lt;/span&gt;&lt;span&gt;《程序员》2017年1月期&lt;/span&gt;&lt;span&gt;原创文章，未经允许请勿转载，更多精彩文章请订阅&amp;nbsp;&lt;/span&gt;&lt;span&gt;2017 年《程序员》&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;导读：&lt;/strong&gt;&amp;nbsp;“轻芒小程序+”是由轻芒团队提出的小程序解决方案，它将替内容创业者免费搭建属于自己的微信小程序。在进行“轻芒小程序+”和其他小程序应用开发的过程中，本文作者与其团队对当前正火热的小程序开发有了更为深度的理解与认识，进而有了本文。（这里还有一篇满载真诚的&lt;span&gt;微信小程序开发&lt;/span&gt;干货，点击查阅。）&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;文中蓝色字体均可&lt;span&gt;阅读原文&lt;/span&gt;获取详情。&lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;从小程序诞生伊始，就有很多人开始研习其机理与特点，从源代码或整体架构的角度已经有很多不错的文章会令人受益。但理论是一回事，真正理解小程序，还需要实践，才能进一步理解其背后的想法，与已有平台的异同，以及如何去适应它，做出更有趣的小程序。&lt;/p&gt;&lt;p&gt;理解开发平台的特性，一个不错的角度就是从编程模式入手，看在这个平台上开发，需要如何书写和组织自己的代码，进而搞清楚三个问题：&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="margin-top: 1.2em; margin-bottom: 1.2em; padding-left: 2em; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;数据如何获取；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;界面如何呈现；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;交互如何传导。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;换而言之，就是从 MVC（Model-View-Controller）的视角去拆解这个平台的特性，从而理解其开发有何特点。&lt;/p&gt;&lt;h2 style="margin-top: 1.3em; margin-bottom: 1em; font-weight: bold; font-size: 1.4em; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; widows: 1; border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;数据如何获取&lt;/h2&gt;&lt;p&gt;程序的本质，可说就是数据的呈现和加工。所以，看一个客户端开发平台的基本能力，首先就要看能把哪些数据放在上面处理，有哪些局限？如果缺少了必要的数据获取方式，那对于开发者而言，巧妇也难为无米之炊。&lt;/p&gt;&lt;p&gt;从这点看，小程序提供的数据获取方式非常丰富，大概涵盖：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-top: 1.2em; margin-bottom: 1.2em; padding-left: 2em; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过 HTTPS 请求去服务端获取数据。&lt;/strong&gt;支持 HTTPS 是最基本的，小程序对 HTTPS 有限制，除了要求通信协议是 HTTPS，出现的域名必须提前预设之外，还将应用层协议限定到了 JSON 格式下。这一点，可能比任何一个已有客户端平台都更为严苛。站在小程序的平台角度来看，通过这样的协议规定，对应用中流动的数据有了更强的管控能力；而对于开发者而言，则需要花些时间去调整自己的服务协议以便适应小程序的要求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;可以在本地文件系统上存取数据。&lt;/strong&gt;小程序提供了丰富的 API 供开发者在手机系统上存取文件。可用本地文件来做缓存、状态记忆等，为开发提供了便利。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;可以读写设备中的一部分信息。&lt;/strong&gt;小程序开放了一些 API，帮助开发者获得设备上的基本信息，比如手机型号、屏幕尺寸、网络状态等。较为有价值的是可以选择获取手机上的图片等多媒体文件，这给做图像应用提供了可能；并且，它还提供了罗盘、重力感应器、地理位置等信息，对开发者理解用户所处的环境大有裨益。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;从上面的介绍不难看出，小程序中的数据获取方式，和一般浏览器提供的相仿（也就是和 HTML5 应用能获取的信息），比原生的客户端更局限一些，但对于绝大多数的应用而言足够用了。&lt;/p&gt;&lt;p&gt;除此之外，小程序提供了微信生态中的一些数据，比如账号信息等。这对于微信庞大的生态而言，只是非常小的一部分数据，但却是开发小程序应用中最值得利用的数据。&lt;/p&gt;&lt;p&gt;举个例子，在其他平台上，如果想要获取微信的账号信息，需要通过一次用户授权。假如用户暂时不想提供，则会使程序呈现“未登录”状态，给整个服务的展开带来困难。而在小程序中，只要用户点开，就意味着完成了授权，开发者可以直接读取到小程序的账号信息，并同步到自己的服务端作为该用户的身份标识，从而实现“始终登录”的状态，使得后续服务可以更好地提供。&lt;/p&gt;&lt;p&gt;一份可行的示例如下：&lt;/p&gt;&lt;p&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;&lt;span&gt;// 先调用登录接口，获得请求码&lt;br/&gt;&lt;/span&gt;wx.login({
 &amp;nbsp; &amp;nbsp;success: &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;(res)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 获取到请求码，继续请求用户的基本信息&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; code = res.code
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;wx.getUserInfo({
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;success: &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;(res)&lt;/span&gt; &lt;/span&gt;{ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 获取到了加密的用户信息，去服务端解密并存储&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; userData = res.encryptedData &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; iv = res.iv
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;wx.request({
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;url: &lt;span&gt;'https://my_account/...'&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data: {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;code: code,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;user_data: userData,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;iv: iv
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;success: &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(res)&lt;/span&gt; &lt;/span&gt;{ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 在服务器上，解析并生成自己的账号验证信息&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; user = res.data.user &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; token = res.data.token &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 并且还可以存在本地存储上，供下次打开使用&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;wx.setStorage({
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key: &lt;span&gt;'my_token'&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data: token
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;})
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;})
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;})
 &amp;nbsp; &amp;nbsp;}
});&lt;/code&gt;&lt;/pre&gt;&lt;h2 style="margin-top: 1.3em; margin-bottom: 1em; font-weight: bold; font-size: 1.4em; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; widows: 1; border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;界面如何呈现&lt;/h2&gt;&lt;p&gt;小程序刚发布的时候，一片人开始惊呼 HTML5 的时代就要到来了，因为小程序在界面层使用了 HTML/CSS/JavaScript 这套 HTML5 的技术栈。但很快，随着聪明的程序员们对小程序的理解进一步加深，就发现小程序所说的 HTML/CSS/JavaScript 和 HTML5 中的完全不是一回事，其差异基本等同于 Java 和 JavaScript。&lt;/p&gt;&lt;p&gt;在小程序中，和 HTML 对应的是 WXML，保留下来的只有 HTML 的概念，而传统的&lt;code style="margin-right: 0.15em; margin-left: 0.15em; padding-right: 0.3em; padding-left: 0.3em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; display: inline; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(248, 248, 248);"&gt;&amp;lt;div&amp;gt;&lt;/code&gt;、&lt;code style="margin-right: 0.15em; margin-left: 0.15em; padding-right: 0.3em; padding-left: 0.3em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; display: inline; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(248, 248, 248);"&gt;&amp;lt;a&amp;gt;&lt;/code&gt;标签都完全被抛弃了。和 Facebook 的 React 类似，小程序引入了自己的 HTML 标签，它和&amp;nbsp;&lt;code style="margin-right: 0.15em; margin-left: 0.15em; padding-right: 0.3em; padding-left: 0.3em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; display: inline; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(248, 248, 248);"&gt;&amp;lt;article〉&lt;/code&gt;、&lt;code style="margin-right: 0.15em; margin-left: 0.15em; padding-right: 0.3em; padding-left: 0.3em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; display: inline; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(248, 248, 248);"&gt;&amp;lt;section&amp;gt;&lt;/code&gt;&amp;nbsp;这样的语义标签不同，小程序中的标签更像是传统客户端开发中的组件（或者叫控件），每个组件都有自己背后的职能和使用方式。比如：如果需要展示图片，就只能用标签，其他的都无法承载。而如果需要提供可选的文本，则只能使用&lt;code style="margin-right: 0.15em; margin-left: 0.15em; padding-right: 0.3em; padding-left: 0.3em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; border: 1px solid rgb(234, 234, 234); border-radius: 3px; display: inline; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(248, 248, 248);"&gt;&amp;lt;text&amp;gt;&lt;/code&gt;标签等。&lt;/p&gt;&lt;p&gt;这样的方式带来最大的问题就是传统的 HTML 页面都无法在小程序中呈现（而小程序正好，没提供类似 WebView 的客户端控件）。比如有大量的内容网站，其文章内容都是存储为一个 HTML 片段，无法直接呈现在小程序中。如果需要展示，一个思路是构建中间服务，将 HTML 转译成一种更简单利于渲染的中间格式数据，然后，在小程序端把中间格式的数据转换成小程序的标签进行呈现。我们在做“轻芒生活”的时候，正好设计并实现了一个转义服务，将任意一个 HTML 页面转换成中间格式（内部名是 RAML），解决了内容性 HTML 页在小程序上的呈现问题，如图 1 所示。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/eL7YiacLdzwp5YUIX7M6bEdPCf04AxpicoNlVCpOZeX4zQYpReO9M4SkwMiamMACV1ribNDKNvdic8pzricqUPs8tTtw/640?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;span&gt;图 1 &amp;nbsp; 在小程序中呈现 HTML 内容页&lt;/span&gt;&lt;/p&gt;&lt;p&gt;和 HTML 相比，小程序的 WXSS 算是比较完整地保留了 CSS 的特征，这一点还蛮出乎意料。WXSS 在语义上最大的不同，一是在于它支持了相对尺寸单位 rpx（responsive pixel），每 750rpx 等价于当前设备的屏幕宽度，它的引入，把那种繁复的屏幕尺寸适配变得简单了不少。而和 CSS 的另一个不同是它更像传统控件样式用法，不支持 CSS3 那么多的选择器，使用中更多的是一个控件一个 class。&lt;/p&gt;&lt;p&gt;小程序中虽然支持 ES6 标准的 JavaScript，但窗口级的 JavaScript 却完全被废弃掉了，开发者无法用 JavaScript 去调用 window、document 对象来修改界面元素完成逻辑。小程序中的 JavaScript 其实直接对应 Node.js 的用法，用来完成后台业务逻辑，而不是直接控制交互。小程序的这个设计，使其可以用到 Virtual Dom 的方式来渲染界面，让界面数据更新时的性能优化成为可能，但付出的代价就是少了窗口级 JavaScript 的那层胶水黏合，使得很多功能的开发变得极其呆板和繁复。&lt;/p&gt;&lt;h2 style="margin-top: 1.3em; margin-bottom: 1em; font-weight: bold; font-size: 1.4em; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; widows: 1; border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;交互如何传导&lt;/h2&gt;&lt;p&gt;所谓交互的传导，是当用户和界面发生交互时，平台框架通过何种方式告诉业务层，并将处理后的变化呈现回交互界面上。如果把 WXSS + WXML 绘制的页面看成“前端”，把 JavaScript 撰写的业务逻辑看成“后端”，你会发现，小程序的前后端交互特别像 Web 1.0 的模式，前端把交互行为封装成事件（event）发送到后端，后端处理完成后，通过 setData 方法将数据回传到前端，如图 2 所示。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/eL7YiacLdzwp5YUIX7M6bEdPCf04AxpicoicUqckaqTEnnXbLAXOjDxiatvhFkT0WWwzDrxYpFAjWIBRv93yPI3Www/0?"/&gt;&lt;br/&gt;&lt;span&gt;图 2 &amp;nbsp;小程序的交互传导&lt;/span&gt;&lt;/p&gt;&lt;p&gt;小程序提供的 Events，基础的有类似单击、长按、触摸、滑动等，对于视频播放器等控件，还有监听播放、暂停等。这些事件比较基础，没有更高级的手势、多点触控等相关事件，但也还足够让开发者具体了解用户的输入，进而做出响应。 而小程序给界面响应的唯一方式，是通过 Page 中的 setData API 对界面上的数据进行更新，小程序会比较两次调用期间数据的变化，来决策需要更新哪部分的交互界面。&lt;/p&gt;&lt;p&gt;举个实际的例子，假设开发者需要做一个滑动切换页面的效果，在小程序中该如何实现？首先，是将变量数据引入渲染页面：&lt;/p&gt;&lt;p&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;&lt;span&gt;&amp;lt;&lt;span&gt;view&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;=&lt;span&gt;"page"&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;"current-page"&lt;/span&gt; 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;style&lt;/span&gt;=&lt;span&gt;"left:{{distance}}rpx;"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;bindtouchstart&lt;/span&gt;=&lt;span&gt;"movePage"&lt;/span&gt; &lt;span&gt;bindtouchcancel&lt;/span&gt;=&lt;span&gt;"movePage"&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;bindtouchmove&lt;/span&gt;=&lt;span&gt;"movePage"&lt;/span&gt; &lt;span&gt;bindtouchend&lt;/span&gt;=&lt;span&gt;"movePage"&lt;/span&gt;&amp;gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到，distance 是一个模版参数，它初始值为 0，表示移动的距离。通过 bindtouchstart 等函数绑定上 JavaScript 的方法，将事件回传。&lt;/p&gt;&lt;p&gt;&lt;code class="" style="margin-right: 0.15em; margin-left: 0.15em; padding: 0.5em; max-width: 100%; font-size: 0.85em; font-family: Consolas, Inconsolata, Courier, monospace; overflow: auto; border-radius: 3px; border: 1px solid rgb(204, 204, 204); color: rgb(51, 51, 51); box-sizing: border-box !important; word-wrap: break-word !important; display: block !important; background: rgb(248, 248, 248);"&gt;movePage: &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;span&gt;(event)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &amp;nbsp; &amp;nbsp;&lt;span&gt;var&lt;/span&gt; status = {
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;needUpdate: &lt;span&gt;false&lt;/span&gt;,
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;distance: &lt;span&gt;0&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;} &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 处理各种事件，计算是否需要刷新，和移动方向&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span&gt;if&lt;/span&gt; (&lt;span&gt;"touchstart"&lt;/span&gt; === event.type) {&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;// 开始计算移动&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...
 &amp;nbsp; &amp;nbsp;} &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;"touchend"&lt;/span&gt; === event.type) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;// 判定移动的距离是否足够.&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...
 &amp;nbsp; &amp;nbsp;} &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;"touchcancel"&lt;/span&gt; === event.type) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;// 被打断就算了.&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...
 &amp;nbsp; &amp;nbsp;} &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;"touchmove"&lt;/span&gt; === event.type) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;// 计算移动距离&lt;/span&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...
 &amp;nbsp; &amp;nbsp;} &amp;nbsp; &amp;nbsp;&lt;br/&gt; &amp;nbsp; &amp;nbsp;&lt;span&gt;// 根据移动的距离，来更新界面&lt;/span&gt;
 &amp;nbsp; &amp;nbsp;&lt;span&gt;if&lt;/span&gt; (status.needUpdate) {&lt;br/&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span&gt;this&lt;/span&gt;.setData({
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;distance: status.distance
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;})
 &amp;nbsp; &amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;而在 JavaScript 一端，则捕获事件、计算偏移量，然后将新的偏移量送到前端界面。&lt;/p&gt;&lt;p&gt;从这里可以看到，小程序的交互是典型的单向模式，前端回传事件，数据单向地推到前端，而不是通过类似“变量”、“状态”等方式来告知。这样的模式下，开发者对界面变化的控制往往不可能太精准，整个核心都依赖于小程序对两次数据变化的 diff 计算，这将会最终影响整个交互的性能。&lt;/p&gt;&lt;h2 style="margin-top: 1.3em; margin-bottom: 1em; font-weight: bold; font-size: 1.4em; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; widows: 1; border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;小程序开发模式的特点&lt;/h2&gt;&lt;p&gt;至此，我们可以来总结一下小程序开发的一些特点了。整体来看，小程序是借了 HTML5 的技术栈，行了传统客户端开发的模式，这一点和 React 等平台会比较相近，可以视为 HTML5 的一个新分支。&lt;/p&gt;&lt;p&gt;从设计思路看，小程序做了大量的“限制”，最大的限制是开发者其实无法通过 JavaScript 这样的编程语言直接对界面进行控制，而是通过数据驱动来间接实现。这对于缺少开发经验的人而言，是有益的事情，因为降低了理解的门槛，但对于复杂的应用来说，这个模式开发起来比较呆板，往往是一个变化多处修改，增加了理解代码的成本。&lt;/p&gt;&lt;h2 style="margin-top: 1.3em; margin-bottom: 1em; font-weight: bold; font-size: 1.4em; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; widows: 1; border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;开发小程序的坑&lt;/h2&gt;&lt;p&gt;开发小程序的日子，也是一个踩坑的历程。简单总结，小程序中的坑大概来自这几个方面：&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="margin-top: 1.2em; margin-bottom: 1.2em; padding-left: 2em; max-width: 100%; color: rgb(62, 62, 62); font-size: 16px; line-height: 25.6px; white-space: normal; widows: 1; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Web 兼容性。&lt;/strong&gt;小程序引入了 HTML/CSS 作为技术栈，并在其基础上进行了定制。很多开发中的问题都来自于“定制”，因为你并不知道哪部分是被定制，哪部分是被继承了。比如，你用了一个 CSS 语法，发现并不生效，或者效果和浏览器中的不一样，于是，只能换一个写法，结果很有可能又会继续发现，这个新的写法可能效果也不对，于是只能继续尝试，如此反复，可能会消耗大量的时间。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;开发环境不稳定。&lt;/strong&gt;小程序的开发，是基于微信自制的 IDE，但当下，IDE 的稳定性、易用性都非常差，时常出现 Bug，你以为是程序写错了，但其实，是 IDE 的 Bug，重启一下 IDE，一切都迎刃而解了。于是，当你日后开发小程序时出现某种异样，先重启 IDE，再看问题还在不在，也许是种更节省时间的方式。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;缺少真机调试环境。&lt;/strong&gt;小程序的运行时其实就是微信，微信几乎没提供任何真机上的调试工具（也不能说完全没有，有一个只能在真机上瞪着眼睛看的日志框）。在模拟器中调试好的程序，可能在真机上运行起来并不如预期。比如，我们碰到过真机上白屏、位置错乱、动画效果不对，以及 Android 上至今还不能运行等问题。这对于稍微复杂的程序而言，颇为梦魇，想做一些细粒度的调整和优化，基本只能靠猜。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;闭源且缺少学习资料。&lt;/strong&gt;小程序整体上是闭源状态（虽然模拟器和 IDE 部分可以通过反编译来看），且缺少足够的学习资料。如果一旦碰到控件如何使用、为什么这么用不对之类的问题，就只能靠不停地试来解决，也需要耗费大量时间。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;简而言之，作为一个新的开发平台，微信小程序从本身的稳定性，以及配套的工具链上都不算完善。对于早期开发者而言，需要耗费额外的精力去尝试和探索，但这也许就是一个新平台的价值和代价吧。&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;作者简介： 范怀宇，轻芒联合创始人，毕业于清华大学，前豌豆荚技术负责人，专注于移动开发十余年，曾出版《Android 开发精要》。爱研习好代码和设计，相信好的产品能改变生活，好阅读乐分享。&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;责编：唐小引，技术之路，共同进步。欢迎技术投稿、给文章纠错，请发送邮件至tangxy@csdn.net。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riakAD0e0pibwG8wrO3qbP5O2EZR7IQAvLJJjo7cAa4tGWZSPfuicNDYHrw/0?wx_fmt=gif"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjX8cRiaTgvtibCyiaicEGUuc6riaJHic2zOwqWtdgNnLqPSlL5ok8ibCnnD3El9EjQYnG0LdCaD9otCg2wIg/640?wx_fmt=jpeg"/&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;【长按识别立即关注】&lt;/strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;strong&gt;&lt;span&gt;品读之后，&lt;/span&gt;&lt;span&gt;愿有所获。&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</description>
      <pubDate>Tue, 10 Jan 2017 17:22:52 +0800</pubDate>
    </item>
  </channel>
</rss>
