<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>AlgorithmDog</title>
    <link>http://www.iwgc.cn/list/5566</link>
    <description>AlgorithmDog 讲述机器学习和系统研发的轶事,希望把这些事讲得生动有趣.每周日更新哦.欢迎关注.</description>
    <item>
      <title>Akka 使用系列之二: 测试</title>
      <link>http://www.iwgc.cn/link/4417592</link>
      <description>&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 通过上一篇文章，我们已经大致了解怎么使用 Akka，期待细致用法。这篇文章将介绍如何用 Akka-testkit 对 Akka 程序进行测试。&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3677" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjGru1BXTVuciaicTpHxCB5nvU5WBx2KueTDD7MnXlHZCbyCgUMokhibnaA/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;并行程序是最难调试的程序类型之一，因此做好测试是相当重要的事情。为了减轻 Akka 的程序的测试难度, Akka 官方专门开发了一个测试工具包 Akka-testkit。&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;1 Actor 的测试需求&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对于一个 Actor, 我们要测什么呢？不同的文章有不同的说法，比如&lt;a style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;http://rerun.me/2014/09/29/akka-notes-logging-and-testing/&amp;nbsp;&lt;/a&gt;就把 Actor 测试需求分为:1)发送消息给 Actors, 2)测试内部状态，3）测试日志和 4)带参数 Actor 的测试。我个人认为，对于一个 Actor, 我们要测的有三个方面：1）Actor 接收消息之后，是否返回正确的消息，2）Actor 接收消息之后，是否正确地改变内部状态和执行内部行为，3）Actor 接收消息之后，是否正确地发消息给后续 Actor。当然这是我的一家之言，有什么不完善的地方，欢迎大家讨论。下面是一个简单的示例图。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3758" style="   ; ; ; ; ; ; ;   "&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjrmOAiczwj8FdRXOlOArrClG3Gm9np2X2BYRqpcoH1JTxcESbeoibdppw/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;下面是 studentActor 的一段代码，反应了 studentActor 接受到早上时间消息之后的动作，包括：1）给环境或者闹钟回应“关闭闹钟”，2）内部变量 DayInSchool 加 1，3）向老师发送问题消息。这段代码将包含所有要测试的元素，后面我们将示例怎么用 Akka-testkit 测试这段代码。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjiafIBsGUXpgBqic2rzCFPaPQuBWeVsU3KojLialwN7xB8YNhXcXbFx1vg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;2 不适用的 Scalatest&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Scalatest 是 Scala 开发者们最常见的测试工具，其用法非常简便。下面是一个 Scalatest 的简单示例。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjYNhNs0NNOokRM8M88xHG8U0x0BDzllM4GJBS9icGyjNeavQKxl8bt2A/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但是我们无法使用 scalatest 测试 Actor。原因在于：1）Scalatest 无法捕捉被测 Actor 回应的消息，因此无法测试被测 Actor 是否正确回应消息; 2）Scalatest 无法获取被测 Actor 的内部状态，因此无法测试被测 Actor 内部状态的改变是否正确; 3) Scalatest 无法捕捉被测 Actor 对外发送的消息，因此无法测试被测 Actor 对外发送的消息是否正确。因此有必要针对 Akka 开发一套测试工具, Akka-testkit 测试包应运而生。&lt;br/&gt;&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;3 Akka-testkit 的使用&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Maven 项目要使用 Akka-testkit，需要在 pom.xml 文件中加入 akka-testkit 包，如下所示。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjFnlrEOzw2KIzt2Ykfc7TZkIdq6lJrYxbRyibQMIgNxEks3ibdhNTfJeQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;然后编写单元测试的代码，其基本范例如下。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjrvmyp34SHF6ZyIM3op6jqYFCwJga8bOaqs8eJBFyzQqibXDMh3QuIzQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Akka-testkit 的主要工具包括, 1) testProbe 用于测试 Actor 回应和发送消息，testActor 用于简便情况下测试 Actor 回应消息，和 2) testActorRef 用于测试 Actor 内部状态的改变。&lt;br/&gt;&lt;/p&gt;&lt;h4 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 24px;"&gt;&lt;span&gt;3.1 回应消息的测试&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对于被测 Actor 是否正确地回应消息，可以用 testProbe 测试。首先将 testProbe 给被测 Actor 发送消息，再看 testProbe 是否接受到期望的回应消息。下面是一个示例。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjR2BpdZPV78mMdDeFOjdvX0ibRnvuUqZjt1auHx6ic99973Su2BQIiaeAw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;除了使用 testProbe 之外，Akka-testkit 还提供一种简便方法: 使用 testActor。 如果测试类实现特质 ImplicitSender， studentActorRef ! 7.toLong 发送给 studentActor 的消息 7.toLong 就是从 testActor 来的。然后在调用 expectMsg("关闭闹钟") 就可以测试 testActor 是否收到 studentActor 回应消息 "关闭闹钟" 了。具体代码如下所示。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjEIDEU9hyqtHDZwVcIOnJBOaNSmVsgq8YSvgHpqBaicEEKDlwm8oVnoA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我们可以看出，使用 testActor 的代码比使用 testProbe 的简便。但是，一个东西的用法越是简便，功能便越缺失。testActor 最大的缺失是只能接受被测 Actor 发来的一个回应消息。比如下面的代码就会报错。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjqWdvVbCbw21qicPSN5ds2mgBDuC8PN0uSKicpEs0hicnuNfJFXSGKfCsg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 24px;"&gt;&lt;/h4&gt;&lt;h4 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 24px;"&gt;&lt;span&gt;3.2 内部状态的测试&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对于被测 Actor 内部状态的改变，可以用 TestActorRef 进行测试。TestActorRef.underlyingActor 可以探测被测 Actor 的内部，用于测试被测 Actor 内部状态是否符合预期。 下面是一个示例。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjOVD4neibiaaLpYNbVUuo9xzyEDboM8KJlWLQv3icpej658GJFzdG9o70g/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;h4 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 24px;"&gt;3.3 发出消息的测试&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对于被测 Actor 是否正确地发出消息，也可以用 testProbe 测试。首先将 testProbe 设置为被测 Actor 发出消息的目标，然后让被测 Actor 发出消息，再看 testProbe 是否接受到期望的消息。下面是一个示例。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjLdeic3NRuYxvzIjJSJoAhic0La0uiaibmcmQrDROWnurAaevlJicccDNmhw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;4 总结&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Akka-testkit 是 Akka 官方推出的 Akka 测试工具包，用于减轻 Akka 程序的测试难度。Akka-testkit 的主要工具包括, 1) testProbe 用于测试被测 Actor 回应和发送消息，testActor 用于简便情况下测试被测 Actor 回应消息，和 2) testActorRef 用于测试被测 Actor 内部状态的改变。完整的项目代码已经上传到&amp;nbsp;&lt;a style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;/a&gt;https: //github. com/ AlgorithmDog/ AkkaUsageLearner&amp;nbsp;上了。被测 Actor 是 org. algorithmdog. akkalearning. StudentActor, 测试类是 org. algorithmdog. akkalearning. StudentActorTest。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这篇文章难产了很长一段时间，对不住支持我的读者们。对不起。Akka 和 Actor 模型对我来说是一个全新的东西，花了比较多的时间学习和熟悉。学习之后，觉得第一篇写得太不清楚了，准备重构第一篇。对于这篇文章质量，我个人比较满意的，甚至敢认为这篇文章应该是国内关于 Akka-testkit 最清楚的文章之一（ps:大牛们轻喷）。最后欢迎关注我的公众号，每两周的更新就会有提醒哦~&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-2360" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvMSOOpWZIN8qK9coArqicAKjfkDr54GgJUqVdiaicS6q17X9zqLMHNQObMZiaBM6xyS6s2TiaxZQER9xTw/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jan 2017 08:49:06 +0800</pubDate>
    </item>
  </channel>
</rss>
