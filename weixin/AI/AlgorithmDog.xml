<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>AlgorithmDog</title>
    <link>http://www.iwgc.cn/list/5566</link>
    <description>AlgorithmDog 讲述机器学习和系统研发的轶事,希望把这些事讲得生动有趣.每周日更新哦.欢迎关注.</description>
    <item>
      <title>在 maven 库中上传你自己开发的第三方包</title>
      <link>http://www.iwgc.cn/link/3886652</link>
      <description>&lt;header class="post-header" style=" margin-bottom: 30px; color: rgb(17, 17, 17) ; ; ; ; ; ; ; "&gt;&lt;h1 class="post-title" itemprop="name headline" style="margin-bottom: 15px; font-size: 42px; letter-spacing: -1px; line-height: 1;"&gt;&lt;/h1&gt;&lt;p&gt;本文是同事 bourneli 的作品。&lt;span&gt;&lt;span&gt;bourneli&amp;nbsp;&lt;/span&gt;出身于湖北武汉。23岁时离开武汉，独自一人来到深圳实习并工作，一直到现在。目前在腾讯工作，花名 &lt;/span&gt;&lt;strong&gt;bourneli。&amp;nbsp;&lt;/strong&gt;&lt;span&gt;可点击原文链接&lt;/span&gt;&lt;span&gt;查看作者博客。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;将开发的通用库上传到mvn库中，其他同学使用会比较方便。本文记录相关配置，以及此过程中遇到的坑。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style=" margin-bottom: 15px; font-size: 32px; color: rgb(17, 17, 17) ; ; ; ; ; "&gt;设置全局setting.xml&lt;/h2&gt;&lt;p&gt;settingsx.xml需要添加的记录&lt;/p&gt;&lt;/header&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOJ0wNq4SPH7fegJRxzeyOHGibzriboYZtNbEMeh4wpic62snepWm46oPR6OKyW7Aso4N4o4lDaAiaPFQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;主要是设定两个 server 的 id 和账号，snapshots 用于调试，releases 用于发布。前者版本可以覆盖，后者版本发布后无法覆盖，版本号必须变化。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="margin-bottom: 15px; font-size: 32px;"&gt;设置组件 pom.xml&lt;/h2&gt;&lt;p&gt;组件pom.xml需要添加的记录如下&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOJ0wNq4SPH7fegJRxzeyOHmfwYu40JicqsGxrvViaOOUnbTjLXOyq3k8QoLdUPvFvuzKm0a7CsXiaJg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这里的 &lt;strong&gt;release &lt;/strong&gt;和 &lt;strong&gt;snapshots &lt;/strong&gt;与 setting.xml 对应的。这里的组件 pom.xml 就是要上传到maven库供其他人使用的 pom.xml。设置上面的配置有两个目的：一个是通过id找到账号，第二个是告诉 mvn 上传的具体目录。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="margin-bottom: 15px; font-size: 32px;"&gt;设置调用组件的项目pom.xml&lt;/h2&gt;&lt;p&gt;现在就可以类似引用其他项目一样，添加下面的 dependency&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOJ0wNq4SPH7fegJRxzeyOHUa4HicN8o6WcCLKtfoic76Sjg8libRClpBusljicFYb4sxr9UzKib0BUMzw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;但是，还不够，还需要指定第三方 maven 库的配置，否则还是找不到，如下&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOJ0wNq4SPH7fegJRxzeyOHC6r8tuGGXdWOmRFjyy1ERjJ18abx14aLYyricY2aSASDfPLn1fFOnCg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;其实，上面的 repository 也可以设置在 setting.xml 中。上面两个 pom.xml 中的url需要保持一致。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="margin-bottom: 15px; font-size: 32px;"&gt;部署 snapshots 包&lt;/h2&gt;&lt;p&gt;使用 mvn 命令部署，需要将本地 maven 配置 path 路径，这样可以在命令行中执行 mvn 命令。可直接用Intellij目录下plugin中的maven3/bin目录即可。&lt;/p&gt;&lt;p&gt;上传本地snapshots包到maven服务器，命令如下&lt;/p&gt;&lt;p&gt;mvn deploy:deploy-file -e&lt;/p&gt;&lt;p&gt;-DgroupId=your.package.id&lt;/p&gt;&lt;p&gt;-DartifactId=your_package_name&lt;/p&gt;&lt;p&gt;-Dversion=1.0.0-SNAPSHOT&lt;/p&gt;&lt;p&gt;-Dpackaging=jar&lt;/p&gt;&lt;p&gt;-Dfile=target/your_package_name-1.0.0-SNAPSHOT.jar&lt;/p&gt;&lt;p&gt;-DrepositoryId=snapshots&lt;/p&gt;&lt;p&gt;-Durl=http://[repo_host]/nexus/content/repositories/thirdparty-snapshots&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;我将上面的命令放到一个脚本中，并且将脚本放到pom.xml同级目录。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="margin-bottom: 15px; font-size: 32px;"&gt;部署releases包&lt;/h2&gt;&lt;p&gt;如果是上传 release 版本，可以使用类似下面的命令，&lt;/p&gt;&lt;p&gt;mvn deploy:deploy-file -e&lt;/p&gt;&lt;p&gt;-DgroupId=your.package.id&lt;/p&gt;&lt;p&gt;-DartifactId=your_package_name&lt;/p&gt;&lt;p&gt;-Dversion=0.0.1&lt;/p&gt;&lt;p&gt;-Dpackaging=jar&lt;/p&gt;&lt;p&gt;-Dfile=target/your_package_name-0.0.1.jar&lt;/p&gt;&lt;p&gt;-DrepositoryId=releases&lt;/p&gt;&lt;p&gt;-Durl=http://[repo_host]/nexus/content/repositories/thirdparty&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;配置时，参数&lt;strong&gt;-DrepositoryId&lt;/strong&gt;写成了&lt;strong&gt;release&lt;/strong&gt;，少写了一个&lt;strong&gt;s&lt;/strong&gt;，导致一直报401错误，这个错误比较有迷惑性。之前一直以为是密码错误，所以一直没有找到问题的根源，后来在yunshandi同学的帮助下，发现原来是打错了id。releases版本，一个版本号只能对应一个jar包，不能覆盖，这样保证版本的稳定性，如果尝试覆盖releases版本，会报400错误。&lt;/p&gt;&lt;p&gt;上传完毕后，可以在maven站点上搜素到相关的包。并且可以在其他工程中应用，非常方便。&lt;/p&gt;&lt;p&gt;最后，感谢同事 AlgorithmDog 和 TEG 同事yunshandi。&lt;/p&gt;&lt;p&gt;再次提醒&lt;span&gt;点击原文链接&lt;/span&gt;&lt;span&gt;查看作者博客哦。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 12 Dec 2016 19:31:30 +0800</pubDate>
    </item>
    <item>
      <title>不平衡数据的数据处理方法</title>
      <link>http://www.iwgc.cn/link/3875982</link>
      <description>&lt;p&gt;在机器学习中，不平衡数据是常见场景。不平衡数据一般指正样本数量远远小于负样本数量。如果数据不平衡，那么分类器总是预测比例较大的类别，就能使得准确率达到很高的水平。比如正样本的比例为 1%，负样本的比例为 99%。这时候分类器不需要经过训练，直接预测所有样本为负样本，准确率能够达到 99%。经过训练的分类器反而可能没有办法达到99%。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvN2giaCm3q5B4uzgiciblLNLa69u40MorBiaBkaDmicia15D7D10EcAIH1Sx7bdYNakySecXEZhOJQn5JxA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;对于不平衡数据的分类，为了解决上述准确率失真的问题，我们要换用 F 值取代准确率作为评价指标。用不平衡数据训练，召回率很低导致 F 值也很低。这时候有两种不同的方法。第一种方法是修改训练算法，使之能够适应不平衡数据。著名的代价敏感学习就是这种方法。另一种方法是操作数据，人为改变正负样本的比率。本文主要介绍数据操作方法。&lt;/p&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;1. 欠抽样方法&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;欠抽样方法是针对多数的负样本，减少负样本的数量，反而提高整体 F 值。最简单的欠抽样方法是随机地删掉一些负样本。欠抽样的缺点很明显，就是会丢失负样本的一些重要信息，不能够充分利用已有的信息。&lt;/p&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;2. 过抽样方法&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;欠抽样方法是针对少数的正样本，减少正样本的数量，从而提高整体 F 值。最简单的过抽样方法是简单地复制一些正样本。过抽样的缺点是没有给正样本增加任何新的信息。过抽样方法对 SVM 算法是无效的。因为 SVM 算法是找支持向量，复制正样本并不能改变数据的支持向量。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3551" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvN2giaCm3q5B4uzgiciblLNLa6s6Gpm2BstseZWtnGH9FSJpWDbBZfk8amxwx1JBVmB4JrOnUib91D2pQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;改进的过抽样方法则采用加入随机高斯噪声或产生新的合成样本等方法。根据不同的数据类型，我们可以设计很巧妙的过抽样方法。有&lt;a style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;博客&lt;/a&gt;&amp;nbsp;在识别交通信号问题上就提出了一个新颖的方法。交通信号处理识别是输入交通信号的图片，输出交通信号。我们可以通过变换交通信号图片的角度等方法，生成新的交通信号图片，如下所示。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3553" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvN2giaCm3q5B4uzgiciblLNLa6kQK4JIhC9rPy4mSzvica2EWfXfJ3a1h4ictL94OTPlTKjzIb92CJ1s0A/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;3. SMOTE&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;Synthetic Minority Over-sampling Technique (SMOTE) 算法是一个最有名的过抽样的改进。SMOTE 是为了解决针对原始过抽样方法不能给正样本增加新信息的问题。算法的思想是合成新的少数类样本，合成的策略是对每个少数类样本a，从它的最近邻中随机选一个样本b，然后在a、b之间的连线上随机选一点作为新合成的少数类样本。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3549" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvN2giaCm3q5B4uzgiciblLNLa6l89SjbURdFXL5iakZP04CRZMQFYFxT57j3oVClTAT93MV6wTGhiapqXA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;4. 总结&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style=" border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em; ; ; ; ; "&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;从理论上来说，SMOTE 方法要优于过抽样方法，过抽样方法要优于欠抽样方法。但是很多工业界场景，我们反而采用欠抽样方法。工业界数据量大，即使正样本占比小，数据量也足够训练出一个模型。这时候我们采用欠抽样方法的主要目的是提高模型训练效率。总之一句话就是，有数据任性。。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 11 Dec 2016 23:46:06 +0800</pubDate>
    </item>
  </channel>
</rss>
