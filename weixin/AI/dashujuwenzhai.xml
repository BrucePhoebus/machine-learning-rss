<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>大数据文摘</title>
    <link>http://www.iwgc.cn/list/723</link>
    <description>数据使金融、互联网、IT发生巨变又颠覆着医疗、农业、餐饮、房地产、交通、教育、制造乃至人类本身.旨在普及数据思维,传播数据文化,我们为您精选各行业大数据相关案例、资讯,帮您紧跟科技前沿,手握数据思维、...</description>
    <item>
      <title>科技网红Siraj最新油管视频：如何用4分钟搭建神经网络</title>
      <link>http://www.iwgc.cn/link/4440883</link>
      <description>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleI94npqDgLqp4Tibicf5M6iajMFRpPQ0stLiaQx7E4GOEkLKibA1dWgjD60Q/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;大数据文摘字幕组作品，转载要求见文末&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;制作团队 | 蒋晔 苏国睿 过倩霏 takeshi luan&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;没错！大数据文摘字幕组成立啦！！！&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们专注一切炫酷的科技、技术前沿类视频&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你热爱和志同道合的小伙伴一起做一些有趣的事&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你的英文不错，又懂一点视频&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快加入我们吧～&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在大数据文摘后台回复“&lt;span&gt;志愿者&lt;/span&gt;”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;了解如何加入大数据文摘字幕组！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前几天《大数据文摘》为大家介绍了&lt;/span&gt;&lt;span&gt;Youtube&lt;/span&gt;&lt;span&gt;科技网红&lt;/span&gt;&lt;span&gt;Siraj&lt;/span&gt;&lt;span&gt;的《&lt;/span&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647305&amp;amp;idx=1&amp;amp;sn=8afa4ea9019c5aaef70a1311afdf505d&amp;amp;chksm=bd4dcada8a3a43cce2cfbd2ddcf4605ac3bc5db6cbc90d9df1d3c7ccb53c2586297ba1dc3324&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647305&amp;amp;idx=1&amp;amp;sn=8afa4ea9019c5aaef70a1311afdf505d&amp;amp;chksm=bd4dcada8a3a43cce2cfbd2ddcf4605ac3bc5db6cbc90d9df1d3c7ccb53c2586297ba1dc3324&amp;amp;scene=21#wechat_redirect"&gt;&lt;span&gt;Tensorflow+40&lt;/span&gt;&lt;span&gt;行代码识别手写数字图像&lt;/span&gt;&lt;/a&gt;&lt;span&gt;》的视频，得到一致好评。今天，我们继续推介风趣幽默的&lt;/span&gt;&lt;span&gt;Siraj&lt;/span&gt;&lt;span&gt;的另一个超火的视频&lt;/span&gt;&lt;strong&gt;&lt;span&gt;《&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;分钟内搭建神经网络》&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;神经网络是当前受到极大关注，主要因为运算能力加强及数据量增加。神经网络获得了很多成果，无论是图像识别还是歌曲生成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在这个视频中，&lt;/span&gt;Siraj&lt;span&gt;介绍了神经网络搭建三步走的方法&lt;/span&gt;&lt;strong&gt;&lt;span&gt;：&lt;/span&gt;1) &lt;span&gt;搭建，&lt;/span&gt;2) &lt;span&gt;训练，&lt;/span&gt;3)&lt;span&gt;测试&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;Siraj&lt;span&gt;使用&lt;/span&gt;Python,&lt;span&gt;加载&lt;/span&gt;numpy&lt;span&gt;工具库，然后创建了&lt;/span&gt;S&lt;span&gt;函数，把任意值映射到&lt;/span&gt;0&lt;span&gt;到&lt;/span&gt;1&lt;span&gt;之间。然后初始化数据并转化为矩阵，以行代表训练实例，以列代表神经元。然后创建输出数据集。接下来，创建突触矩阵，通过使用突触的不同权重性质，不断地通过循环训练，获得预测和预期数值之间的错误率。让错误率通过一系列的运算获得误差，从而协助我们更新突触的权重，不断在迭代中降低错误率。这就是所谓的梯度下降法。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想看到详细的解释，直戳以下视频吧：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;iframe class="video_iframe" data-vidtype="1" allowfullscreen="" frameborder="0" height="417" width="556" data-src="https://v.qq.com/iframe/preview.html?vid=m0368zbbetn&amp;amp;width=500&amp;amp;height=375&amp;amp;auto=0"&gt;&lt;/iframe&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;志愿者介绍&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;回复“&lt;span&gt;志愿者&lt;/span&gt;”了解如何加入我们&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW7EricWmMSPngArRibTxMp3BibyDXibkl4FzrmkszIJeQWJv8cEaUWBlJJSp7R1KhK88tZeib8VafXw9Q/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxVcZFiajibX8xiczQBElrs06xoHyxT4icFr2qoeXfl0jCzZvslHdMTzibzRI5Spn97F6ASltEAUZ6TxiaicQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW7EricWmMSPngArRibTxMp3BLpgR0iakVice16veGwfjsReKbBPOYtAbibbRQ2SsQgicoI9TISLgyT3enQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxUuwVeHzeXps8IRDdQ45qyvPJY7pacsZTILO3awWicR1mn4icIN9iar8QkLhxPxicFJlZQyRb89Tjr28w/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;往期精彩文章&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Youtube爆火视频 | 用TensorFlow+40行代码识别手写数字图像&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647305&amp;amp;idx=1&amp;amp;sn=8afa4ea9019c5aaef70a1311afdf505d&amp;amp;chksm=bd4dcada8a3a43cce2cfbd2ddcf4605ac3bc5db6cbc90d9df1d3c7ccb53c2586297ba1dc3324&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647305&amp;amp;idx=1&amp;amp;sn=8afa4ea9019c5aaef70a1311afdf505d&amp;amp;chksm=bd4dcada8a3a43cce2cfbd2ddcf4605ac3bc5db6cbc90d9df1d3c7ccb53c2586297ba1dc3324&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wc7YNPm3YxWBvsbicQJtME9FkQRWr0tEiamDEzaLHdpHegzPeNKyRRH88Cr6JmuoQvOkQJQ3n9SRC8z3aa0FVzvQ/0?wx_fmt=gif"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/640?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 07:28:15 +0800</pubDate>
    </item>
    <item>
      <title>利用 Scikit Learn的Python数据预处理实战指南</title>
      <link>http://www.iwgc.cn/link/4440884</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9vuDB7e424KUppqQHGvOcr0VnEuP4tAdK9aZZQutST9l8QdbJhzSMYQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;大数据文摘作品，转载要求见文末&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编译团队|姚佳灵 吴怡雯 黄念&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;本文主要关注在Python中进行数据预处理的技术。学习算法的出众表现与特定的数据类型有密切关系。而对于没有经过缩放或非标准化的特征，学习算法则会给出鲁莽的预测。像XGBoost这样的算法明确要求虚拟编码数据，而决策树算法在有些情况下好像完全不关心这些！&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简而言之，预处理是指在你将数据“喂给”算法之前进行的一系列转换操作。在Python中，scikit-learn库在sklearn.preprocessing下有预装的功能。有更多的选择来进行预处理，这将是我们要探索的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;读完本文，你将具备数据预处理的基本技能并对其有更深入的理解。为了方便起见，我附上了进一步学习机器学习算法的一些资源，并且为更好地掌握这些概念，设计了几个小练习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;可用数据集&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文中，我使用了部分的贷款预测数据，缺失观测值的数据已被移除（&lt;span&gt;需要数据的读者朋友，请在评论区留下电邮地址，我们会把数据发给你——译者注&lt;/span&gt;）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;备注：贷款预测问题中，测试集数据是训练集的子集。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，让我们从导入重要的包和数据集开始。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;#&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span&gt;导入&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span&gt;pandas&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; import pandas as pd&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;#&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span&gt;导入训练用的数据集&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_train=pd.read_csv('X_train.csv')&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; Y_train=pd.read_csv('Y_train.csv')&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;#&amp;nbsp;&lt;/span&gt;&lt;/em&gt;&lt;em&gt;&lt;span&gt;导入测试数据集&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_test=pd.read_csv('X_test.csv')&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; Y_test=pd.read_csv('Y_test.csv')&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;对我们的数据集进行仔细观察。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; print (X_train.head())&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Loan_ID Gender Married Dependents Education Self_Employed&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;15&amp;nbsp;&amp;nbsp; LP001032&amp;nbsp;&amp;nbsp; Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp; Graduate&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;248&amp;nbsp; LP001824&amp;nbsp;&amp;nbsp; Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Yes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp; Graduate&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;590&amp;nbsp; LP002928&amp;nbsp;&amp;nbsp; Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Yes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp; Graduate&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;246&amp;nbsp; LP001814&amp;nbsp;&amp;nbsp; Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Yes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2&amp;nbsp; Graduate&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;388&amp;nbsp; LP002244&amp;nbsp;&amp;nbsp; Male&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Yes&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0&amp;nbsp; Graduate&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; No&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ApplicantIncome&amp;nbsp; CoapplicantIncome&amp;nbsp; LoanAmount&amp;nbsp; Loan_Amount_Term&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;15&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4950&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 125.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 360.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;248&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2882&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1843.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 123.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 480.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;590&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3000&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3416.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 56.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 180.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;246&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 9703&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 0.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 112.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 360.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;388&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;2333&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2417.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 136.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 360.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Credit_History Property_Area&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;15&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Urban&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;248&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Semiurban&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;590&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Semiurban&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;246&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Urban&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;388&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Urban&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;特征缩放&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;特征缩放是用来限制变量范围的方法，以让它们能在相同的尺度上进行比较。这是在连续变量上操作的。让我们输出数据集中所有连续变量的分布。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; import matplotlib.pyplot as plt&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_train[X_train.dtypes[(X_train.dtypes=="float64")|(X_train.dtypes=="int64")]&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .index.values].hist(figsize=[11,11])&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9hriagAc2OS8QBO96W7jMeB9pllDcaRmbVGTLU5amNRXCOVBUd225KTQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;理解以上图示后，我们推断ApplicantIncome（申请人收入） 和CoapplicantIncome（共同申请人收入） 有相似的尺度范围(0-50000$)，LoanAmount（贷款额度） 以千为单位，范围在0 到 600$之间，而Loan_Amount_Term（贷款周期）与其它变量完全不同，因为它的单位是月份，而其它变量单位是美元。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果我们尝试应用基于距离的算法，如KNN，在这些特征上，范围最大的特征会决定最终的输出结果，那么我们将得到较低的预测精度。我们可通过特征缩放解决这个问题。让我们实践一下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资料：阅读这篇关于KNN的文章获得更好的理解。&lt;/span&gt;&lt;span&gt;（https://www.analyticsvidhya.com/blog/2014/10/introduction-k-neighbours-algorithm-clustering/）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们在我们的数据集中试试KNN，看看它表现如何。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 初始化和拟合一个KNN模型&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; from sklearn.neighbors import KNeighborsClassifier&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; knn=KNeighborsClassifier(n_neighbors=5)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; knn.fit(X_train[['ApplicantIncome', 'CoapplicantIncome','LoanAmount',&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'Loan_Amount_Term', 'Credit_History']],Y_train)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# Checking the performance of our model on the testing data set&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 检查我们的模型在测试数据集上的性能&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; from sklearn.metrics import accuracy_score&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,knn.predict(X_test[['ApplicantIncome', 'CoapplicantIncome',&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'LoanAmount', 'Loan_Amount_Term', 'Credit_History']]))&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Out : 0.61458333333333337&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们得到了大约61%的正确预测，这不算糟糕，但在真正实践中，这是否足够？我们能否将该模型部署于实际问题中？为回答该问题，让我们看看在训练集中关于Loan_Status（贷款状态） 的分布。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; Y_train.Target.value_counts()/Y_train.Target.count()&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Out :&amp;nbsp;Y 0.705729&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;N 0.294271&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Name: Loan_Status, dtype: float64&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大约有70%贷款会被批准，因为有较高的贷款批准率，我们就建立一个所有贷款都通过的预测模型，继续操作并检测我们的预测精度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;gt;&amp;gt; Y_test.Target.value_counts()/Y_test.Target.count()&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Out : &amp;nbsp;Y 0.635417&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; N 0.364583&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Name: Loan_Status, dtype: float64&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;哇！通过猜测，我们获得63%的精度。这意味着，该模型比我们的预测模型得到更高的精度？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这可能是因为某些具有较大范围的无关紧要的变量主导了目标函数。我们可以通过缩小所有特征到同样的范围来消除该问题。Sklearn提供了MinMaxScaler 工具将所有特征的范围缩小到0-1之间，MinMaxScaler 的数学表达式如下所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a style="color: rgb(8, 14, 20); text-decoration: underline; font-size: 15px; line-height: 22.5px; font-family: 宋体, SimSun;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy92xNre3KAM8iaMjCnaaKBdFI9La57uTLRGqDFvYogYvrlAEp5PUpbWHQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们在我们的问题中试试该工具。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 导入MinMaxScaler并初始化&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; from sklearn.preprocessing import MinMaxScaler&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; min_max=MinMaxScaler()# Scaling down both train and test data set&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_train_minmax=min_max.fit_transform(X_train[['ApplicantIncome', 'CoapplicantIncome',&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'LoanAmount', 'Loan_Amount_Term', 'Credit_History']])&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_test_minmax=min_max.fit_transform(X_test[['ApplicantIncome', 'CoapplicantIncome',&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'LoanAmount', 'Loan_Amount_Term', 'Credit_History']])&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，我们已经完成缩放操作，让我们在缩放后的数据上应用KNN并检测其精度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;#&amp;nbsp;&lt;span&gt;在我们缩小后的数据集上拟合KNN&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; knn=KNeighborsClassifier(n_neighbors=5)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; knn.fit(X_train_minmax,Y_train)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 检查该模型的精度&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,knn.predict(X_test_minmax))&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;Out :&amp;nbsp;0.75&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;太好了！我们的精度从61%提升到了75%。这意味在基于距离的方法中（如：KNN），一些大范围的特征对预测结果有决定性作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;应当牢记，当使用基于距离的算法时，我们必须尝试将数据缩放，这样较不重要的特征不会因为自身较大的范围而主导目标函数。此外，具有不同度量单位的特征也应该进行缩放，这样给每个特征具有相同的初始权重，最终我们会得到更好的预测模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;练习1：&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尝试利用逻辑回归模型做相同的练习(参数: penalty=’l2′,C=0.01)， 并请在评论区留下缩放前后的精度。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;特征标准化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在进入这部分内容前，我建议你先完成练习1。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在之前的章节，我们在贷款预测数据集之上操作，并在其上拟合出一个KNN学习模型。通过缩小数据，我们得到了75%的精度，这看起来十分不错。我在逻辑回归模型上尝试了同样的练习， 并得到如下结果：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Before Scaling : 61%&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;After Scaling : 63%&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;缩放前：61%&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;缩放后：63%&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;缩放后的精度与我们凭猜测得到的预测精度相近，这并不是很了不起的成就。那么，这是怎么回事呢？在精度上，为什么不像用KNN一样有令人满意的提升？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资料：阅读本文&lt;/span&gt;&lt;span&gt;（https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/）&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;获得对逻辑回归更好的理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;答案在此：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在逻辑回归中，每个特征都被分配了权重或系数(Wi)。如果某个特征有相对来说比较大的范围，而且其在目标函数中无关紧要，那么逻辑回归模型自己就会分配一个非常小的值给它的系数，从而中和该特定特征的影响优势，而基于距离的方法，如KNN，没有这样的内置策略，因此需要缩放。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们是否忘了什么？我们的逻辑模型的预测精度和猜测的几乎接近。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，我将在此介绍一个新概念，叫作标准化。很多Sklearn中的机器学习算法都需要标准化后的数据，这意味数据应具有零均值和单位方差。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;标准化（或Z-score正则化）是对特征进行重新调整，让数据服从基于 μ=0 和 σ=1的标准正态分布，其中μ是均值（平均值）而σ是关于均值的标准偏差。样本的标准分数（也称为z-scores）按如下所示的方法计算：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a style="color: rgb(8, 14, 20); text-decoration: underline; font-size: 15px; line-height: 17.25px; font-family: 宋体, SimSun;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9VfiaYWEpBv0olXAibX05FSXmIpVibI4A6Tegs073s81ewibdgyyW1CNrOw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;线性模型中因子如l1，l2正则化和学习器的目标函数中的SVM中的RBF核心假设所有的特征都集中在0周围并且有着相同顺序的偏差。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有更大顺序的方差的特征将在目标函数上起决定作用，因为前面的章节中，有着更大范围的特征产生过此情形。 正如我们在练习1中看到的，没进行任何预处理的数据之上的精度是61%，让我们标准化我们的数据，在其上应用逻辑回归。Sklearn提供了尺度范围用于标准化数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 标准化训练和测试数据&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; from sklearn.preprocessing import scale&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_train_scale=scale(X_train[['ApplicantIncome', 'CoapplicantIncome',&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'LoanAmount', 'Loan_Amount_Term', 'Credit_History']])&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; X_test_scale=scale(X_test[['ApplicantIncome', 'CoapplicantIncome',&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'LoanAmount', 'Loan_Amount_Term', 'Credit_History']])&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 在我们的标准化了的数据集上拟合逻辑回归&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; from sklearn.linear_model import LogisticRegression&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; log=LogisticRegression(penalty='l2',C=.01)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; log.fit(X_train_scale,Y_train)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;# 检查该模型的精度&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,log.predict(X_test_scale))&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Out :&lt;/strong&gt;&amp;nbsp;0.75&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们再次达到缩放后利用KNN所能达到的我们最大的精度。这意味着，当使用l1或l2正则化估计时，标准化数据帮助我们提高预测模型的精度。其它学习模型，如有欧几里得距离测量的KNN、k-均值、SVM、感知器、神经网络、线性判别分析、主成分分析对于标准化数据可能会表现更好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尽管如此，我还是建议你要理解你的数据和对其将要使用的算法类型。过一段时间后，你会有能力判断出是否要对数据进行标准化操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;备注：在缩放和标准化中二选一是个令人困惑的选择，你必须对数据和要使用的学习模型有更深入的理解，才能做出决定。对于初学者，你可以两种方法都尝试下并通过交叉验证精度来做出选择。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资料：阅读本文（&lt;span&gt;https://www.analyticsvidhya.com/blog/2015/11/improve-model-performance-cross-validation-in-python-r/）&lt;/span&gt;会对交叉验证有更好的理解&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;练习2&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尝试利用SVM模型做相同的练习，并请在评论区留下标准化前后的精度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资料：阅读本文（&lt;span&gt;https://www.analyticsvidhya.com/blog/2015/10/understaing-support-vector-machine-example-code/）&lt;/span&gt;会对SVM有更好的理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;标签编码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在前面的章节里，我们对连续数字特征做了预处理。但是，我们的数据集还有其它特征，如性别（Gender）、婚否（Married）、供养人（Dependents）、自雇与否（Self-Employed）和教育程度（Education）。所有这些类别特征的值是字符型的。例如，性别（Gender）有两个层次，或者是男性（Male），或者是女性（Female）。让我们把这些特征放进我们的逻辑回归模型中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在整个数据集上拟合放逻辑回归模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log=LogisticRegression(penalty='l2',C=.01)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log.fit(X_train,Y_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;检查模型的精度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,log.predict(X_test))&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Out :&amp;nbsp;ValueError: could not convert string to float: Semiurban&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们得到一个错误信息：不能把字符型转换成浮点型。因此，这里真正在发生的事是像逻辑回归和基于距离的学习模式，如KNN、SVM、基于树的方法等等，在Sklearn中需要数字型数组。拥有字符型值的特征不能由这些学习模式来处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Sklearn提供了一个非常有效的工具把类别特征层级编码成数值。LabelEncoder用0到n_classes-1之间的值对标签进行编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们对所有的类别特征进行编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;导入&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;LabelEncoder&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;并初始化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; from sklearn.preprocessing import LabelEncoder&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; le=LabelEncoder()&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;遍历在训练和测试集中所有的公共列&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; for col in X_test.columns.values:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;只对类别变量编码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if X_test[col].dtypes=='object':&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;利用全部数据形成一个所有层次的详尽清单&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; data=X_train[col].append(X_test[col])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; le.fit(data.values)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X_train[col]=le.transform(X_train[col])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X_test[col]=le.transform(X_test[col])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们所有的类别特征都已编码。用X_train.head()可以查看更新了的数据集。我们将看下性别（Gender）在编码前后的频率分布。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Before : Male 318&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Female 66&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Name: Gender, dtype: int64&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;After :&amp;nbsp;1 318&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0 66&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Name: Gender, dtype: int64&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在我们已经完成了标签编码，让我们在同时有着类别和连续特征的数据集上运行逻辑回归模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;特征标准化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_train_scale=scale(X_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_test_scale=scale(X_test)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;拟合逻辑回归模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log=LogisticRegression(penalty='l2',C=.01)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log.fit(X_train_scale,Y_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;检查模型的精度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,log.predict(X_test_scale))&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Out : 0.75&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在可以用了。但是，精度仍然和我们从数字特征标准化之后用逻辑回归得到的一样。这意味着我们加入的类别特征在我们的目标函数中不是非常显著。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;练习3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;试试用所有的特征作为非独立变量进行决策树分类，并评论一下你得到的精度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资料：浏览本文（https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/）中关于决策树的内容以更好地理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一位有效编码（One-Hot-Encoding，主要是采用位状态寄存器来对某个状态进行编码，每个状态都有自己独立的寄存器位，并且在任意时候只有一位有效——译者注）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一位有效编码把每个带有n个可能值的类别特征转换成n个二进制特征，只有一个是有效的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大多数机器学习算法不是为每个特征设置单个权重就是计算样本之间的距离。如线性模型算法（例如：逻辑回归）属于第一类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们看一看一个来自loan_prediction数据集的例子。特征从属（Feature Dependents）有4个可能的值：0、1、2和3+，这些是编过码的，没有丢掉0、1、2和3的一般性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线性分类器中，我们就分配一个权重“W”给这个特征，这将在W*Dependents+K&amp;gt;0或相当于W*Dependents&amp;lt;K的约束下做出决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Let f(w)= W*Dependents&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让f(w)=W*Dependents&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Possible values that can be attained by the equation are 0, W, 2W and 3W. A problem with this equation is that the weight “W” cannot make decision based on four choices. It can reach to a decision in following ways:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由方程获得的可能值是0、W、2W和3W。这个方程的一个问题是权重W不能在4个选择的基础上得到。它可以用下面的方法来决定：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;•&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 所有导致同样的决定（所有的值&amp;lt;K或反之亦然）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;•&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3：2的层级分配（当f(w)&amp;gt;2W时的决策区间）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;•&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2：2的层级分配（当f(w)&amp;gt;W时的决策区间）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里我们可以看到丢失了许多不同的可能决策，比如：“0”和“2W”应该给予相同的标签，“3W”和“W”是额外的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个问题可以通过一位有效编码来解决，因为它有效地把特征“从属”的维度从1变成4，这样特征“从属”的每个值将有自己的权重。更新了的决策方程将是f'(w) &amp;lt; K。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里，f'(w) = W1*D_0 + W2*D_1 + W3*D_2 + W4*D_3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所有4个新变量有布尔型值（0或1）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同样的事发生在基于距离的方法中，如KNN。没有编码，“0”和“1”从属值之间的距离是1，在“0”和“3+”之间的距离是3，这不是所期望的，因为这两个距离应该类似。在编码后，值将有新特征（列序列是0，1，2，3+）：[1,0,0,0]和[0,0,0,1]（最初我们找到的在“0”和“3+”之间的距离），现在这个距离将会是√2。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于基于树的方法，同样的情况（在一个特征中有2个以上的值）可能在一定程度上影响输出，但是如果像随机森林的方法，若有足够深的深度，无需一位有效编码就能够处理类别变量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，让我们看下不同算法中的一位有效编码的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们创建一个逻辑回归模型用于分类，而不使用一位有效编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;我们使用的是缩放后的变量，因为我们看到在上一节中缩放会影响&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;L1&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;或&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;L2&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;的正则化算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_train_scale=scale(X_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_test_scale=scale(X_test)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;拟合逻辑回归模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log=LogisticRegression(penalty='l2',C=1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log.fit(X_train_scale,Y_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;检查模型的精度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,log.predict(X_test_scale))&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Out :&amp;nbsp;0.73958333333333337&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，我们对数据进行编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; from sklearn.preprocessing import OneHotEncoder&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; enc=OneHotEncoder(sparse=False)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_train_1=X_train&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_test_1=X_test&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; columns=['Gender', 'Married', 'Dependents', 'Education','Self_Employed',&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'Credit_History', 'Property_Area']&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; for col in columns:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;创建一个包含所有可能分类值的详尽列表&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; data=X_train[[col]].append(X_test[[col]])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; enc.fit(data)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在训练数据上拟合一位有效编码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp = enc.transform(X_train[[col]])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;用新列名把编了码的特征改为数据帧&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp=pd.DataFrame(temp,columns=[(col+"_"+str(i)) for i in data[col]&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .value_counts().index])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在并排级联中，检索值应该是相同的。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;设置与&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;X_train&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;数据帧类似的索引值&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp=temp.set_index(X_train.index.values)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;把新的一位有效编码了的变量加入训练数据帧&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X_train_1=pd.concat([X_train_1,temp],axis=1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在测试数据上拟合一位有效编码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp = enc.transform(X_test[[col]])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;把它变成数据帧并加上列名&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp=pd.DataFrame(temp,columns=[(col+"_"+str(i)) for i in data[col]&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .value_counts().index])&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;设置合适的级联索引&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; temp=temp.set_index(X_test.index.values)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;把新的一位有效编码了的变量加入到测试数据帧&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X_test_1=pd.concat([X_test_1,temp],axis=1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，让我们在一位有效编码了的数据上应用逻辑回归模型&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;标准化数据集&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_train_scale=scale(X_train_1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; X_test_scale=scale(X_test_1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;拟合逻辑回归模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log=LogisticRegression(penalty='l2',C=1)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; log.fit(X_train_scale,Y_train)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;#&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;检查模型的精度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt; accuracy_score(Y_test,log.predict(X_test_scale))&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Out : 0.75&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;到此，我们再次得到最大的精度是0.75，这是我们迄今所能得到的。在这个例子中，逻辑回归正则（C）参数是1，早前我们用的是C=0.01。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;结语&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文的目的是让你熟悉基本的数据预处理技术并对其适用性有更深入的理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些方法有用是因为算法的基本假设。这绝不是一些方法的详尽列表的堆砌。我鼓励你用这些方法尝试一下，因为它们能根据手头的问题进行大量的修改。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在我的下一篇博文中，我计划提供更好的数据预处理技术，像管道和减噪，敬请关注关于数据预处理更深入的探讨。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你喜欢本文吗？你是否采用其它不同的方式、包或库来执行这些任务？希望能在评论区与你进行交流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原文链接：https://www.analyticsvidhya.com/blog/2016/07/practical-guide-data-preprocessing-python-scikit-learn/?utm_source=feedburner&amp;amp;utm_medium=email&amp;amp;utm_campaign=Feed%3A+AnalyticsVidhya+%28Analytics+Vidhya%29&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;section&gt;&lt;p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;关于转载&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;如需转载，请在开篇显著位置注明作者和出处（转自：大数据文摘 |bigdatadigest），并在文章结尾放置大数据文摘醒目二维码。无原创标识文章请按照转载要求编辑，可直接转载，转载后请将转载链接发送给我们；有原创标识文章，请发送【文章名称-待授权公众号名称及ID】给我们申请白名单授权。未经许可的转载以及改编者，我们将依法追究其法律责任。联系邮箱：zz@bigdatadigest.cn。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;志愿者介绍&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;回复“&lt;span&gt;志愿者&lt;/span&gt;”了解如何加入我们&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxX7ictvqRejMbiacJnsjlKnn1jlvaTj1ndBPwsG7eOEp3MQBRMQ1qvlFxeCN4LI0fqHSxlGB6R5eRPw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxWFXTA3h8CiabaUUibLKJVolTkDMMpX0aczQtWdORXIlfiaXfKGl2brDyPusmqj02oPnr9U4zick7xblA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxUiaP6qewkjiatlInETHocmOPoe8gev4eImVthGz1CX2Y8V9yc7ErbXFILeNVJsOT7sheAqcjvXUibaw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;往期精彩文章&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;strong&gt;&lt;span&gt;利用Python进行深度学习的完整入门指南(附资源)&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647090&amp;amp;idx=1&amp;amp;sn=964592abd76ed569c24658aa2de198d3&amp;amp;chksm=bd4dcbe18a3a42f71ae24bd208a498ba8d8d041b3cebd62338a6966fd06cea6cd49fc5bb71c7&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647090&amp;amp;idx=1&amp;amp;sn=964592abd76ed569c24658aa2de198d3&amp;amp;chksm=bd4dcbe18a3a42f71ae24bd208a498ba8d8d041b3cebd62338a6966fd06cea6cd49fc5bb71c7&amp;amp;scene=21#wechat_redirect"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647395&amp;amp;idx=1&amp;amp;sn=65087bd3a608a270f4ac6217e3ed2a22&amp;amp;chksm=bd4dca308a3a43264d5a3d53f0940fa2adebc6833bf8689ef2e2c88c3d3776e2b56339efdb51&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647395&amp;amp;idx=1&amp;amp;sn=65087bd3a608a270f4ac6217e3ed2a22&amp;amp;chksm=bd4dca308a3a43264d5a3d53f0940fa2adebc6833bf8689ef2e2c88c3d3776e2b56339efdb51&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxWBvsbicQJtME9FkQRWr0tEiaCT3iasibzavxLP5ibY3GVbKfFbLMo9ibyyZzEPcJNfvMKURKyj81oHc6yQ/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/0?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 07:28:15 +0800</pubDate>
    </item>
    <item>
      <title>暮光女主发AI“论文”?维密超模学编程?女神跨界靠干货还是颜值？</title>
      <link>http://www.iwgc.cn/link/4440885</link>
      <description>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/YBUEwItJQ8OnLEytNCsTbm3SSiaKxicVEhGSfZC7eywG5X5VPyYPaAxFI6TAayWPOw5BLNzDcl9lzUWGO3eABzSw/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大数据文摘作品，转载要求见文末&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;作者 |&amp;nbsp;&lt;/span&gt;&lt;span&gt;Molly 魏子敏&lt;/span&gt;&lt;/span&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;p&gt;&lt;span&gt;这两天，科技圈被暮光之城女主角、撩妹女魔王Kristen Stewart最新get的撩妹新技能刷屏了：小k作为联合作者，发了一篇关于“风格迁移（style transfer）”的AI“论文”。&lt;span&gt;事实上，跨界科技圈和编程的演艺圈女神不止Stewart一个。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;这篇“论文”真的这么厉害吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于研究本身来说，是否应该给予如此高的评价？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;这篇仅有三页的短文&lt;/span&gt;与其说论文，更确切应该说是一篇“应用说明书”。论文&lt;/span&gt;&lt;span&gt;名称为&lt;/span&gt;&lt;em style="font-size: 15px;"&gt;Bringing Impressionism to Life with Neural Style Transfer in Come Swim&lt;/em&gt;&lt;span&gt;，事实上是一篇高水平的案例研究，探索了神经风格迁移在电影制作环境中的相关应用。描述了如何通过神经风格迁移将印象派风格带入到其新作品&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em style="font-size: 15px;"&gt;Come Swim&lt;/em&gt;&lt;span&gt;中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;而所谓“发表”也不是确切的说法。这篇文章的发布平台&lt;strong&gt;arXiv是&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;康奈尔大学的一个在线研究数据库。被&lt;strong&gt;arXiv平台发布最多代表着文章被收录，而是否真的被学术期刊选中发布，则又是另外一回事了。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/YBUEwItJQ8OnLEytNCsTbm3SSiaKxicVEhfIxbQ93nj4Tx9wGtyhhZIek7sx6SHlxfysRV2rJIWeaADobQJclTOw/0?wx_fmt=gif"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;大数据文摘后台回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;风格迁移&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”获取论文全文。本文文末将针对论文本身做进一步叙述。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然而不可否认，&lt;span&gt;Stewart自带光环的属性还是将已经在风口浪尖的“人工智能”和“风格迁移”再一次带入大家的视线，当然也吸引了一票科技圈大咖的热议。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;乔治亚理工副教授、&lt;/span&gt;&lt;span&gt;AI&lt;/span&gt;&lt;span&gt;专家&lt;/span&gt;&lt;span&gt;Mark Riedl&lt;/span&gt;&lt;span&gt;：我之前老拿“暮光”在我的人工智能课上说段子，现在“暮光”反扑了……&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXle3xqiabyZ04ulhE1weKTTwMW9vEdm8g6YSlibEGqia3pu3P6OFH5Q5RL4g/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;FYI这是Mark Riedl用暮光讲AI的板书图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXlecD8myWNHlUblczfOibPlGrZFWc6uXdBqN1Pd00ibsqDH0GYtjq8OQ5Lw/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleIQZvC7VfzQ8TGcxmxe2KBjswCTmllUngwtmaXCpLVbk2U4yxQmAU2Q/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Jetpac&lt;/span&gt;&lt;span&gt;（已被谷歌收购）&lt;/span&gt;&lt;span&gt;CTO&lt;/span&gt;&lt;span&gt;、谷歌&lt;/span&gt;&lt;span&gt;TensorFlow&lt;/span&gt;&lt;span&gt;团队深度学习研究员&lt;/span&gt;&lt;span&gt;Peter Warden激动地发twitter称&lt;span&gt;：&lt;/span&gt;Kristen Stewart&lt;/span&gt;&lt;span&gt;刚刚在一篇学术论文里提到了TensorF&lt;/span&gt;&lt;span&gt;low&lt;span&gt;！&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXle5DISVWvgLcGJ7gniaAAEGicSdRA0rLLwThzZfxskJP0UyT87iboia8fTicA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;但是对于研究本身，科技界兢兢业业的高智商群体也不是这么好糊弄的：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleyZWm62kEibk07dAvaiaicXPOZQ6ZzOfJVozM6TOezaFjsNIibr1FfDBXfQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;我还是想看Stewart写至少一行代码，否则这件事就是在搞噱头。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;当然也有不少人对于&lt;span&gt;Stewart的探索表示赞赏，作为一名制作人，能够在本职工作之余浅探AI圈，也是很有趣的事情。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleNeGY8qsh5ibZc1QAnwj3LJxngQ9nWzc23Sm1BZhAVOan9HqWhibdWXUw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;上：我想电影的拍摄经历还是让Stewart学到了一些东西，那些发表酸溜溜评论的程序员只是在吃不到葡萄说葡萄酸，醉心自己的代码吧！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;下：她没有想要做全职编程者，她很明显还是在走作家／导演或者制作人的路子。在评价前先了解一下这件事！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;事实上，跨界科技圈和编程的演艺圈女神不止&lt;span&gt;Stewart一个。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;今年23岁的维密天使、高人气超模卡莉·克劳斯（Karlie Kloss）在事业蒸蒸日上时卸下维密天使光环，只为去纽约大学攻读商科和学习编程。之前，女神在满当当的走秀档期中已经在&lt;/span&gt;编程学校Flatiron School跟着艾维·弗洛巴姆（Avi Flombaum）教授学习编程一段时间了，深感编程魅力后，在模特事业和编程冲突的情况下，毅然辞去工作专心学习，全身心阐述了“明明可以靠颜值，却偏要拼才华”。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;女神KK&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;能走秀也能修电脑&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;用公益鼓励女性编程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;卡莉·克劳斯（Karlie Kloss）算是当前最红的T台模特之一，不仅颜美多金，还是学霸，在超模事业如日中天的时候，她决定退出超模舞台，去系统学习编程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleHEqjEpY8icnMAOgsYVGWLIFXU9icqsjEsXXtQRwNVsA9Iibk9gHkARChQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看这素颜上课的认真节奏，好羡慕她周围那些工科男，不知道能不能专心听讲。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXle1jgzq4U3AIVUO3HYNgNmibIzJVkJaaKyrJjWyft9us6X4WeYQoVNoiaA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;KK ins的风格也在编程后变成了这样：&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如深夜图书馆啃书。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXle3P41PBMZyDvKqicPVQkC0mMy98S1rhYn09v7UYDF2Sc4TfNMUd6wPBg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们“窥探”下女神敲出的代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleJtQemBPQ8z1L8mH9FrwMSQg6edCPAZpY6CiaSDTj9YoGElK74VQeXRg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;甚至肢解了一台笔记本：“哇，我们的电脑竟然是这样工作的”。能走秀、会拆电脑、敲代码的妹子，男友女友力双重爆棚！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXlerbNAsP6iaXofX7SmuKImbBjmb8kK1oMNnpxTicFYs8Gb8RmRTwahRjcw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了编程，KK还做了一件更酷的事情，创立了“Kode with Klossy”，只是一家非盈利组织，旨在让更多年轻女性也能接触到编程，让有志在科技领域发展的年轻女性得到所需的技能。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kloss在自己的YouTube和Instagram频道上呼吁13到18岁的年轻女性通过发视频和写文章的方式，说明自己为什么想学编程。最能说服她的几位将获得用于编程课的奖学金。短短几天内，克劳斯就收到了上千份材料，这些材料也成为了Kode with Klossy的基石。&lt;/span&gt;　　&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxWpBvh4yicTkQBducR4vfXleCx3UGqiaHmD5USZfPvW8F1ybPphZbdLz3ibZqdCzHWXiaGYNnl8KKiccxw/0?wx_fmt=jpeg"/&gt;&lt;span&gt;Kloss还有个更大的愿景：收窄科技行业的“性别鸿沟”。她相信，自己不仅仅是在给年轻女性提供编程课，还是在向她们安利新科技的创造。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kloss说，比起男性，女性能追随的榜样不多，因为科技行业的顶尖人才中女性数量极少。除非亲眼看到能成为自己榜样的女性，否则很难想象自己身处这个行业中是什么样子。Kloss的解决方案是，让更多人知道，编程不仅仅是宅男的专利。她说：“我不是看不起宅男，只是想告诉大家，编程这件事情任何人都能做。”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Kristen Stewart文章简述&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;论述神经风格迁移在电影制作环境中的应用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基于短片中对&lt;span&gt;神经风格迁移的应用&lt;/span&gt;&lt;em&gt;&lt;span&gt;，&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;本周&lt;span&gt;Kristen Stewart&lt;/span&gt;作为联合作&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;者&lt;/span&gt;&lt;span&gt;&lt;span&gt;在康奈尔大学的在线研究数据库&lt;/span&gt;arXiv&lt;span&gt;上发了一篇关于“风格迁移（&lt;/span&gt;style transfer&lt;/span&gt;&lt;span&gt;）”的文章。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;这篇仅有三页的短文名称为&lt;/span&gt;&lt;em&gt;Bringing Impressionism to Life with Neural Style Transfer in Come Swim&lt;/em&gt;&lt;span&gt;，事实上是一篇高水平的案例研究，探索了神经风格迁移在电影制作环境中的相关应用。描述了如何通过神经风格迁移将印象派风格带入到其新作品&lt;/span&gt; &lt;em&gt;Come Swim&lt;/em&gt;&lt;span&gt;中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/YBUEwItJQ8OnLEytNCsTbm3SSiaKxicVEhfIxbQ93nj4Tx9wGtyhhZIek7sx6SHlxfysRV2rJIWeaADobQJclTOw/0?wx_fmt=gif"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;大数据文摘后台回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;风格迁移&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”获取全文。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;Quarz&lt;/em&gt;&lt;span&gt;的一篇报道称，&lt;/span&gt;&lt;em&gt;Come Swim&lt;/em&gt;&lt;span&gt;的创作灵感最初就源自&lt;/span&gt;Stewart&lt;span&gt;的一幅绘画。这篇文章阐述了斯图尔特自己在风格迁移方面的尝试，这是机器学习领域的一种颇为流行的应用方式，使用卷积神经网络实时对视频进行艺术风格转换。&lt;/span&gt;Stewart&lt;span&gt;和她的制作团队使用这项技术把自己的印象派绘画风格重绘电影短片&lt;/span&gt;Come Swim&lt;span&gt;》中的关键场景。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;该文章的共同作者还包括该片制作方&lt;/span&gt;Starlight Studios&lt;span&gt;的一名制作人和一名&lt;/span&gt;Adobe&lt;span&gt;员工。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文章主要记述了神经网络的风格迁移记述在电影行业的应用。在传统的视觉特效行业中，卷积神经网络很少被使用到。并且，相比于实验室里的良好条件，在实际的工业应用上会有许多其他的需求，比如便捷地控制图像效果，合理的硬件资源需求和时间消耗。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;进行风格的迁移，需要一个已经训练好的卷积神经网络模型。综合考虑了风格迁移的效果和时间资源的消耗，&lt;/span&gt;Kristen Stewart&lt;span&gt;的电影使用的是&lt;/span&gt;VGG16&lt;span&gt;模型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;为了得到更好的控制参数，&lt;/span&gt;Kristen Stewart&lt;span&gt;团队进行了一系列的实验。比如为了得到迭代次数的一个良好的估计，他们把一张图片进行了充分的迭代，获得了一张风格转换的基线。然后调整算法的迭代次数，观察何时效果有较大的偏离，获得了迭代次数的一个可靠的范围。此外，向风格图片中添加一些纹理和颜色的遮挡，可以获得更丰富的显示效果。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXletZ9CNxbiaKzNZeZ8cS5lSTtwXVWEgPiasUUKUm1YdBtjr9t9dicwTPficg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此外，风格图片的质量对最后生成的图片也有重要的影响。下图左侧是使用手机拍摄的风格图片，右侧是更高质量的风格图片。发现高质量的风格图片极大地提高了结果图像的质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxWpBvh4yicTkQBducR4vfXlefHMtiab8gYOWtejV0spIdkBBE3dWTbicEZ4zFnCKvvIzuPqPqjEQZ3pQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于另一个参数，风格迁移率，也会对图片真实程度产生很大的影响。这个影响大体上是一个指数函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;section&gt;&lt;p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;关于转载&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;如需转载，请在开篇显著位置注明作者和出处（转自：大数据文摘 |bigdatadigest），并在文章结尾放置大数据文摘醒目二维码。无原创标识文章请按照转载要求编辑，可直接转载，转载后请将转载链接发送给我们；有原创标识文章，请发送【文章名称-待授权公众号名称及ID】给我们申请白名单授权。未经许可的转载以及改编者，我们将依法追究其法律责任。联系邮箱：zz@bigdatadigest.cn。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;志愿者介绍&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;回复“&lt;span&gt;志愿者&lt;/span&gt;”了解如何加入我们&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxXwKicwomKiakACMbLak6aY6No7Ozdp2d57wLKiaR0OqTy6icib5z8EEiaAVbCRkYc82hLv2JEHwtaOMyxQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;往期精彩文章&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;由深度神经网络想到的人生意义和哲理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651645398&amp;amp;idx=1&amp;amp;sn=8f38ffc1f7b9937ffa882aa58a2b0c84&amp;amp;chksm=bd4dc2458a3a4b53a9eec7a251d53692e670ec92b2402cea9c9571aa180b619c1be8faa44ccc&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651645398&amp;amp;idx=1&amp;amp;sn=8f38ffc1f7b9937ffa882aa58a2b0c84&amp;amp;chksm=bd4dc2458a3a4b53a9eec7a251d53692e670ec92b2402cea9c9571aa180b619c1be8faa44ccc&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wc7YNPm3YxWBvsbicQJtME9FkQRWr0tEiaUBU4wh4LQXetWAeyfcoMYRnbnUWwGH1euvGZiaicejFIu0MdxK0zr6Jw/0?wx_fmt=gif"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/640?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 22 Jan 2017 07:28:15 +0800</pubDate>
    </item>
    <item>
      <title>只有天才才能做数学吗？</title>
      <link>http://www.iwgc.cn/link/4431231</link>
      <description>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9fo45YfNYbpFEQplAwzUGhQIafA5kg3NKvxAWtibdYfCeM1un3RSHLiaQ/0?wx_fmt=jpeg"/&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;只有天才才能做数学吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;答案绝对是——&lt;span&gt;No&lt;/span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了能为数学作出比较重要的贡献，你确实需要努力工作，熟练掌握自己的领域，并尽可能学习其他领域和各种工具的使用，还需要提出自己的问题、与其他数学家交流，然后再思考思考数学的“大蓝图”（big picture）。当然，你确实需要一些聪明才智、足够的耐心以及成熟的心智。&lt;strong&gt;但是你并不需要所谓“天才基因”这样的“魔杖”，并不是说有了它们，你就能无中生有般地产生深刻的洞见、意想不到的证明或着其他超能力。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;公众眼里的天才形象往往是孤军奋战（甚至有些疯狂），他们忽视现有的文献和其他传统的做法，大脑中灵光乍现（当然有时可能还伴有灵感出现前的煎熬），于是对一个问题的天才之解就此诞生，连相关领域的专家都摸不着头脑。这确实是一个充满魅力而又浪漫的形象，但是却很不符实——至少在现代数学的世界中。&lt;strong&gt;我们当然有一些伟大、深刻并且影响深远的成果和洞见，但是它们往往来自于辛苦的工作和前人几年、几十年、甚至几个世纪的成果的积累。从一个阶段的理解到下一个阶段的飞跃往往是非常不平凡的，并且经常出人意料，但是它们仍然是在前人工作的基础上做出来的，绝对不是无中生有。&lt;/strong&gt;怀尔斯（Andrew Wiles）攻克费马大定理，以及佩雷尔曼（Grigori Perelman）攻克庞加莱猜想都是如此。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际上，我觉得当今的数学研究的现状反而比当年我还是学生时对数学家浪漫形象的憧憬更加令我满足。当时我以为数学的发展都是由一些少有的天才的神秘灵感推进的，但事实是，当今的数学研究基本都来自于长期的努力工作，需要直觉的驱动、文献阅读的积累，有时可能还需要一些运气。&lt;strong&gt;实际上，对“天才”这一概念的狂热追捧会造成很多问题，因为哪怕再天才的人，都不可能日复一日地重复产生这些（非常稀有的）灵感，还得都是正确且一致的。&lt;/strong&gt;（如果有人跟你说他能做到这一点，你最好对此表示怀疑。）一些人会因此对那些“大问题”、“大理论”过分着迷，一些人会因此过分坚信自己成果的正确性，还有一些人会因此失去继续做数学的勇气。同样地，将成果过分地归因于无法控制的天才，而非勤奋、良好的计划和教育这些人为控制的因素，也会造成很多问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/6AcP1PhrICia2R0zas0rY3vVHcP4qicr32nLvgHC0aCdeicCE7MvYyOySS5fEm86pExReNxmuLMamWFjk8ZTicHfibg/0?"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;em style="color: rgb(136, 136, 136); font-size: 13px; line-height: 1.75em; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;请谨慎使用“天才”、“灵感”这样的字眼。它们就像是魔杖，任何想要了解真相的人都不应该被它们蒙蔽。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;——何塞·奥特嘉·伊·加塞特（José Ortega y Gasset），《天才手记》&lt;/span&gt;&lt;span&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/em&gt;&lt;em style="max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，尽管有些人鄙视“天才”这样的字眼，但不可否认的是，在任何时候，都有一些数学家会反应更快、更有经验、更有效率、更仔细或者更有创造力，但这并不是说只有“最好”的数学家才应该做数学，这是混淆了绝对优势（absolute advantage）和比较优势（comparative advantage）的概念；况且，有趣的数学研究领域和问题非常多，远远不是几个“最好的”数学家所能全部包含的；此外，有时你凭借你的工具或者想法会发现其他一些优秀的数学家忽视的东西，因为再优秀的数学家也会有不擅长的领域。只要你受过教育、有兴趣并且有一些才能，总会存在一些数学领域，在此你可以作出坚实而有用的贡献。它们可能不是最光鲜的数学领域，但是这才是健康的发展模式。历史的经验告诉我们，很多看似无聊的细枝末节，却最终会比一些看似“伟大”的问题更加重要。同样，在一个人有能力处理有名的“大问题”之前，也应该尽量在领域中看似不太重要的部分试试手。去看看一些有名的数学家早期发表的论文，你就理解我所说的了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有些时候，太多的天赋可能还会有害于一个人长期的数学才能的发展。例如，如果问题很容易，这样的人可能不会花太多的精力去刻苦钻研，不能问出深刻的问题，或者会眼高手低，所以最终很可能会陷入瓶颈。同样，如果一个人习惯了简单的成功，他可能就不会培养出攻克困难问题所需的足够耐心。天分当然是重要的，但是如何发展和培养天分更加重要。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;专业的数学研究不是一项运动（和奥数竞赛有着天壤之别）&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。数学的目标不是获得最高的排名、最高的分数或者最多的奖项，相反，最重要的目标是提升对数学的理解（不仅是为你自己，更为了你的同行、学生），以及促进数学的发展和应用。出于这个目的，数学欢迎任何想加入这个行列的人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原载于：terrytao.wordpress.com&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;撰文：陶哲轩（Terence Tao，UCLA数学系教授）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;翻译：李轩（清华大学数学系）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;往期精彩文章&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt; &amp;nbsp;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;16位天才的思维创造让数据科学更简单&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651642152&amp;amp;idx=1&amp;amp;sn=fa9057b12811861b6203fc244328d57b&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651642152&amp;amp;idx=1&amp;amp;sn=fa9057b12811861b6203fc244328d57b&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9dFHNturJhD2GZjmOgmkibLb02LW9X6ISrDNGxMlOCv7eHJ1HPp7p0eQ/0?wx_fmt=gif"/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/640?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 21 Jan 2017 07:29:41 +0800</pubDate>
    </item>
    <item>
      <title>用Spark和DBSCAN对地理定位数据进行聚类</title>
      <link>http://www.iwgc.cn/link/4431232</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy91hncR1oZib36D1BGqOibZjCThz95nfDTGCCacFR70X2lGOCCz91ia8R0Q/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;转自OReilly Data&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习，特别是聚类算法，可以用来确定哪些地理区域经常被一个用户访问和签到而哪些区域不是。这样的地理分析使多种服务成为可能，比如基于地理位置的推荐系统，先进的安全系统，或更通常来说，提供更个性化的用户体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这篇文章中，我会确定对每个人来说特定的地理活动区域，讨论如何从大量的定位事件中（比如在餐厅或咖啡馆的签到）获取用户的活动区域来构建基于位置的服务。举例来说，这种系统可以识别一个用户经常外出吃晚饭的区域。&lt;/span&gt;&lt;/p&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;使用DBSCAN聚类算法&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;首先，我们需要选择一种适用于定位数据的聚类算法，可以基于提供的数据点的局部密度确定用户的活动区域。DBSCAN算法是一个不错的选择，因为它自下而上地选择一个点并在一个给定的距离寻找更多的点。然后通过重复这个过程扩展寻找新的点来扩展类簇，直到无法再扩大为止。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个算法可以通过两个参数进行调试: ε，用来确定离给定的点多远来搜索；和minPoints，即为了类簇扩展，决定一个给定的点的邻域附近最少有多少点。通过寻找邻近点，本地类簇开始出现，各种形状的类簇逐渐可以被识别(请参见图1的简化描述)。过于孤立的点和离其他点太远的点则会被分配到一个特殊的异常值集群。这些独特的属性使DBSCAN算法适合对地理定位事件进行聚类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/8O5borklZbl4OU2RxZI5lBtqhfFte6cUGB79eD71ObRkVgXNN7uhVLyVeO7xGNu9uib1I7fFbrg04V2wmuS435g/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;图1：两由DBSCAN算法(ε= 0.5和minPoints = 5)聚类得出的两个类簇。一个是L型，另一个是圆形。互相靠近的点被分配到相同的类簇。黑色的孤立点被视为“异常点”。图片来自Natalino Busa。&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;在Spark里使用PairRDDs&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;在大多数实际应用中，机器学习系统必须处理数以百万计的用户和数十亿的事件。因此，随着越来越多的用户和事件被添加到系统中，一个精心设计的数据处理通道需要具备快速和可伸缩的特点。这就需要分布式计算。就我们的目标而言，Spark作为一个分布式处理引擎，是一个很好的选择，因为它提供了能够在多机器上并行执行许多基于地理定位的聚类任务的计算框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在Spark里，用户地理定位数据可以使用称为PairRDD的对象来建模。PairRDD是一个分布式的元组集合(键，值)，根据关键字段被划分到多个机器。特别是对于地理定位数据，我们选择的键是用户标识符，值是给定用户的所有签到的聚合列表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;地理定位数据放置在一个n×2的矩阵中，其中第一列表示经度，第二列表示纬度。参见下面的例子，这是Spark数据类型中的PairRDD集合，以及元祖的一个例子：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;org.apache.spark.rdd.RDD[(Long, breeze.linalg.DenseMatrix[Double])]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(15474,&amp;nbsp; DenseMatrix( 40.8379525833 -73.70209875&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;40.6997066969 -73.8085234165&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;40.7484436586 -73.9857316017&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;40.750613794&amp;nbsp; -73.993434906 ))&lt;/span&gt;&lt;/p&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;DBSCAN在Spark中并发运行&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;DBSCAN算法在多种语言和包里都有实现。下面的代码片段是基于DBSCAN 在GitHub上的scala&amp;nbsp;nlp /nak库中的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;假设给定用户经常访问城市的三个区域，一个区域是经常参加酒宴和聚会的，另一个是经常来舒适放松的，还有一个是和朋友一起吃晚餐的。如果这些区域位于城市的不同部分，下面的代码通过查看每个事件的位置将其分到不同类簇。在这段代码中，我们寻找距离约100米的范围内的事件(约0.001度)，如果至少有三个点互相接近，我们便开始进行聚类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;import breeze.numerics._&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;import nak.cluster._&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;import nak.cluster.GDBSCAN._&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;def dbscan(v : breeze.linalg.DenseMatrix[Double]) = {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;val gdbscan = new GDBSCAN(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DBSCAN.getNeighbours(epsilon = 0.001, distance = Kmeans.euclideanDistance),&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DBSCAN.isCorePoint(minPoints = 3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;val clusters = gdbscan cluster v&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后，我们将用Spark对整个用户集合来并行dbscan算法。 这个操作作为Spark的PairRDD功能的一部分已经可以使用了，它叫做mapValues：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;val clustersRdd = checkinsRdd.mapValues(dbscan(_))&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简而言之，定位数据的聚类在Spark中可以这样实现，将位置的原始PairRDD转换到一个新的PairRDD，其中元组的键值分别代表用户的ID，和其对应的定位类簇。一旦定位数据被聚类完毕，它可以进一步概括总结，比如确定每个类簇的边界框或轮廓&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2显示了从一个使用Gowalla（用户在特定地点签到分享他们的位置的社交网站）的匿名用户的定位数据中提取的一个示例类簇。图中是佛罗里达地图，特别是开普科勒尔地区，签到的地方会有一个带颜色的点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事件根据其发生的地理位置被聚类。例如在Estero Bay&amp;nbsp;(暗橙色圆点)漫步、在机场的聚集活动(棕色点)和森尼贝尔岛的聚集活动(绿点)属于不同的聚类(ε设定为3公里，minPoints设置为3)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/8O5borklZbl4OU2RxZI5lBtqhfFte6cUU9RE7ibRibW9fmSBCM9SFdCuYmjFjfu0uH2CbpY6PuWiaiaiaMJxiaSU1qYg/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;图2：从用户的佛罗里达开普科勒尔区域的Gowalla数据集中提取聚类的例子。注意点集合的密度与聚类正确匹配，异常值标记为孤立的黑点。图片来自Natalino Busa。地图重叠:OpenStreet地图。&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;进一步增强地理定位数据分析&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;这一分析是围绕地理坐标进行的，但可以很容易地扩展到其他事件属性上，如签到时间、场地类型(餐厅、体育馆、博物馆)或用户的状态。聚类算法还可以将用户社交网络中朋友所生成的事件考虑进来，从而得以应用于一个更大的上下文。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Spark为SQL数据处理提供了一个模块，可用于在运行聚类算法之前运行查询来过滤和收集事件。通过这种方式，数据处理通道可以在Spark上完整地实现SQL和机器学习的统一框架。这种扩展的数据管道对特定类别的事件将提供更准确的聚类结果。&lt;/span&gt;&lt;/p&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;创建一个基于位置的API 服务&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;Spark产生的聚类分析结果可以保存在一个数据存储表中。一个API服务可以查询该表，并确定一个新出现的地理位置点是否属于已知的地区。API服务可以根据用户场景触发适当的行为。例如，它可以通过消息向用户告警、发送通知或提供推荐。&lt;/span&gt;&lt;/p&gt;&lt;h4 style="padding-top: 18px; padding-bottom: 18px; font-size: 24px; max-width: 100%; color: rgb(62, 62, 62); white-space: normal; line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; text-align: center; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;我最初的实验表明Spark提供了坚实的基础设施在大量的用户和事件上来并行处理和分发机器学习算法。此外，Spark通过在一个数据处理框架结合SQL查询和机器学习，加快了数据驱动系统的开发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DBSCAN算法与Spark的结合似乎是一种很有前途的方法，可以抽取准确的地理位置模式，并用于开发基于各种场景的数据驱动、基于位置的应用程序，例如个性化营销、欺诈防范和内容过滤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style="margin-bottom: 10px; font-weight: bold; max-width: 100%; white-space: normal; color: rgb(56, 56, 56); line-height: 32px; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/8O5borklZbl4OU2RxZI5lBtqhfFte6cUlUA12cTC8rPdVp6jbmibAyQYUwD42dg32zMzJWxjKoZ3TqnmsURDDXw/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="margin-bottom: 10px; font-weight: bold; max-width: 100%; white-space: normal; color: rgb(56, 56, 56); line-height: 1.75em; box-sizing: border-box !important; word-wrap: break-word !important; background-color: rgb(255, 255, 255);"&gt;&lt;span&gt;Natalino Busa&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;Natalino在荷兰ING集团任职企业数据架构师，他设计了大规模快速数据驱动的应用程序数据解决方案，如个性化营销、预测分析、欺诈检测和安全管理。他是一个全面的数据专家，在可扩展的服务、数据科学和数据处理系统上有丰富的经验。此前，他担任在荷兰的飞利浦研究实验室的资深科学家，在那里他专注于系统级芯片架构、分布式计算和并行化编译器。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9AdShtY54INehoUrnoXLMQC0R5h0vXicmsibzfBleRhpN7z9ViaoIPlm6A/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;往期精彩文章&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt; &amp;nbsp;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;O'Reilly发布2016数据科学从业者薪酬报告|附下载&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651644435&amp;amp;idx=1&amp;amp;sn=cfdaa8e5713e3d893bcc1e9c0d71074f&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651644435&amp;amp;idx=1&amp;amp;sn=cfdaa8e5713e3d893bcc1e9c0d71074f&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9Xia1vLMQsWft2XMHZpeAn1NCWpM9wBelZBJuEZKganExmIP4K89jorA/0?wx_fmt=gif"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/640?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 21 Jan 2017 07:29:41 +0800</pubDate>
    </item>
    <item>
      <title>这个boring的世界有什么好嗨的？就有！</title>
      <link>http://www.iwgc.cn/link/4431233</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy93zYDYlszmfiaKgPOXf5ibvf0gRH61nQZibyDXUQWodLk7LJe4ZpibmnicHA/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所有的城市都有一样的高楼，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;都有一样办公楼与工地，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有一样的男人与女人，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有一样的加班狗。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如此想，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这真是一个无比boring的世界，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;人们面目模糊，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;把自己活成了所有人。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可是也有一撮人，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他们面目清晰，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有自己的独立面孔，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点缀着这个世界。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;就像以下这几个公众号，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有品有料有嗨点！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;思想独立、观点犀利！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;雷科技&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;leitech）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;每月都有新手机，到底哪个值得你入手？［长按二维码］识别一群搞机圈老司机，带你上路。雷科技为你提供最新数码产品解读、评测，帮你避开在数码产品选购、使用、了解中的那些坑。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9XTrSXm6zto3lt59ibPoEhYZ1sanJ4X8dvKeI9rrQGSFTicUHRg7EZcng/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;互联网分析沙龙&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;techxue）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;一个集互联网干货、资讯和好玩为一体的严肃公号，只是小编有点逗比而已！有多逗比？自己去看看就知道啦～&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9USy0VuHbqDQqBwaPiavZHp97oTZoHQs3nm0tmslicV2Audh9gDnremOw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;笔记侠&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;Notesman）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;-1~6岁CEO都在看的第一手笔记干货，以协作众包的方式传播互联网最前沿的创业笔记，分享大咖演讲、创业论坛和商学院课程的第一手讯息。从高人的分享知识、经验和见解，帮助创业群体加深认知，并获得新机会。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9RNn0wZqCGTV4bx1VDFgOLu1fiaMWpgYhmsuSjEcPOrbCdTTVMk586lg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;飞立拍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;用天空的视角，为你讲最动人的故事，每天一段无人机航拍短视频！&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9MKz72fhwmJwHicxlxxaAtyJS4h5kQabPPs8ibDt70ibibo4BTVaXjLLQVA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;创客星球&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;TheMakers00）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Hey，欢迎来到这片高维度的创造力空间。这里连接着各种最新最酷的产品和创意，可以瞬间点燃你的创新小宇宙！现在就打开属于你的创造力频道。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9iaVfCzicSDwica6hevuC1Mmx9YqdoQLFXumxS2Aiaicgmntp5PLC91S7eJQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;科技茶馆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:kejichaguan）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;知名科技专栏作者@庐陵子村运营的个人自媒体。庐陵子村曾获2013年度钛媒体十大“自由记者”和2013年度donews新锐作者，关注媒体、社交、共享经济、直播、金融、电商、搜索等TMT垂直行业，专栏渠道覆盖各大平台，超过40+。《周鸿祎：何不放弃搜索？》《为什么会有人买锤子手机？》《微信屠城，无辜者有谁？》等文被广泛转载。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9M8RTM7BhpUib0kAr0jdAnnviapiczyaQd7mVodCIWOKvHphQD2Y4X7lXw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;数据猿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;datayuancn）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;数据猿--大数据产业创新服务媒体！传播大数据产业前沿资讯和原创深度好文，更有业界大咖等你来会。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9ykiaCIM92Yk3Ot5tdC0DhDpjGStOWoicr5bfHwTkWVQG4f2cKOHkdwmg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;纽约老李校长&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID: w9148500）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;纽约老李校长，500强企业辞职白手起家做了一个旅游公司，一个马场，被男人装杂志报道过。同时因为分享职场和销售类干货成长知乎大V。他的内容都是从商业实战中而来，接地气，不空洞。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9vGB3A66bFKhTrWN5LX7ECmN5jRicSShFE52lIzAFgbzia96icK2sh08Ww/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;PingWest品玩&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（ID:&amp;nbsp;wepingwest）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;品玩关注国内外一切具有跨界属性的有趣内容，想要打造科技融入生活与消费方式的创新实验室。在这里，有品好玩的科技一切与你有关。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9W2eO5icl08V0W8zuDicSXAkwPAGkVYPXBleQ4lPxR6IUWx9uhYF7WRww/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;大数据文摘&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;/span&gt;&lt;span&gt;ID：BigDataDigest）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;成立于2013年7月，专注数据领域最新资讯、精品案例、一线技术，已成为数据行业最有影响力的新媒体，致力于打造精准数据分析社区。团队成员是一群对数据充满激情、有能力、乐于分享的专业人员，欢迎你来看看不一样的大数据。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9rBwExC3CFxAcPTsSNfFdvpNUZKlwdNl0sbeDTk0DA8Oaq5uFf4vyXw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 21 Jan 2017 07:29:41 +0800</pubDate>
    </item>
    <item>
      <title>马云@达沃斯对话实录:关注未来30年,30岁的人和30人的小企业</title>
      <link>http://www.iwgc.cn/link/4418185</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxUMjFhCSozZYZa0FvexEiaUwxEL4Knx9eSnIJ5qx64d98hzwk4Asr6ial5EiaJnTiakej2KBg3Qw9oUyQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;转自腾讯科技@焦点（id:qqtech）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;北京时间1月17日-20日，“2017冬季达沃斯”在瑞士达沃斯举行。18日晚，马云接受了《纽约时报》专栏作家安德鲁·罗斯·索尔金的采访。这次谈话内容涉及广泛，包括日前与特朗普见面细节、中美贸易等内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;</description>
      <pubDate>Fri, 20 Jan 2017 09:52:21 +0800</pubDate>
    </item>
    <item>
      <title>数据脱口秀 | AI领域你应当关注的14位女性，其中三位是华人</title>
      <link>http://www.iwgc.cn/link/4418187</link>
      <description>&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxUMjFhCSozZYZa0FvexEiaUwMeJ2NGBNIleFGeBtibeRl9ypCqEXVDCSTh8lESQpSOjJLo7Nw2mpR6Q/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据文摘作品，转载要求见文末&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;作者|Craig Newmark&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编译团队|Aileen，徐凌霄&amp;nbsp;&lt;/span&gt;&lt;span&gt;廖远舒&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主播|段天霖 后期|马越&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;用声音传递数据的魅力 &amp;nbsp;欢迎收听数据也疯狂。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;</description>
      <pubDate>Fri, 20 Jan 2017 09:52:21 +0800</pubDate>
    </item>
    <item>
      <title>开发 | 为什么说集成学习模型是金融风控新的杀手锏？</title>
      <link>http://www.iwgc.cn/link/4418188</link>
      <description>&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9Hz3g86hNNSUemtXj25x1wUqO2EnXXw9F6JSdOibMJlyZj1z3lrAdP0Q/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;作者|唐正阳&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据文摘欢迎各类优质稿件&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;请联系&lt;/span&gt;tougao@bigdatadigest.cn&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当下，随着金融市场环境的迅速普惠化，新金融业务也不断下沉到更加广泛的人群。由于这部分人群的强征信数据严重缺失，金融机构纷纷涉猎多元数据包括消费、社交、行为等“大数据”。然而，这些天然带有超高维、稀疏、低饱和等特点的数据也远远超出了线性回归或逻辑回归等模型所能处理的能力范围，这对传统风控提出了巨大的挑战。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;集成学习模型框架很好地解决了这一问题，其核心在于针对不同领域数据使用不同机器学习或深度学习模型对数据进行处理和建模，产生一组“个体学习器”，集成模型通过将多个学习器进行组合，常可获取比单一学习器显著优越的泛化能力。可为什么说集成学习模型是金融风控新的杀手锏呢？这里简单介绍一下集成学习模型的概览，大致分类，主流算法以及在我们金融风控实际场景中到底发挥了怎样的价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;概览&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;集成学习目前在全球各大机器学习、数据挖掘竞赛中使用非常广泛，其概念和思想也风靡学界和工业界。如果要对其进行分类，可以大致划分为模型融合和机器学习元算法两大类，前者其实是一个再学习的过程，将训练出的强学习器组合起来进一步提高性能，后者则是弱学习器的组合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;模型融合&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，我们谈一下模型融合，其思想在实际问题中也很符合大多数人的直觉，聪明的我们其实总可以根据实际问题训练出多个功能强大的学习器，为了进一步提高学习器的能力，可以尝试将其组合起来。好处是增强了我们模型的预测能力或者泛化能力，当然坏处也有，就是这种多模型的学习加上再学习的过程会显著增加计算的代价。在模型融合时，如果把好坏参差不齐的模型融合在一起，那么集成模型的性能可能会比坏的好一些，好的坏一些。所以，当我们在模型融合时，需要每个“个体学习器”是“好而不同”的，“好”指的是个体学习器的性能都要好，“不同”指的是个体模型的类别不同，“个体学习器”可以分别是基于tree-based，神经网络，线性分类器等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“个体学习器”融合的具体方法一般分为三种：第一种是统一融合（Uniform Blending），即分类时使用一人一票的投票方式，回归时使用多个模型的平均值；第二种是线性融合（Linear Blending），即用线性模型将学习器组合起来；第三种是堆融合（Stacking），即用非线性模型将学习器组合起来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;机器学习元算法&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习元算法是把同类别的“弱”学习器通过算法集成起来变为“强”分类器。根据个体学习器的生成方式，可分为Bagging 和 Boosting两大类： 前者个体学习器不存在依赖关系，可同时对样本随机采样并行化生成个体学习器，代表算法如 Random Forest；后者个体学习器之间存在强的依赖关系，在基于前面模型的训练结果（误差）生成新的模型，所以必须串行序列化生成，代表算法包括GBDT、XGBoost。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Bagging的方法对样本、特征属性随机取样产生多个独立模型，然后平均所有模型的预测值，旨在减小方差（Variance）；而Boosting的方法拟合前一个模型的误差， 旨在减小偏差（Bias）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;Random Forest&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随机森林的原理是基于原始样本随机抽样获取子集，在此之上训练基于决策树的基学习器，然后对基学习器的结果求平均值，最终得到预测值。随机抽样的方法常用的有放回抽样的booststrap，也有不放回的抽样。RF的基学习器主要为CART树（Classification And Regression Tree），这里小氪对CART举一个例子，比如预测一个人是否会喜欢电脑游戏，你可以把叶子的分数理解为有多可能这个人喜欢电脑游戏：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9AgDdoTgjLfUj1Zib36Sl8g1nicEZibHRl1gZvp5oCOl2TNyXyojjtKZgA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1图片来源：XGBoost Tutorials&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CART会把输入的属性分配到各个叶子节点，而每个叶子节点上面都会对应一个实数分数。有人可能会问它和决策树（DT）的关系，其实我们可以简单地把它理解为决策树的一个扩展。从简单的类标到分数之后，我们可以做很多事情，如概率预测，排序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;GBDT&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;GBDT（Gradient Boosting Decision Tree）的原理是，首先使用训练集和样本真值（即标准答案）训练一棵树，使用这棵树预测训练集，得到每个样本的预测值，由于预测值与真值存在偏差，所以二者相减可以得到“残差”。接下来训练第二棵树，此时使用残差代替真值作为标准答案，两棵树训练完成后，可以再次得到每个样本的残差。然后进一步训练第三棵树，以此类推，树的总棵数可以人为指定，也可以监控某些指标如验证集上的误差来停止训练。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9om0xC6bdiboy34bKmXzh1bQ826ZgEqSMa2vWINGOpewnXLhJsTjuhoQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2图片来源：XGBoost Tutorials&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如我们使用两棵树来预测一个人是否喜欢电脑游戏，如上图所示，在预测新样本时，每棵树都会有一个输出值，将这些输出值相加，就可得到样本最终的预测值，故小男孩和老人的预测值分别为两棵树预测值的加和。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;XGBoost&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;XGBoost全称为Extreme Gradient Boosting，由于上述GBDT在数据集较大较复杂的时候，可能需要上千次迭代运算，运算较为耗时且精度低，故机器学习大牛陈天奇一手搭建了这个项目尝试从底层c++实现这个问题的改进。XGBoost其最大的特点在于能够自动利用CPU的多线程进行并行，大幅度提高模型运算效率，同时在算法的实现上增加正则项，提升模型的泛化能力。仅在2015年，Kaggle竞赛中获胜的29个算法就有17个使用了XGBoost库；在KDDCup 2015竞赛中排名前十的队伍全部使用了XGBoost库。除了速度快、效果好、功能多等特点，XGBoost在分布式应用上也有优势，可直接在YARN上使用，集成进现有Spark机器学习工具。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;风控实际场景中到底&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;发挥了怎样的价值&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说了这么多，集成学习模型框架到底在金融风控场景中有什么作用呢？这里以现金贷场景为例，给大家看一下直观的例子：比如我们针对互联网行为、APP、运营商等不同领域的数据采用最合适的机器学习或深度学习模型进行处理，就可以得到不同Feature Domain诸如信贷历史、消费能力、社会信用等子模型。我们再将其通过XGboost、LightGBM等最先进的集成学习模型框架进行输出，就可以在反欺诈、违约概率预测、风险定价等风控业务上都可以得到广泛的应用和提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy967sicoZkrc3kpHe5e5qUwZqdJYekCicFn1rnelulrTBRlQDzQEdnGwIg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事实上，这不仅解决了机构不同维度/领域数据使用的难题，因为集成学习框架可以支持不同类型模型算法作为子模型，同时也帮助金融客户实现了更高效准确的针对稀疏、高维、非线性数据的建模过程，大大简化繁琐的特征工程，使得我们的模型具有更强的容错和抗扰动能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;值得一提的是，集成学习模型框架也更易于实现领域知识迁移，单独领域的子模型可以快速迁移应用到新业务领域，帮助我们金融机构实现新金融业务的快速成型和持续迭代优化。此外，不同数据领域的特征自动抽取框架，与集成模型框架紧密结合，大幅度提升模型性能，在应用层，复杂的集成模型输出结果通过LIME模型解释器也可以向风控专家清晰地解释原因，使得预测结果不再黑盒和不可信。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9l1prErFsyML25227FsbKMZic6ia5n892hB5yYOS8ZM4D6oyTBBFcoLiaA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大型成熟金融场景中的实践也证明，集成学习模型除了在稳定性和泛化能力上相对传统模型有极大增强，在最终的效果上也显现出了超出想象的作用，相对成熟的逻辑回归模型最大ks值累积提升已经可以达到约70%及以上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9aSgxt82g17R1tmKFBKvOrFIrZnZnKynJswueOD8ibjyjjvFaEVGriapQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;结语&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现下，对AI的关注非常火热，但AI作为一种强大的工具，如何能在实际场景中帮助我们的业务和企业走的更好，还有很长的路要走。事实上，我们也应冷静地看到将大规模机器学习移植到金融领域，远远不是靠单纯的先进技术就能解决的。而集成学习模型在融合机器与人的经验上发挥了极致的价值，最大化了AI与成熟业务结合的深度，因此回应开篇问题，可以说现阶段它的确是金融风控新的杀手锏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;section&gt;&lt;p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;关于转载&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;/span&gt;如需转载，请在开篇显著位置注明作者和出处（转自：大数据文摘 |bigdatadigest），并在文章结尾放置大数据文摘醒目二维码。无原创标识文章请按照转载要求编辑，可直接转载，转载后请将转载链接发送给我们；有原创标识文章，请发送【文章名称-待授权公众号名称及ID】给我们申请白名单授权。未经许可的转载以及改编者，我们将依法追究其法律责任。联系邮箱：zz@bigdatadigest.cn。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;往期精彩文章&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;上班族必备,日本小哥用深度学习开发识别老板的探测器(附源码)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647090&amp;amp;idx=1&amp;amp;sn=964592abd76ed569c24658aa2de198d3&amp;amp;chksm=bd4dcbe18a3a42f71ae24bd208a498ba8d8d041b3cebd62338a6966fd06cea6cd49fc5bb71c7&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647090&amp;amp;idx=1&amp;amp;sn=964592abd76ed569c24658aa2de198d3&amp;amp;chksm=bd4dcbe18a3a42f71ae24bd208a498ba8d8d041b3cebd62338a6966fd06cea6cd49fc5bb71c7&amp;amp;scene=21#wechat_redirect"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647342&amp;amp;idx=1&amp;amp;sn=83ca9f263cf65bd9b0033930076b6455&amp;amp;chksm=bd4dcafd8a3a43eb2a5d532e4bc384f04dfb6de4a524ff3ff21f15065dfb7512e6fc4a64e6f9&amp;amp;scene=21#wechat_redirect"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647234&amp;amp;idx=1&amp;amp;sn=d3f69f92dc80cb9ecca1ecf8abd913e7&amp;amp;chksm=bd4dca918a3a438747e34ced5ee75c780ed1a9742fe312578c16f234996a2ebf3d2c6209cf2a&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647234&amp;amp;idx=1&amp;amp;sn=d3f69f92dc80cb9ecca1ecf8abd913e7&amp;amp;chksm=bd4dca918a3a438747e34ced5ee75c780ed1a9742fe312578c16f234996a2ebf3d2c6209cf2a&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXHGaicwlV6PKHXD48x13Sy9Jo88yXBkQicKEXFLnWrjNOzlSZCSeltMz2jbJEwIrqvicomLhnbB9B9A/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/0?wx_fmt=png"/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jan 2017 09:52:21 +0800</pubDate>
    </item>
    <item>
      <title>史上导致数百万美元损失的10大计算机漏洞</title>
      <link>http://www.iwgc.cn/link/4400957</link>
      <description>&lt;section&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicyATHaiaFGJXO26jaQ1hrXQgFkib5FbsNiaKVyGGICtSYTkF4Nu7z2wqmw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;授权摘自FreeBuf.COM&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编译|&lt;span&gt;clouds&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在IT时代，计算机漏洞或编程错误（Bug）是一种常见现象，以至于所有的开发软件都有可能存在缺陷或漏洞。你信或不信，反正漏洞就在那里，只是要么根本没人发现，或者有些人对它进行了测试并公开，而有些人对其测试但未公开（0-day漏洞）。任何软件在其生命周期内都会存在漏洞或缺陷，而那些未被发现的漏洞、缺陷、错误或0-day漏洞将会对软件本身和其应用系统产生严重的信息安全威胁，或造成巨大的经济损失，软件开发的安全性设计和测试工作应该得到更多重视。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在此，我们一起来看看——&lt;strong&gt;史上造成数百万美元损失的10大著名安全漏洞。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;阿丽亚娜5型火箭升空爆炸事件&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;阿丽亚娜5型火箭，为欧洲空间局研发的民用卫星一次性运载火箭，名称来源于神话人物阿丽雅杜妮（Ariadne）的法语拼写。1996年6月4日，在风和日丽的法属圭亚那太空发射场，阿丽亚娜5型运载火箭首航，计划运送4颗太阳风观察卫星到预定轨道。但在点火升空之后的40秒后，在4000米高空，这个价值5亿美元的运载系统就发生了爆炸，瞬间灰飞烟灭化为乌有。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;爆炸原因由于&lt;strong&gt;火箭某段控制程序直接移植自阿丽亚娜4型火箭，其中一个需要接收64位数据的变量为了节省存储空间而使用了16位字节，从而在控制过程中产生了整数溢出，导致导航系统对火箭控制失效，程序进入异常处理模块，引爆自毁&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicEYmbFq3kfjmWGI4ABBugiavLbczXANsDqTUgiaVM1o0ZmG6qibGnBtyAA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;爱国者反导系统软件失灵事故&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1991年2月25日，部署沙特宰赫兰基地的美军“爱国者”防空导弹居然没有发现伊拉克来袭的“飞毛腿”导弹，导致美军兵营被炸，28人死亡98人受伤，而事故原因则由于“爱国者”防空导弹系统的一个致命软件错误。该错误导致其雷达探测系统不能有效识别、跟踪和拦截敌方导弹。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在后来的调查中发现，&lt;strong&gt;由于一个简单的计算机bug，使基地的爱国者反导弹系统失效，未能在空中拦截飞毛腿导弹&lt;/strong&gt;。当时，负责防卫该基地的爱国者反导弹系统已经连续工作了100个小时，每工作一个小时，系统内的时钟会有一个微小的毫秒级延迟，这就是这个失效悲剧的根源。爱国者反导弹系统的时钟寄存器设计为24位，因而时间的精度也只限于24位的精度。在长时间的工作后，这个微小的精度误差被渐渐放大。在工作了100小时后，系统时间的延迟是三分之一秒。伊拉克战争开始前，美军专业人士就对“爱国者”导弹的可靠性持怀疑态度。但雷神公司却辩解称，公司在试射“爱国者”导弹过程中的确发现存在难以分辨敌我的问题，但已经进行了技术改进。因此，“爱国者”防空导弹仓促投入了实战。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhic9qkQH3ssiaYPHeWgYahGB0yA3OuZLK5X1eNiaQEajlvB08IDicdTMZQ2Q/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;h2 style="font-weight: bold; line-height: 1.6em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;千年虫问题&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;计算机2000年问题，又叫做“千年虫”、“电脑千禧年千年虫问题”或“千年危机”。缩写为“Y2K”。在90年代末，千年虫问题是许多专家广泛讨论的话题，它可能引发飞机碰撞、轮船偏离航向、证券交易所崩盘等问题。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;问题原因在于某些使用了计算机程序的智能系统（包括计算机系统、自动控制芯片等）中，&lt;strong&gt;由于其中的年份只使用两位十进制数来表示，因此当系统进行（或涉及到）跨世纪的日期处理运算时（如多个日期之间的计算或比较等），就会出现错误的结果，进而引发各种各样的系统功能紊乱甚至崩溃&lt;/strong&gt;。如1970年用70表示，1999年用99表示，所以当到了2000年1月1日时，很多采用这种计时方法的系统都错误地把日期识别为1900年1月1日。从根本上说千年虫是一种程序处理日期上的bug（计算机程序故障），而非病毒。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicDzudibZ0W0I0ArEcWbWOSW9mibwMf7OaFkBajuQbnk7GHlefowib4Xy4g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;PayPal系统错误导致的92万亿客户存款&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2013年6月闷热的一天，56岁的美国男子Chris&amp;nbsp;Reynolds吃惊地发现，在PayPal发给他的对账单中，他的账户余额竟然高达$92,233,720,368,547,800，接近92万亿美元！这个数字富可敌国，是当时世界首富墨西哥电信大亨Carlos&amp;nbsp;Slim的一百万倍。不过，经PayPal及时核实后，发现这是个严重的系统Bug。当他再次登陆自己的账户时，发现里面只剩下自己原本的100美元。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicibbaxHR6qlDWxwnLevc6eOkV9nqTrvYhkmR8B7tWFR1ic4ibrQSYTjfyQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;江南Style点击量超出Youtube播放上限&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2014年，鸟叔的《江南Style》视频在Youtube的播放次数超过了计数上限，导致谷歌不得不对Youtube进行技术调整。Youtube之前的播放计数上限为32位，即最多为2,147,483,647次观看量，当《江南Style》出现后，点击量远远超过该数，谷歌及时调整播放上限为64位，即9,223,372,036,854,775,808次播放数。对此，谷歌在其Google+上发表声明称：“&lt;strong&gt;我们从未想过一段视频的观看量会超过32比特的整数(=2,147,483,647次观看量)，直到我们遇到了鸟叔&lt;/strong&gt;”。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhickYqaRicrm6vajibvsiaOpMXbMelBqvRgiauLxeaYiad2Ete3R9VTg7Aea4A/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;美F-22软件错误导致系统瘫痪&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2008年，美国空军声称12架“猛禽”执行从夏威夷飞往日本的任务中，当途经国际日期变更线的时候，飞机上的全球定位系统都失灵了，多个电脑系统发生崩溃，多次重启也均告失败。飞行员们再也没有办法正确辨识战机的位置、飞行的高度和速度。他们不得不掉头返航，但是幸运的是，当时天气很好，能见度也非常高，这给“猛禽”加油的KC-135型加油机可以引导它们安全降落，顺利地返回位于夏威夷的希卡姆空军基地。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;“猛禽”一到希卡姆机场，不出几个小时，问题就真相大白：&lt;strong&gt;软件开发工程师在电脑系统编码中犯了一个错误，引发了一系列的问题&lt;/strong&gt;。当时美国空军退役少将史皮尔德称：“对于那些“猛禽”战斗机飞行员来说，他们很幸运，因为如果在实战中发生这个问题，他们可能会被击落。并且这个小小的软件错误，将可能成为扭转整个战局的关键点，使美国陷入短时不利的战争局面”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicavjKlBKnH7LLOrNt2ooJcFxqtxrPnD05azK4aejWkRicicxQXCGqv9YQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;32位UNIX系统时间编码机制2038年问题&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;当工程师在上个世纪七十年代开发出世界上的第一款UNIX操作系统时，他们做出了一个很随意的决定，即使用32位签名整数（或数字）来代表时间，整个计时系统的起始时间是1970年1月1日。但这个时间编码机制存在一个严重的问题，因为32位软件能够检测到的最大秒值为2147483647，对应时间为2038年1月19日。也就是说，如果无法解决这个问题，地球上的所有计算机将在那个时刻点将时间计数“归零”，重新从1970年1月1日起算起。与千年虫问题类似。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也就是说所有使用UNIX时间编码的系统将在2038年发生溢出错误，计时器可能会停止工作，跟时间有关的所有系统都会乱套。值得庆幸的是，要解决这个问题，从技术上来说并不困难。我们只要将时钟系统换成更高位数的值比如64位就行了，那样就会得到一个更大的最大值&lt;strong&gt;。64位系统只是将这个问题发生的时间向后推了而已，虽然看似治标不治本，但是其时钟系统的最大计数值对应的时间是2920亿年之后！因此这也等于很好地解决了这个难题。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicRoxYO1fgic8aqQ8pLOVUyzCcGeklA6VxE14OmePMZglamUgPoDUeHaQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;软件竞争条件错误引发美国大面积停电事故&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;2003年8月14日，酷暑中的美国东北部和加拿大部分地区发生大面积停电事故，给当地交通、通信和居民生活造成严重影响。直到16日上午，&amp;nbsp;纽约市才全部恢复正常供电。据电脑专家分析认为，停电的直接原因在于电控系统的竞争条件错误，其中一个操作的两个独立线程在调用一段相同代码时，导致输电系统突然发生故障。由于没有适当的同步和容错机制，线程陷入崩溃，致使输电系统出现连锁反应。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhictGKPFfPEz7zib5aOTbbE6vfic2icJOzcBBqOaxS1jZnCGT3oHrvRTAfibw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;软件错误导致的火星气候探测者号解体失联&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;火星气候探测者号（Mars&amp;nbsp;ClimateOrbiter）是美国国家航空航天局的火星探测卫星，也是火星探测98计划的一部份，于1999年发射进入预定轨道。不幸的是，在运行286天之后，这个价值3亿2760万美元的飞行器失联了。失联原因在于，探测器的地面控制团队使用英制单位来发送导航指令，而探测器的软件系统使用公制来读取指令。这一错误大大改变了导航控制的路径。最后探测器进入过低的火星轨道，在过大的火星大气压力和摩擦下解体。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhiclNrvVaCkXMhpqwickHSMevdIjCOlTbcO0z05XdEBQr9DYqsGMWmET0g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;AT&amp;amp;T9小时长途电话网瘫痪事件&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;90年代，AT&amp;amp;T公司在美国占据70%的长途通讯量，电话呼叫转发超过11.5亿次，是美国最大的电信通讯公司。然而就在1990年1月15日下午，该公司所有客户都不能正常拨打长途电话，全国各地的长途电话交换机接连发生故障，陷入瘫痪。大量技术团队参与了事故应急与分析，原因令所有人瞠目结舌。这个Bug是由一个非常简单的语法错误引起：大型交换机软件中一个C关键字break用法错误。最终AT&amp;amp;T工程师重装了电话交换机以前的软件版本才得以解决这个问题。但在电话网络瘫痪的九个小时里，AT&amp;amp;T公司至少损失6000万美元，该Bug可以算得上一个昂贵的Bug了。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhic9g6JZwuepdGyoIOaDsIKx4L58HKob6gb6MzNARkv1cFjQwJWW4Usbg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;往期精彩文章&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt; &amp;nbsp;点击图片阅读文章&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;100张经典信息可视化图表 看看你的大脑在想什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647294&amp;amp;idx=1&amp;amp;sn=063fd74d3782b2c92a3e0782d5222ddc&amp;amp;chksm=bd4dcaad8a3a43bb515bb9a400c2d7db384aeca973c69602f944306a71a229fdbab8aea923e3&amp;amp;scene=21#wechat_redirect" target="_blank" data_ue_src="http://mp.weixin.qq.com/s?__biz=MjM5MTQzNzU2NA==&amp;amp;mid=2651647294&amp;amp;idx=1&amp;amp;sn=063fd74d3782b2c92a3e0782d5222ddc&amp;amp;chksm=bd4dcaad8a3a43bb515bb9a400c2d7db384aeca973c69602f944306a71a229fdbab8aea923e3&amp;amp;scene=21#wechat_redirect"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wc7YNPm3YxXdh9ibxUxhcgg6nicSugpzhicLAq1MjRicXlziaB1CX5wnWjVyRN0XlwHfeNgnhbUZOBOYNyXgu4tviaYw/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/wc7YNPm3YxVGgiaCz8mADmaWcFx8Tic10LGmBkg7nRXoNdjUkClHPyceib2BHR2Gfvms1EUgD9zdjAZqDaoBkZEcg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wc7YNPm3YxW53g6Ix8EodYImib26axZ2tk10fakric2JroIMzW4Gab0PU16wNVaMz4QDe2bE5xeB6y1QU5y0GElw/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;/section&gt;</description>
      <pubDate>Thu, 19 Jan 2017 06:34:58 +0800</pubDate>
    </item>
  </channel>
</rss>
